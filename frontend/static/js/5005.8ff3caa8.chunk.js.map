{"version":3,"file":"static/js/5005.8ff3caa8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/utils/useSlot.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","Pages/Reports/employeeAbstract.jsx","Components/filterableTable2.jsx","Components/tablecolumn.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Card, CardContent, Paper, IconButton, Chip, Avatar } from '@mui/material';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { AccountCircle, TaskAlt } from '@mui/icons-material';\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport { checkIsNumber, formatTime24 } from \"../../Components/functions\";\r\n\r\nconst EmployeeAbstract = ({ loadingOn, loadingOff }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const [empData, setEmpData] = useState({});\r\n    const { contextObj } = useContext(MyContext);\r\n    const [userDropDown, setUserDropDown] = useState([]);\r\n    const [filter, setFilter] = useState({\r\n        UserId: parseData.UserId,\r\n        Name: parseData.Name,\r\n    });\r\n\r\n    useEffect(() => {\r\n        setEmpData({});\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n        fetchLink({\r\n            address: `dashboard/employeeAbstract?UserId=${filter?.UserId}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setEmpData(data.data[0])\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        })\r\n    }, [filter?.UserId])\r\n\r\n    useEffect(() => {\r\n        if (Number(contextObj?.Print_Rights) === 1) {\r\n            fetchLink({\r\n                address: `masters/users/employee/employeeAllDropDown?Company_id=${parseData?.Company_id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setUserDropDown(data?.data?.sort((a, b) => String(a?.Name).localeCompare(b?.Name)))\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Card component={Paper}>\r\n\r\n                <div className=\"p-3 m-0 border-bottom row align-items-center\" >\r\n                    <div style={{ fontSize: '24px' }} className=\"flex-grow-1 col-lg-8 col-md-7 col-sm-4 col-12\">USER INFO</div>\r\n                    <div className=\"col-lg-4 col-md-5 col-sm-8 col-12\">\r\n                        {Number(contextObj?.Print_Rights) === 1 && (\r\n                            <Select\r\n                                value={{ value: filter?.UserId, label: filter?.Name }}\r\n                                onChange={(e) => setFilter({ ...filter, UserId: e.value, Name: e.label })}\r\n                                options={[\r\n                                    { value: parseData?.UserId, label: parseData?.Name },\r\n                                    ...userDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isDisabled={Number(contextObj?.Print_Rights) === 0}\r\n                                isSearchable={true}\r\n                                placeholder={\"User Name\"}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <CardContent className=\"py-2\">\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6 p-2\">\r\n                            <div className=\"d-flex align-items-center rounded-4 p-2 border\">\r\n\r\n                                <div className=\"pe-3\">\r\n                                    <IconButton className=\"border p-1\">\r\n                                        <AccountCircle sx={{ fontSize: '50px' }} className=\"text-muted\" />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                                <div className=\" flex-grow-1\">\r\n                                    <h6 className=\"mb-0 text-primary\">{empData?.Name}</h6>\r\n                                    <p className=\"mb-0 fa-14\">{empData?.UserType}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 p-2\">\r\n\r\n                            <div className=\"d-flex align-items-center rounded-4 p-2 border\">\r\n\r\n                                <div className=\"pe-3\">\r\n                                    <IconButton className=\"border p-1\">\r\n                                        <TaskAlt sx={{ fontSize: '50px' }} className=\"text-muted\" />\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                                <div className=\" flex-grow-1\">\r\n                                    <p className=\"mb-0 fa-14 d-flex pe-2\">\r\n                                        <span className=\"flex-grow-1\">Projects</span>\r\n                                        {empData?.Projects?.length}\r\n                                    </p>\r\n                                    <p className=\"mb-0 fa-14 d-flex pe-2\">\r\n                                        <span className=\"flex-grow-1\">Tasks</span>\r\n                                        {empData?.AssignedTasks?.length}\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <hr className=\"text-muted\" />\r\n\r\n                    <h6 className=\"mt-2 mb-3 ps-3\">Projects ( {empData?.Projects?.length} )</h6>\r\n\r\n                    <div className=\"px-3\">\r\n                        {empData?.Projects?.length > 0 && empData?.Projects?.map((o, i) => (\r\n                            <Chip\r\n                                key={i}\r\n                                color=\"primary\"\r\n                                avatar={\r\n                                    <Avatar className=\"text-uppercase\">\r\n                                        {o?.Project_Name[0]}\r\n                                    </Avatar>\r\n                                }\r\n                                className=\"mx-1\"\r\n                                label={o?.Project_Name}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <h6 className=\"mt-2 mb-3 ps-3\">Tasks ( {empData?.AssignedTasks?.length} )</h6>\r\n\r\n                    <FilterableTable\r\n                        columns={[\r\n                            {\r\n                                Field_Name: \"Task_Name\",\r\n                                Fied_Data: \"string\",\r\n                                isVisible: 1,\r\n                                OrderBy: 1,\r\n                            },\r\n                            {\r\n                                Field_Name: \"Task_Desc\",\r\n                                ColumnHeader: 'Description',\r\n                                Fied_Data: \"string\",\r\n                                isVisible: 1,\r\n                                OrderBy: 2,\r\n                            },\r\n                            {\r\n                                Field_Name: \"Est_Start_Dt\",\r\n                                ColumnHeader: 'From Date',\r\n                                Fied_Data: \"date\",\r\n                                isVisible: 1,\r\n                                OrderBy: 3,\r\n                            },\r\n                            {\r\n                                Field_Name: \"Est_End_Dt\",\r\n                                ColumnHeader: 'To Date',\r\n                                Fied_Data: \"date\",\r\n                                isVisible: 1,\r\n                                OrderBy: 4,\r\n                            },\r\n                            {\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => row?.Sch_Time ? formatTime24(row?.Sch_Time) : row?.Sch_Time,\r\n                                ColumnHeader: 'Start Time',\r\n                                isVisible: 1,\r\n                                OrderBy: 1,\r\n                            },\r\n                            {\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => row?.EN_Time ? formatTime24(row?.EN_Time) : row?.EN_Time,\r\n                                ColumnHeader: 'End Time',\r\n                                isVisible: 1,\r\n                                OrderBy: 1,\r\n                            },\r\n                            {\r\n                                Field_Name: \"Sch_Period\",\r\n                                ColumnHeader: 'Duration',\r\n                                Fied_Data: \"string\",\r\n                                isVisible: 1,\r\n                                OrderBy: 1,\r\n                            },\r\n                        ]}\r\n                        dataArray={Array.isArray(empData.AssignedTasks) ? empData.AssignedTasks : []}\r\n                        isExpendable={true}\r\n                        EnableSerialNumber={true}\r\n                        expandableComp={({ row }) => {\r\n                            return (\r\n                                <FilterableTable\r\n                                    initialPageCount={15}\r\n                                    dataArray={Array.isArray(row.Work_Details) ? row.Work_Details : []}\r\n                                    EnableSerialNumber={true}\r\n                                    columns={[\r\n                                        {\r\n                                            Field_Name: 'Work_Dt',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'date',\r\n                                        },\r\n                                        {\r\n                                            Field_Name: 'Start_Time',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'string',\r\n                                        },\r\n                                        {\r\n                                            Field_Name: 'End_Time',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'string',\r\n                                        },\r\n                                        {\r\n                                            Field_Name: 'Tot_Minutes',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'number',\r\n                                        },\r\n                                        {\r\n                                            Field_Name: 'Work_Done',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'string',\r\n                                        },\r\n                                        {\r\n                                            Field_Name: 'Parameters',\r\n                                            isVisible: 1,\r\n                                            Fied_Data: 'string',\r\n                                            isCustomCell: true,\r\n                                            Cell: ({ row }) => (\r\n                                                <div className=\" d-flex align-items-center flex-wrap p-2 pb-0\">\r\n                                                    {Array.isArray(row.Parameter_Details) && row.Parameter_Details.map((oo, oi) => (\r\n                                                        <div className=\"d-flex align-items-center me-2\">\r\n                                                            <p key={oi} className=\"me-2\">\r\n                                                                {oo?.Paramet_Name}:\r\n                                                            </p>\r\n                                                            <p className=\" fw-bold px-3 py-1 border rounded-3 \">\r\n                                                                {((!checkIsNumber(oo?.Current_Value) || oo?.Paramet_Data_Type !== 'number')\r\n                                                                    ? oo?.Current_Value\r\n                                                                    : Number(oo?.Current_Value).toLocaleString('en-IN'))\r\n                                                                }\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            )\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                            )\r\n                        }}\r\n                        tableMaxHeight={5000}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeAbstract;","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]"],"names":["_excluded","_excluded2","_excluded3","useSlot","name","parameters","className","elementType","initialElementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","_objectWithoutPropertiesLoose","component","rootComponent","slots","undefined","slotProps","other","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","_extends","externalSlotProps","props","slotComponent","internalRef","mergedProps","ref","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","appendOwnerState","as","Object","keys","forEach","propName","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardContentRoot","styled","overridesResolver","styles","root","padding","paddingBottom","React","inProps","useDefaultProps","classes","composeClasses","useUtilityClasses","_jsx","clsx","createSvgIcon","d","getAvatarUtilityClass","AvatarRoot","variant","colorDefault","_ref","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","alt","children","childrenProp","imgProps","sizes","src","srcSet","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","additionalProps","_empData$Projects","_empData$AssignedTask","_empData$Projects2","_empData$Projects3","_empData$Projects4","_empData$AssignedTask2","loadingOn","loadingOff","localData","localStorage","getItem","parseData","JSON","parse","empData","setEmpData","useState","contextObj","useContext","MyContext","userDropDown","setUserDropDown","filter","setFilter","UserId","Name","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","finally","Number","Print_Rights","Company_id","_data$data","sort","a","b","String","localeCompare","_Fragment","_jsxs","Card","Paper","Select","value","label","onChange","_objectSpread","options","map","obj","customSelectStyles","isDisabled","isSearchable","placeholder","CardContent","IconButton","AccountCircle","sx","UserType","TaskAlt","Projects","length","AssignedTasks","o","i","Chip","avatar","Project_Name","FilterableTable","columns","Field_Name","Fied_Data","isVisible","OrderBy","ColumnHeader","isCustomCell","Cell","row","Sch_Time","formatTime24","_ref3","EN_Time","dataArray","Array","isArray","isExpendable","EnableSerialNumber","expandableComp","_ref4","initialPageCount","Work_Details","_ref5","Parameter_Details","oo","oi","Paramet_Name","checkIsNumber","Current_Value","Paramet_Data_Type","toLocaleString","tableMaxHeight","preprocessDataForExport","flattenedRow","column","index","Defult_Display","cellContent","safeColumnHeader","replace","toLowerCase","key","createCol","field","arguments","type","align","verticalAlign","ButtonActions","buttonsData","ToolTipText","anchorEl","setAnchorEl","popOverOpen","Boolean","Tooltip","title","onClick","event","currentTarget","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","onClickFun","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","setOpen","Fragment","TableRow","TableCell","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","entries","log","colSpan","ToggleOn","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","rows","header","Sno","autoTable","head","body","save","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","existingCriteria","isAsc","handleSortRequest","TableBody","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","headCells","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","companyDetails","dataBase","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules"],"sourceRoot":""}