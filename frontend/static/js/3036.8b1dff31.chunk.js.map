{"version":3,"file":"static/js/3036.8b1dff31.chunk.js","mappings":"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","sources":["Pages/CurrentProjects/projectInfo.jsx","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js","../node_modules/@mui/icons-material/esm/Add.js"],"sourcesContent":["import React, { useEffect, useRef, useState, Fragment } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, MenuItem, Autocomplete, TextField, Checkbox, IconButton, Collapse } from '@mui/material';\r\nimport { Add, Delete, Edit, ExpandLess, ExpandMore, KeyboardArrowLeft, Launch } from \"@mui/icons-material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { ISOString, LocalDate } from '../../Components/functions'\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n\r\nconst ProjectDetails = () => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const location = useLocation();\r\n    const projectData = location.state?.project;\r\n    const rights = location.state?.rights;\r\n    const nav = useNavigate()\r\n\r\n    const scheduleInitialValue = {\r\n        Sch_Id: '',\r\n        Sch_Date: new Date().toISOString().split('T')[0],\r\n        Project_Id: projectData?.Project_Id,\r\n        Sch_By: parseData.UserId,\r\n        Sch_Type_Id: 1,\r\n        Sch_Est_Start_Date: new Date().toISOString().split('T')[0],\r\n        Sch_Est_End_Date: '',\r\n        Sch_Status: 1,\r\n        Entry_By: parseData.UserId,\r\n        Entry_Date: new Date()\r\n    }\r\n\r\n    const scheduleTaskInitalValue = {\r\n        Sch_Project_Id: projectData?.Project_Id,\r\n        Sch_Id: '',\r\n        Task_Levl_Id: '',\r\n        Task_Id: '',\r\n        Type_Task_Id: 1,\r\n        Task_Sch_Duaration: '01:00',\r\n        Task_Start_Time: '10:00',\r\n        Task_End_Time: '11:00',\r\n        Task_Est_Start_Date: new Date().toISOString().split('T')[0],\r\n        Task_Est_End_Date: new Date().toISOString().split('T')[0],\r\n        Task_Sch_Status: 1,\r\n        Levl_Id: '',\r\n        Task_Depend_Level_Id: '',\r\n        TasksGet: '- Select Task -'\r\n    }\r\n\r\n    const [userDropdown, setUsersDropdown] = useState([]);\r\n    const [scheduleType, setScheleType] = useState([]);\r\n    const [workStatus, setWorkStatus] = useState([]);\r\n    const [projectSchedule, setProjectSchedule] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskType, setTaskType] = useState([]);\r\n\r\n    const [dependancyTasks, setDependencyTasks] = useState([]);\r\n    const [selectedDependencyTasks, setSelectedDependencyTasks] = useState([])\r\n\r\n    const [scheduleInput, setScheduleInput] = useState(scheduleInitialValue);\r\n    const [taskScheduleInput, setTaskScheduleInput] = useState(scheduleTaskInitalValue);\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        scheduleCreate: false,\r\n        scheduleDelete: false,\r\n        taskSchedule: false,\r\n        taskDelete: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule?Project_Id=${projectData?.Project_Id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProjectSchedule(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [reload, projectData?.Project_Id])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsersDropdown(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule/scheduleType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setScheleType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/statusList`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                data.data.sort((a, b) => a.Status_Id - b.Status_Id)\r\n                setWorkStatus(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/tasks/dropdown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTasks(data.data)\r\n            }\r\n        }).catch(e => console.error(e))    \r\n\r\n        fetchLink({\r\n            address: `masters/taskType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [parseData?.BranchId])\r\n\r\n    useEffect(() => {\r\n        const getScheduleDates = scheduleType.find(obj => Number(obj?.Sch_Type_Id) === Number(scheduleInput?.Sch_Type_Id));\r\n        const findEndDate = new Date();\r\n        const getDay = findEndDate.getDate();\r\n        findEndDate.setDate(getDay + Number(getScheduleDates?.Sch_Days) || 0);\r\n        const changeFormat = findEndDate.toISOString().split('T')[0]\r\n        setScheduleInput(opt => ({ ...opt, Sch_Est_End_Date: changeFormat }))\r\n    }, [scheduleInput?.Sch_Est_Start_Date, scheduleInput?.Sch_Type_Id, scheduleType])\r\n\r\n    useEffect(() => {\r\n        const [hours1, minutes1] = taskScheduleInput?.Task_Start_Time.split(':').map(Number);\r\n        const [hours2, minutes2] = taskScheduleInput?.Task_End_Time.split(':').map(Number);\r\n\r\n        const date1 = new Date(0, 0, 0, hours1, minutes1);\r\n        const date2 = new Date(0, 0, 0, hours2, minutes2);\r\n\r\n        if (date2 > date1) {\r\n            let difference = Math.abs(date2 - date1);\r\n\r\n            const hours = Math.floor(difference / (1000 * 60 * 60));\r\n            difference %= (1000 * 60 * 60);\r\n            const minutes = Math.floor(difference / (1000 * 60));\r\n\r\n            const formattedHours = String(hours).padStart(2, '0');\r\n            const formattedMinutes = String(minutes).padStart(2, '0');\r\n\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Sch_Duaration: `${formattedHours}:${formattedMinutes}` }));\r\n        }\r\n\r\n    }, [taskScheduleInput?.Task_Start_Time, taskScheduleInput?.Task_End_Time, taskScheduleInput?.Task_Id])\r\n\r\n    useEffect(() => {\r\n        if (selectedDependencyTasks.length > 0) {\r\n            const numStr = selectedDependencyTasks.map(obj => obj?.Task_Levl_Id).join(',');\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: numStr }));\r\n        } else {\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: '' }));\r\n        }\r\n    }, [selectedDependencyTasks]);\r\n\r\n    useEffect(() => {\r\n        if (!projectData || !rights) {\r\n            nav('/taskManagement/projectActivity')\r\n        }\r\n    }, [projectData, rights, nav]);\r\n\r\n    const scheduleDialogSwitch = (val) => {\r\n        if (val) {\r\n            setScheduleInput(val);\r\n            setIsEdit(true)\r\n        }\r\n\r\n        if (!val && dialog.scheduleCreate === true) {\r\n            setScheduleInput(scheduleInitialValue)\r\n            setIsEdit(false)\r\n        }\r\n\r\n        setDialog({ ...dialog, scheduleCreate: !dialog.scheduleCreate });\r\n    }\r\n\r\n    const taskDialogSwitch = (bool, val) => {\r\n        if (val && !bool) {\r\n            setTaskScheduleInput(val);\r\n            setIsEdit(true)\r\n        }\r\n\r\n        if (!val && dialog.taskSchedule === true && bool === true) {\r\n            setTaskScheduleInput(scheduleTaskInitalValue);\r\n            setDependencyTasks([])\r\n            setSelectedDependencyTasks([])\r\n            setIsEdit(false)\r\n        }\r\n\r\n        setDialog({ ...dialog, taskSchedule: !dialog.taskSchedule });\r\n    }\r\n\r\n    const switchScheduleDeleteDialog = (val) => {\r\n        if (val) {\r\n            setScheduleInput(val)\r\n        } else {\r\n            setScheduleInput(scheduleInitialValue)\r\n        }\r\n\r\n        setDialog({ ...dialog, scheduleDelete: !dialog.scheduleDelete });\r\n    }\r\n\r\n    const switchTaskDeleteDialog = (val) => {\r\n        if (val) {\r\n            setTaskScheduleInput(val)\r\n        } else {\r\n            setTaskScheduleInput(scheduleTaskInitalValue)\r\n        }\r\n\r\n        setDialog({ ...dialog, taskDelete: !dialog.taskDelete });\r\n    }\r\n\r\n    const postAndPutScheduleFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule`,\r\n            method: isEdit ? 'PUT' : 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: scheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error)\r\n        .finally(() => scheduleDialogSwitch())\r\n    }\r\n\r\n    const deleteScheduleFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule`,\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: scheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error)\r\n        .finally(() => switchScheduleDeleteDialog()) \r\n    }\r\n\r\n    const postAndPutTaskFun = () => {\r\n        if (taskScheduleInput.Task_Id) {\r\n            if (Number(taskScheduleInput?.Levl_Id) !== 1 && taskScheduleInput.Task_Depend_Level_Id === '') {\r\n                return toast.warn('Select Dependency Tasks')\r\n            }\r\n\r\n            fetchLink({\r\n                address: `taskManagement/project/schedule/scheduleTask`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                bodyData: taskScheduleInput\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                    taskDialogSwitch(true);\r\n                    setReload(!reload)\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        } else {\r\n            toast.warn('Select Task')\r\n        }\r\n    }\r\n\r\n    const deleteTaskFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule/scheduleTask`,\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: taskScheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n        .finally(() => switchTaskDeleteDialog())\r\n    }\r\n\r\n    const getSignal = (status) => {\r\n        const numStatus = Number(status);\r\n        const color = ['', 'bg-primary', 'bg-warning', 'bg-success', 'bg-danger']\r\n\r\n        return color[numStatus]\r\n    }\r\n\r\n    const ScheduleComp = ({ obj, SNo }) => {\r\n        const myDivRef = useRef(null);\r\n        const [height, setHeight] = useState(0)\r\n\r\n        useEffect(() => {\r\n            if (myDivRef.current) {\r\n                setHeight(myDivRef.current.offsetHeight);\r\n            }\r\n        }, []);\r\n\r\n        const findNum = (arr, num) => {\r\n            const index = arr.findIndex((o) => Number(o.Task_Levl_Id) === Number(num));\r\n            return index >= 0 ? (index + 1) + '. ' : '';\r\n        }\r\n\r\n        const LevelOneGroup = ({ gobj }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open \r\n                                ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> \r\n                                : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobj?.Task_Type ? gobj?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobj?.TaskGroup?.map((o, i) => (\r\n                            <div key={i} className=\"rounded-4 bg-light p-2 px-3 d-flex align-items-center mt-2\">\r\n                                <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                    {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                    <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                    <span>\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle\r\n                                                variant=\"success\"\r\n                                                id=\"actions\"\r\n                                                className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                            >\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                {Number(rights?.edit) === 1 && (\r\n                                                    <MenuItem\r\n                                                        onClick={() => {\r\n                                                            taskDialogSwitch(false, {\r\n                                                                Sch_Project_Id: projectData?.Project_Id,\r\n                                                                Sch_Id: obj?.Sch_Id,\r\n                                                                Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                Task_Id: o?.Task_Id,\r\n                                                                Type_Task_Id: o?.Type_Task_Id,\r\n                                                                Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                Task_Start_Time: o?.Task_Start_Time,\r\n                                                                Task_End_Time: o?.Task_End_Time,\r\n                                                                Task_Est_Start_Date: new Date(o?.Task_Est_Start_Date).toISOString().split('T')[0],\r\n                                                                Task_Est_End_Date: new Date(o?.Task_Est_End_Date).toISOString().split('T')[0],\r\n                                                                Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                Levl_Id: 1,\r\n                                                                Task_Depend_Level_Id: '',\r\n                                                                TasksGet: o?.TaskNameGet,\r\n                                                            })\r\n                                                        }}>\r\n                                                        <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                        Edit\r\n                                                    </MenuItem>\r\n                                                )}\r\n                                                {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                    switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                }}>\r\n                                                    <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                    Delete\r\n                                                </MenuItem>)}\r\n                                                <MenuItem onClick={\r\n                                                    () => nav('taskActivity',\r\n                                                        {\r\n                                                            state: {\r\n                                                                taskDetails: {\r\n                                                                    ...o,\r\n                                                                    Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                },\r\n                                                                rights: location.state?.rights,\r\n                                                                retObj: location.state\r\n                                                            }\r\n                                                        }\r\n                                                    )\r\n                                                }>\r\n                                                    <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                    Open Task\r\n                                                </MenuItem>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        const LevelTwoGrouped = ({ gobjlvl2 }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobjlvl2?.Task_Type ? gobjlvl2?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobjlvl2?.TaskGroup?.map((o, i) => (\r\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\r\n                                <div className=\"mb-0 d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                    <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                        {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                        {/* new code */}\r\n                                        <span>\r\n                                            <Dropdown>\r\n                                                <Dropdown.Toggle\r\n                                                    variant=\"success\"\r\n                                                    id=\"actions\"\r\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                                >\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    {Number(rights?.edit) === 1 && (\r\n                                                        <MenuItem\r\n                                                            onClick={() => {\r\n                                                                taskDialogSwitch(false, {\r\n                                                                    Sch_Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                    Task_Id: o?.Task_Id,\r\n                                                                    Type_Task_Id: o?.Type_Task_Id,\r\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                    Task_Start_Time: o?.Task_Start_Time,\r\n                                                                    Task_End_Time: o?.Task_End_Time,\r\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\r\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\r\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                    Levl_Id: 2,\r\n                                                                    Task_Depend_Level_Id: '',\r\n                                                                    TasksGet: o?.TaskNameGet,\r\n                                                                })\r\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\r\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\r\n                                                                    TaskNameGet: depObj?.TaskNameGet\r\n                                                                }))])\r\n                                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\r\n                                                            }}>\r\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                            Edit\r\n                                                        </MenuItem>\r\n                                                    )}\r\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                    }}>\r\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                        Delete\r\n                                                    </MenuItem>)}\r\n                                                    <MenuItem onClick={\r\n                                                        () => nav('taskActivity',\r\n                                                            {\r\n                                                                state: {\r\n                                                                    taskDetails: {\r\n                                                                        ...o,\r\n                                                                        Project_Id: projectData?.Project_Id,\r\n                                                                        Sch_Id: obj?.Sch_Id,\r\n                                                                    },\r\n                                                                    rights: location.state?.rights,\r\n                                                                    retObj: location.state\r\n                                                                }\r\n                                                            }\r\n                                                        )\r\n                                                    }>\r\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                        Open Task\r\n                                                    </MenuItem>\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <hr className=\"mt-0 mb-2\" />\r\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\r\n\r\n                                <div className=\"d-flex overflow-auto\">\r\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\r\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E7C8DD' }}>\r\n                                            {findNum(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\r\n                                            {depobj?.TaskNameGet}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        const LevelThreeGrouped = ({ gobjlvl3 }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobjlvl3?.Task_Type ? gobjlvl3?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobjlvl3?.TaskGroup?.map((o, i) => (\r\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\r\n                                <div className=\"mb-0 d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                    <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                        {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                        {/* new code */}\r\n                                        <span>\r\n                                            <Dropdown>\r\n                                                <Dropdown.Toggle\r\n                                                    variant=\"success\"\r\n                                                    id=\"actions\"\r\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                                >\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    {Number(rights?.edit) === 1 && (\r\n                                                        <MenuItem\r\n                                                            onClick={() => {\r\n                                                                taskDialogSwitch(false, {\r\n                                                                    Sch_Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                    Task_Id: o?.Task_Id,\r\n                                                                    Type_Task_Id: o?.Type_Task_Id,\r\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                    Task_Start_Time: o?.Task_Start_Time,\r\n                                                                    Task_End_Time: o?.Task_End_Time,\r\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\r\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\r\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                    Levl_Id: 3,\r\n                                                                    Task_Depend_Level_Id: '',\r\n                                                                    TasksGet: o?.TaskNameGet,\r\n                                                                })\r\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\r\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\r\n                                                                    TaskNameGet: depObj?.TaskNameGet\r\n                                                                }))])\r\n                                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\r\n                                                            }}>\r\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                            Edit\r\n                                                        </MenuItem>\r\n                                                    )}\r\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                    }}>\r\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                        Delete\r\n                                                    </MenuItem>)}\r\n                                                    <MenuItem onClick={\r\n                                                        () => nav('taskActivity',\r\n                                                            {\r\n                                                                state: {\r\n                                                                    taskDetails: {\r\n                                                                        ...o,\r\n                                                                        Project_Id: projectData?.Project_Id,\r\n                                                                        Sch_Id: obj?.Sch_Id,\r\n                                                                    },\r\n                                                                    rights: location.state?.rights,\r\n                                                                    retObj: location.state\r\n                                                                }\r\n                                                            }\r\n                                                        )\r\n                                                    }>\r\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                        Open Task\r\n                                                    </MenuItem>\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <hr className=\"mt-0 mb-2\" />\r\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\r\n\r\n                                <div className=\"d-flex overflow-auto\">\r\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\r\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E2E4F6' }}>\r\n                                            {findNum(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\r\n                                            {depobj?.TaskNameGet}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"cus-card p-2\">\r\n                    <h5 className=\"mb-0 d-flex px-3 py-2 align-items-center\">\r\n                        <span className=\"flex-grow-1\">\r\n                            Schedule: {SNo + ' '}\r\n                            <br />\r\n                            <span className=\"fa-12\">\r\n                                By: {obj?.SchByGet}\r\n                            </span>\r\n                        </span>\r\n                        <span className=\" d-flex fa-14\">\r\n                            <span>\r\n                                {obj?.SchTypGet + ' (' + obj?.SchDays + ') '}\r\n                                <br />\r\n                                <span className=\"fa-12\">(\r\n                                    {LocalDate(obj?.Sch_Est_Start_Date)}\r\n                                    {' - '}\r\n                                    {LocalDate(obj?.Sch_Est_End_Date)}\r\n                                    )\r\n                                </span>\r\n                            </span>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle\r\n                                    variant=\"success\"\r\n                                    id=\"actions\"\r\n                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                >\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n\r\n                                    {Number(rights?.edit) === 1 && (\r\n                                        <MenuItem onClick={() => {\r\n                                            scheduleDialogSwitch({\r\n                                                Sch_Id: obj?.Sch_Id,\r\n                                                Sch_Date: ISOString(obj?.Sch_Date),\r\n                                                Project_Id: projectData?.Project_Id,\r\n                                                Sch_By: obj?.Sch_By,\r\n                                                Sch_Type_Id: obj?.Sch_Type_Id,\r\n                                                Sch_Est_Start_Date: ISOString(obj?.Sch_Est_Start_Date),\r\n                                                Sch_Est_End_Date: ISOString(obj?.Sch_Est_End_Date),\r\n                                                Sch_Status: obj?.Sch_Status,\r\n                                                Entry_By: obj?.Entry_By,\r\n                                                Entry_Date: ISOString(obj?.Entry_Date),\r\n                                            });\r\n                                        }}>\r\n                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                            Edit\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                    {Number(rights?.delete) === 1 && (\r\n                                        <MenuItem onClick={() => switchScheduleDeleteDialog({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id })}>\r\n                                            <Delete className=\"fa-in me-2 text-danger \" />\r\n                                            Delete\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </span>\r\n                    </h5>\r\n\r\n                    <hr className=\"mt-0\" />\r\n\r\n                    <div className=\"d-flex flex-nowrap overflow-scroll\" style={{ paddingBottom: '4.6em' }}>\r\n\r\n                        {/* LevelOneTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E7C8DD' }} ref={myDivRef}>\r\n\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold\">Level 1</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 1 });\r\n                                                setDependencyTasks([])\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj?.LevelOneTasks?.map((gobj, indobj) => (\r\n                                    (gobj?.TaskGroup?.length > 0) &&\r\n                                    <LevelOneGroup key={indobj} gobj={gobj} />\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* LevelTwoTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E2E4F6', minHeight: height, overflow: 'auto' }}>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 2</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            disabled={obj?.LevelOneTasks.flatMap(item => item?.TaskGroup).length === 0}\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 2 });\r\n                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj?.LevelTwoTasks.map((gobjlvl2, indexobj) => (\r\n                                    (gobjlvl2?.TaskGroup?.length > 0) && (\r\n                                        <LevelTwoGrouped key={indexobj} gobjlvl2={gobjlvl2} />\r\n                                    )\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* LevelThreeTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#B4D2E7', minHeight: height, overflow: 'auto' }}>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 3</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            disabled={obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup).length === 0}\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 3 });\r\n                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj.LevelThreeTasks.map((gobjlvl3, indexobj) => (\r\n                                    (gobjlvl3?.TaskGroup?.length > 0) && (\r\n                                        <LevelThreeGrouped key={indexobj} gobjlvl3={gobjlvl3} />\r\n                                    )\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return Number(rights?.read) === 1 && (\r\n        <>\r\n            <div className=\"cus-card p-3\">\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <h5 className=\" flex-grow-1 mb-0 text-muted fa-16 ps-2\">Create New Schedule</h5>\r\n                    {Number(rights?.add) === 1 && (\r\n                        <button className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center me-2\" onClick={() => scheduleDialogSwitch()}>\r\n                            <Add className=\"fa-in me-2\" /> Add\r\n                        </button>\r\n                    )}\r\n                    <button className=\"btn btn-secondary rounded-5 px-3 fa-13 shadow d-flex align-items-center\" onClick={() => nav('/taskManagement/projectActivity')}>\r\n                        <KeyboardArrowLeft className=\"fa-in me-2\" /> Back\r\n                    </button>\r\n                </div>\r\n\r\n                <h6 className=\"my-2 d-flex align-items-center\">\r\n                    <span className={`rounded-5 mx-2 ${getSignal(1)}`} style={{ padding: '5.2px' }} />\r\n                    New\r\n                    <span className={`rounded-5 mx-2 ${getSignal(2)}`} style={{ padding: '5.2px' }} />\r\n                    Progress\r\n                    <span className={`rounded-5 mx-2 ${getSignal(3)}`} style={{ padding: '5.2px' }} />\r\n                    Completed\r\n                    <span className={`rounded-5 mx-2 ${getSignal(4)}`} style={{ padding: '5.2px' }} />\r\n                    Canceled\r\n                </h6>\r\n\r\n            </div>\r\n\r\n            {projectSchedule.map((o, i) => <ScheduleComp key={i} obj={o} SNo={i + 1} />)}\r\n\r\n            <Dialog\r\n                open={dialog.scheduleCreate}\r\n                onClose={() => scheduleDialogSwitch()}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle className=\"fa-18\">{isEdit ? \"Change Schedule\" : 'Create Schedule'}</DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            {(Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1) && <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Scheduled By</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_By}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_By: e.target.value })}>\r\n                                        {userDropdown.map((o, i) => (\r\n                                            <option key={i} value={o?.UserId}>{o?.Name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>}\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}> Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Date}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Date: e.target.value })} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Type</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Type_Id}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Type_Id: e.target.value })}>\r\n                                        {scheduleType.map((o, i) => (\r\n                                            <option key={i} value={o?.Sch_Type_Id}>{o?.Sch_Type + \" (\" + o?.Sch_Days + \" Day)\"}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Status}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Status: e.target.value })}>\r\n                                        {workStatus.map((o, i) => (\r\n                                            <option key={i} value={o?.Status_Id}>{o?.Status}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Est_Start_Date}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Est_Start_Date: e.target.value })} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => scheduleDialogSwitch()}>cancel</Button>\r\n                    <Button onClick={postAndPutScheduleFun} >{isEdit ? 'Update' : 'Create'}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.taskSchedule}\r\n                onClose={() => taskDialogSwitch(true)}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>{isEdit ? 'Manage Task' : 'Assign Task'}</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutTaskFun()\r\n                }}>\r\n                    <DialogContent>\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <Select\r\n                                            value={{ value: taskScheduleInput?.Task_Id, label: taskScheduleInput?.TasksGet }}\r\n                                            onChange={(e) => setTaskScheduleInput({ ...taskScheduleInput, Task_Id: e.value, TasksGet: e.label })}\r\n                                            options={[...tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }))]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true} required\r\n                                            placeholder={\"Select Task\"} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task Type</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <select\r\n                                            className=\"cus-inpt\"\r\n                                            value={taskScheduleInput?.Type_Task_Id} required\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Type_Task_Id: e.target.value })}>\r\n                                            {taskType.map((o, i) => <option key={i} value={o?.Task_Type_Id}>{o?.Task_Type}</option>)}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required\r\n                                            value={taskScheduleInput?.Task_Est_Start_Date && new Date(taskScheduleInput?.Task_Est_Start_Date).toISOString().split('T')[0]}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_Start_Date: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Est_Start_Date}\r\n                                            value={taskScheduleInput?.Task_Est_End_Date && new Date(taskScheduleInput?.Task_Est_End_Date).toISOString().split('T')[0]}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_End_Date: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\"\r\n                                            value={taskScheduleInput?.Task_Start_Time} required\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Start_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Start_Time}\r\n                                            value={taskScheduleInput?.Task_End_Time}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_End_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                {isEdit && (\r\n                                    <tr>\r\n                                        <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\r\n                                        <td className=\"border-bottom-0 fa-15\">\r\n                                            <select\r\n                                                className=\"cus-inpt\"\r\n                                                value={taskScheduleInput.Task_Sch_Status} required\r\n                                                onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Sch_Status: e.target.value })}>\r\n                                                {workStatus.map((o, i) => (\r\n                                                    <option key={i} value={o?.Status_Id}>{o?.Status}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        {Number(taskScheduleInput?.Levl_Id) !== 1 && (\r\n                            <>\r\n                                <label className=\"mb-2\">Select Dependency Tasks</label>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"checkboxes-tags-demo\"\r\n                                    options={dependancyTasks}\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={(option) => option?.TaskNameGet}\r\n                                    value={selectedDependencyTasks}\r\n                                    onChange={(f, e) => setSelectedDependencyTasks(e)}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox\r\n                                                icon={icon}\r\n                                                checkedIcon={checkedIcon}\r\n                                                style={{ marginRight: 8 }}\r\n                                                checked={selected}\r\n                                            />\r\n                                            {option?.TaskNameGet}\r\n                                        </li>\r\n                                    )}\r\n                                    style={{ width: '100%' }}\r\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Task_Levl_Id) === Number(val?.Task_Levl_Id)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} label=\"Tasks\" placeholder=\"Select Dependency Tasks\" />\r\n                                    )}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type='button' onClick={() => taskDialogSwitch(true)}>close</Button>\r\n                        <Button type='submit'>\r\n                            {isEdit ? 'Update' : 'Assign Task'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.scheduleDelete}\r\n                onClose={() => switchScheduleDeleteDialog()}>\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Schedule?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => switchScheduleDeleteDialog()}>cancel</Button>\r\n                    <Button onClick={deleteScheduleFun} >Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.taskDelete}\r\n                onClose={() => switchTaskDeleteDialog()}>\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Task?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => switchTaskDeleteDialog()}>cancel</Button>\r\n                    <Button onClick={deleteTaskFun} >Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');"],"names":["icon","_jsx","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","ProjectDetails","_location$state","_location$state2","localData","localStorage","getItem","parseData","JSON","parse","location","useLocation","projectData","state","project","rights","nav","useNavigate","scheduleInitialValue","Sch_Id","Sch_Date","Date","toISOString","split","Project_Id","Sch_By","UserId","Sch_Type_Id","Sch_Est_Start_Date","Sch_Est_End_Date","Sch_Status","Entry_By","Entry_Date","scheduleTaskInitalValue","Sch_Project_Id","Task_Levl_Id","Task_Id","Type_Task_Id","Task_Sch_Duaration","Task_Start_Time","Task_End_Time","Task_Est_Start_Date","Task_Est_End_Date","Task_Sch_Status","Levl_Id","Task_Depend_Level_Id","TasksGet","userDropdown","setUsersDropdown","useState","scheduleType","setScheleType","workStatus","setWorkStatus","projectSchedule","setProjectSchedule","tasks","setTasks","taskType","setTaskType","dependancyTasks","setDependencyTasks","selectedDependencyTasks","setSelectedDependencyTasks","scheduleInput","setScheduleInput","taskScheduleInput","setTaskScheduleInput","isEdit","setIsEdit","reload","setReload","dialog","setDialog","scheduleCreate","scheduleDelete","taskSchedule","taskDelete","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","Company_id","sort","a","b","Status_Id","BranchId","getScheduleDates","find","obj","Number","findEndDate","getDay","getDate","setDate","Sch_Days","changeFormat","opt","_objectSpread","hours1","minutes1","map","hours2","minutes2","date1","date2","difference","Math","abs","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","length","numStr","join","scheduleDialogSwitch","val","taskDialogSwitch","bool","switchScheduleDeleteDialog","switchTaskDeleteDialog","getSignal","status","ScheduleComp","_ref","_obj$LevelOneTasks","SNo","myDivRef","useRef","height","setHeight","current","offsetHeight","findNum","arr","num","index","findIndex","o","LevelOneGroup","_ref2","_gobj$TaskGroup","gobj","open","setOpen","_jsxs","Fragment","children","className","IconButton","onClick","ExpandLess","sx","color","ExpandMore","Task_Type","Collapse","in","unmountOnExit","TaskGroup","i","TaskNameGet","LocalDate","style","padding","Dropdown","Toggle","variant","id","Menu","edit","MenuItem","Edit","delete","Delete","_location$state3","taskDetails","retObj","Launch","LevelTwoGrouped","_ref3","_gobjlvl2$TaskGroup","gobjlvl2","_o$DependancyTasks2","_o$DependancyTasks3","_o$DependancyTasks4","_o$DependancyTasks","ISOString","DependancyTasks","depObj","LevelOneTasks","flatMap","item","_location$state4","depobj","depindex","backgroundColor","LevelThreeGrouped","_ref4","_gobjlvl3$TaskGroup","gobjlvl3","_o$DependancyTasks6","_o$DependancyTasks7","_o$DependancyTasks8","_o$DependancyTasks5","LevelTwoTasks","_location$state5","_Fragment","SchByGet","SchTypGet","SchDays","paddingBottom","ref","add","indobj","_gobj$TaskGroup2","minHeight","overflow","disabled","indexobj","_gobjlvl2$TaskGroup2","LevelThreeTasks","_gobjlvl3$TaskGroup2","read","Add","KeyboardArrowLeft","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","UserTypeId","verticalAlign","value","onChange","target","Name","type","Sch_Type","Status","DialogActions","Button","postAndPutScheduleFun","method","headers","bodyData","toast","message","finally","onSubmit","preventDefault","postAndPutTaskFun","warn","Select","label","options","Task_Name","styles","customSelectStyles","isSearchable","required","placeholder","Task_Type_Id","min","Autocomplete","multiple","disableCloseOnSelect","getOptionLabel","option","f","renderOption","props","_ref5","selected","Checkbox","marginRight","checked","width","isOptionEqualToValue","renderInput","params","TextField","deleteScheduleFun","deleteTaskFun","createSvgIcon","d","customTableStyles","table","rows","headCells","menu","provided","zIndex","menuPortal","base","groupHeading","fontWeight","borderBottom","textTransform","isSelected","isFocused","MainMenu","headname","align","companyDetails","dataBase","name","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules"],"sourceRoot":""}