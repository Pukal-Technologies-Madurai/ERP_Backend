{"version":3,"file":"static/js/8962.c20a5551.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/Search.js","Pages/Purchase/PurchaseOrder/filters.js","Pages/Purchase/PurchaseOrder/purchaseOrderList.jsx"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import { Addition, isEqualNumber, isGraterNumber, ISOString, LocalDate, Multiplication, Subraction, Division, checkIsNumber, NumberFormat, filterableText, toNumber } from \"../../../Components/functions\";\r\nimport { IconButton, Tooltip } from '@mui/material';\r\nimport { Delete, Edit, ShoppingCartCheckout, Visibility } from '@mui/icons-material';\r\n\r\nconst isArr = (arr) => Array.isArray(arr)\r\n\r\nexport const purchaseOrderDataSet = ({ data = [], status = 'ITEMS' }) => {\r\n\r\n    switch (status) {\r\n        case 'ITEMS':\r\n        case 'PO-Vendor-Wise':\r\n        case 'PO-Item-Wise':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item.ItemDetails.map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ITEMS PENDING':\r\n        case 'PO-Pending-Only':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item?.ItemDetails?.filter(fil => {\r\n                        const itemsInDelivery = item?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, fil?.ItemId));\r\n                        const WeightTotal = itemsInDelivery.reduce((sum, delivery) => Addition(sum, delivery?.Weight), 0);\r\n                        return (\r\n                            Number(WeightTotal) < Number(fil?.Weight)\r\n                            && filterableText(item.OrderStatus) !== filterableText('Canceled')\r\n                        );\r\n                    }).map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ITEMS ARRIVED':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item?.ItemDetails?.filter(fil => {\r\n                        const itemsInDelivery = item?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, fil?.ItemId));\r\n                        const WeightTotal = itemsInDelivery.reduce((sum, delivery) => Addition(sum, delivery?.Weight), 0);\r\n                        return Number(WeightTotal) >= Number(fil?.Weight);\r\n                    }).map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'AR-Item-Based':\r\n        case 'AR-Vendor-Wise':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.DeliveryDetails)) return acc;\r\n\r\n                    const DeliveryDetails = item.DeliveryDetails.map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: isArr(item.ItemDetails) ? item.ItemDetails : [],\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            OrderStatus: item?.OrderStatus,\r\n                            LoadingDate: item.LoadingDate,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(DeliveryDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ORDERS':\r\n            return data\r\n        case 'ORDERS PENDING':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (!Array.isArray(item?.DeliveryDetails) || isGraterNumber(item?.DeliveryDetails?.length, 0)) return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'ORDERS ARRIVED':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (!Array.isArray(item?.DeliveryDetails) || isEqualNumber(item?.DeliveryDetails?.length, 0)) return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'COMPLETED ORDERS':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (item?.OrderStatus !== 'Completed') return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'IN-COMPLETED ORDERS':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (item?.OrderStatus === 'Completed') return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        default:\r\n            return []\r\n    }\r\n}\r\n\r\nconst statusColor = {\r\n    NewOrder: ' bg-info fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n    OnProcess: ' bg-warning fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n    Completed: ' bg-success text-light fa-11 px-2 py-1 rounded-3 ',\r\n    Canceled: ' bg-danger text-light fw-bold fa-11 px-2 py-1 rounded-3 '\r\n}\r\n\r\nconst chooseColor = (orderStatus) => {\r\n    // const DeliveryDetails = Number(orderStatus) > 0 ? 'Arrived' : 'Pending';\r\n    switch (orderStatus) {\r\n        case 'New Order': return statusColor.NewOrder;\r\n        case 'On Process': return statusColor.OnProcess;\r\n        case 'Completed': return statusColor.Completed;\r\n        case 'Canceled': return statusColor.Canceled;\r\n        default: return ''\r\n    }\r\n}\r\n\r\nconst createCol = (field, type, ColumnHeader) => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\n// const findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\n// const getActQty = (item, products) => {\r\n//     console.log(item)\r\n//     const productDetails = findProductDetails(products, item?.ItemId);\r\n//     const pack = parseFloat(productDetails?.PackGet ?? 0);\r\n//     const Quantity = Division(item.Weight, pack);\r\n//     console.log({pack, Quantity})\r\n//     return Quantity;\r\n// }\r\n\r\nexport const displayColumns = ({ \r\n    OrderStatus = 'ITEMS', \r\n    dialogs, \r\n    setOrderPreview, \r\n    navigation, \r\n    products,\r\n    EditRights,\r\n    DeleteRights,\r\n    AddRights,\r\n}) => {\r\n\r\n    // Order Based Cells\r\n    const OrderId = createCol('OrderId', 'string', 'Order Id'),\r\n        // OwnerName = createCol('OwnerName', 'string', 'Owner Name'),\r\n        OwnerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Owners',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return row?.StaffDetails?.filter(staff => staff.Cost_Category === 'Owners').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        },\r\n        BrokerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Brokers',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return row?.StaffDetails?.filter(staff => staff.Cost_Category === 'Broker').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        },\r\n        PartyName = createCol('PartyName', 'string', 'Party'),\r\n        PaymentCondition = createCol('PaymentCondition', 'string', 'Payment Condition'),\r\n        Remarks = createCol('Remarks', 'string'),\r\n        TradeConfirmDate = createCol('TradeConfirmDate', 'date', 'Trade Confirm Date'),\r\n        LoadingDate = createCol('LoadingDate', 'date', 'Loading Date'),\r\n        Condition = createCol('QualityCondition', 'string', 'Condition'),\r\n        OrderPartyName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Party',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.PartyName\r\n        }, OrderActions = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Action',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row;\r\n                const {\r\n                    ItemDetails = [],\r\n                    DeliveryDetails = [],\r\n                    StaffDetails = [],\r\n                    TranspoterDetails = [],\r\n                    ConvertedAsInvoices = []\r\n                } = OrderDetails;\r\n\r\n                const isConvertableArrivalExist = isEqualNumber(row?.isConvertableArrivalExist, 1);\r\n                const IsConvertedAsInvoice = isEqualNumber(row?.IsConvertedAsInvoice, 1);\r\n\r\n                return (\r\n                    <>\r\n                        <Tooltip title='Preview Order'>\r\n                            <span>\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color='primary'\r\n                                    onClick={() => setOrderPreview(pre => ({\r\n                                        ...pre,\r\n                                        OrderDetails: OrderDetails,\r\n                                        OrderItemsArray: ItemDetails,\r\n                                        DeliveryArray: DeliveryDetails,\r\n                                        TranspoterArray: TranspoterDetails,\r\n                                        StaffArray: StaffDetails,\r\n                                        // ConvertedAsInvoices: ConvertedAsInvoices,\r\n                                        display: true,\r\n                                    }))}\r\n                                ><Visibility className=\"fa-16\" /></IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n\r\n                        {(\r\n                            navigation\r\n                            && isConvertableArrivalExist\r\n                            && OrderDetails?.OrderStatus === 'Completed'\r\n                            && AddRights\r\n                        ) && (\r\n                                <Tooltip title='Convert to invoice'>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            navigation({\r\n                                                page: '/erp/purchase/invoice/create',\r\n                                                stateToTransfer: {\r\n                                                    invoiceInfo: {\r\n                                                        Branch_Id: OrderDetails?.BranchId,\r\n                                                        Po_Inv_Date: ISOString(),\r\n                                                        Po_Entry_Date: OrderDetails?.LoadingDate ? ISOString(OrderDetails?.LoadingDate) : ISOString(),\r\n                                                        Retailer_Id: OrderDetails?.PartyId,\r\n                                                        Retailer_Name: OrderDetails?.PartyName\r\n                                                    },\r\n                                                    orderInfo: DeliveryDetails.filter(\r\n                                                        fil => toNumber(fil.pendingInvoiceWeight) > 0\r\n                                                    ).map(item => ({\r\n                                                        POI_St_Id: '',\r\n                                                        DeliveryId: item?.Trip_Item_SNo,\r\n                                                        OrderId: item?.OrderId,\r\n                                                        Location_Id: item?.LocationId,\r\n                                                        Item_Id: item?.ItemId,\r\n                                                        Item_Name: item?.ItemName || 'not found',\r\n                                                        Bill_Qty: item?.pendingInvoiceWeight,\r\n                                                        Act_Qty: item?.Weight,\r\n                                                        Bill_Alt_Qty: item?.Quantity,\r\n                                                        Item_Rate: item?.BilledRate,\r\n                                                        Amount: Multiplication(item?.BilledRate, item?.Weight),\r\n                                                        Free_Qty: 0,\r\n                                                        Batch_No: item?.BatchLocation,\r\n                                                    })),\r\n                                                    staffInfo: StaffDetails.map(staff => ({\r\n                                                        Involved_Emp_Id: Number(staff.EmployeeId),\r\n                                                        Involved_Emp_Name: staff.Emp_Name,\r\n                                                        Cost_Center_Type_Id: Number(staff.CostType),\r\n                                                    }))\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                    ><ShoppingCartCheckout /></IconButton>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                        {(navigation && !IsConvertedAsInvoice && EditRights) && (\r\n                            <Tooltip title='Edit'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => {\r\n                                            navigation({\r\n                                                page: 'create',\r\n                                                stateToTransfer: {\r\n                                                    OrderDetails: OrderDetails,\r\n                                                    OrderItemsArray: ItemDetails,\r\n                                                    DeliveryArray: DeliveryDetails,\r\n                                                    TranspoterArray: TranspoterDetails,\r\n                                                    StaffArray: StaffDetails,\r\n                                                    editPage: 'PurchaseOderWithDelivery'\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                    ><Edit className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip >\r\n                        )}\r\n\r\n                        {isConvertableArrivalExist && (\r\n                            <Tooltip title='Delete Order'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => dialogs(pre => ({ ...pre, deleteOrderDialog: true, deleteOrderId: row?.Id }))}\r\n                                        color='error'\r\n                                    ><Delete className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        }, GeneralStatus = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Status',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderStatus = row?.OrderStatus;\r\n                return (\r\n                    <span className={chooseColor(OrderStatus)}>\r\n                        {String(OrderStatus).replace(' ', '')}\r\n                    </span>\r\n                )\r\n            }\r\n        }, OrderPO_ID = createCol('PO_ID', 'string', 'Order ID')\r\n\r\n    // Item Based Cells\r\n    const\r\n        ItemPO_ID = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Order ID',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.PO_ID ?? ''\r\n        },\r\n        ItemName = createCol('ItemName', 'string', 'Item'),\r\n        Rate = createCol('Rate', 'number'),\r\n        WeightWithUOM = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Weight',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => checkIsNumber(row?.Weight) ? NumberFormat(row?.Weight) : 0\r\n            // + ' ' + row?.Units\r\n        }, ItemArrivedQuantity = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Arrived Quantity',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const itemsInDelivery = row?.OrderDetails?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, row?.ItemId));\r\n                const WeightTotal = itemsInDelivery.reduce((acc, item) => Addition(acc, item?.Weight), 0);\r\n                return WeightTotal\r\n            }\r\n        }, PendingItemQuantity = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Pending-Quantity',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const itemsInDelivery = row?.OrderDetails?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, row?.ItemId));\r\n                const WeightTotal = itemsInDelivery.reduce((acc, item) => Addition(acc, item?.Weight), 0);\r\n                return Subraction(row?.Weight, WeightTotal);\r\n            }\r\n        }, ItemTradeConfirmDate = {\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            ColumnHeader: 'Date',\r\n            Cell: ({ row }) => LocalDate(row?.OrderDetails?.TradeConfirmDate)\r\n        }, ItemOrderStatus = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Status',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderStatus = row?.OrderDetails?.OrderStatus;\r\n                return (\r\n                    <span className={chooseColor(OrderStatus)}>\r\n                        {String(OrderStatus).replace(' ', '')}\r\n                    </span>\r\n                )\r\n            }\r\n        }, ItemOwnerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Owners',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { StaffDetails } = OrderDetails;\r\n                return StaffDetails?.filter(staff => staff.Cost_Category === 'Owners').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        }, ItemBrokerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Brokers',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { StaffDetails } = OrderDetails;\r\n                return StaffDetails?.filter(staff => staff.Cost_Category === 'Broker').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        }, ItemActions = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Action',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { ItemDetails, DeliveryDetails, TranspoterDetails, StaffDetails } = OrderDetails;\r\n                // const isConvertableArrivalExist = isEqualNumber(row?.isConvertableArrivalExist, 1);\r\n                const IsConvertedAsInvoice = isEqualNumber(row?.IsConvertedAsInvoice, 1);\r\n\r\n\r\n                return (\r\n                    <>\r\n                        <Tooltip title='Preview Order'>\r\n                            <span>\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color='primary'\r\n                                    onClick={() => setOrderPreview(pre => ({\r\n                                        ...pre,\r\n                                        OrderDetails,\r\n                                        OrderItemsArray: ItemDetails,\r\n                                        DeliveryArray: DeliveryDetails,\r\n                                        TranspoterArray: TranspoterDetails,\r\n                                        StaffArray: StaffDetails,\r\n                                        display: true,\r\n                                    }))}\r\n                                ><Visibility className=\"fa-16\" /></IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n\r\n                        {(navigation && !IsConvertedAsInvoice && EditRights) && (\r\n                            <Tooltip title='Edit'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => navigation({\r\n                                            page: 'create',\r\n                                            stateToTransfer: {\r\n                                                OrderDetails,\r\n                                                OrderItemsArray: ItemDetails,\r\n                                                DeliveryArray: DeliveryDetails,\r\n                                                TranspoterArray: TranspoterDetails,\r\n                                                StaffArray: StaffDetails,\r\n                                                editPage: 'PurchaseOderWithDelivery'\r\n                                            }\r\n                                        })}\r\n                                    ><Edit className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip >\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        };\r\n\r\n    // Delivery Based Columns \r\n    const ArrivedDate = {\r\n        isVisible: 1,\r\n        isCustomCell: true,\r\n        ColumnHeader: 'Arrived Date',\r\n        Cell: ({ row }) => row?.ArrivalDate ? LocalDate(row?.ArrivalDate) : ''\r\n    }, ArrivedLocation = createCol('Location', 'string'),\r\n        ArrivalRate = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Rate',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderedItems = Array.isArray(row?.OrderDetails?.ItemDetails) ? row?.OrderDetails?.ItemDetails : [];\r\n                const OrderedRate = OrderedItems.find(o => isEqualNumber(o?.ItemId, row?.ItemId))?.Rate ?? 0\r\n                const BilledRate = Number(row?.BilledRate);\r\n                return `${BilledRate} (${isGraterNumber(BilledRate, OrderedRate) ? ('+' + (BilledRate - OrderedRate)) : ('-' + (OrderedRate - BilledRate))})`\r\n            }\r\n        }\r\n\r\n\r\n    // Tally Column\r\n    const OrderLOLLedgerName = createCol('Ledger_Name', 'string', 'LOL Ledger Name'),\r\n        OrderLOLPartyDistrict = createCol('Party_District', 'string', 'LOL Party District'),\r\n        ItemLOLLedgerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'LOL Ledger Name',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.Ledger_Name\r\n        }, ItemLOLPartyDistrict = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'LOL Party District',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.Party_District\r\n        }, StockItem = createCol('Stock_Item', 'string', 'Stock Item'),\r\n        StockGroup = createCol('Stock_Group', 'string', 'Stock Group');\r\n\r\n\r\n    switch (OrderStatus) {\r\n        case 'ITEMS':\r\n        case 'ITEMS PENDING':\r\n        case 'ITEMS ARRIVED':\r\n            return [\r\n                ItemPO_ID, OrderPartyName, ItemTradeConfirmDate, ItemName, WeightWithUOM,\r\n                ItemArrivedQuantity, PendingItemQuantity, Rate, ItemOwnerName, ItemBrokerName, ItemActions\r\n            ];\r\n        case 'ORDERS':\r\n        case 'COMPLETED ORDERS':\r\n        case 'IN-COMPLETED ORDERS':\r\n            return [\r\n                OrderPO_ID, TradeConfirmDate, PartyName, BrokerName, OwnerName, Remarks, GeneralStatus, OrderActions,\r\n            ]\r\n        case 'ORDERS PENDING':\r\n        case 'ORDERS ARRIVED':\r\n            return [\r\n                OrderPO_ID, TradeConfirmDate, PartyName, BrokerName, OwnerName, Remarks, OrderActions,\r\n            ]\r\n\r\n        case 'PO-Vendor-Wise':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, ItemLOLLedgerName, ItemLOLPartyDistrict, StockGroup, WeightWithUOM, Rate, PendingItemQuantity, ItemActions\r\n            ]\r\n        case 'PO-Item-Wise':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, StockGroup, StockItem, WeightWithUOM, Rate, PendingItemQuantity, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'PO-Pending-Only':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, StockGroup, StockItem, WeightWithUOM, Rate, PendingItemQuantity, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'AR-Item-Based':\r\n            return [\r\n                ItemPO_ID, ArrivedDate, ArrivedLocation, StockGroup, StockItem, WeightWithUOM, ArrivalRate, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'AR-Vendor-Wise':\r\n            return [\r\n                ItemPO_ID, ArrivedDate, ArrivedLocation, ItemLOLLedgerName, ItemLOLPartyDistrict, StockGroup, ArrivalRate, WeightWithUOM, PendingItemQuantity, ItemActions\r\n            ]\r\n        default:\r\n            return [];\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, isValidDate, reactSelectFilterLogic, toArray } from \"../../../Components/functions\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FilterAlt, Search } from '@mui/icons-material';\r\nimport { purchaseOrderDataSet, displayColumns } from \"./filters\";\r\nimport { toast } from 'react-toastify';\r\nimport PurchaseOrderPreviewTemplate from \"../../DataEntry/purchaseOrderPreviewTemplate\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n    OrderStatus: \"ITEMS PENDING\",\r\n    vendorId: '',\r\n    vendor: '',\r\n};\r\n\r\nconst PurchaseOrderDataEntry = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const [purchaseOrderData, setPurchaseOrderData] = useState([]);\r\n    const [orderPreview, setOrderPreview] = useState({\r\n        OrderDetails: {},\r\n        OrderItemsArray: [],\r\n        DeliveryArray: [],\r\n        TranspoterArray: [],\r\n        StaffArray: [],\r\n        display: false,\r\n    });\r\n    const [vendorList, setVendorList] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFilters,\r\n        FilterDialog: false,\r\n        deleteOrderDialog: false,\r\n        deleteOrderId: '',\r\n        refresh: false,\r\n        view: 'PURCHASE ORDERS'\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const retailerData = toArray(data?.data).sort(\r\n                    (a, b) => String(a?.Retailer_Name).localeCompare(b?.Retailer_Name)\r\n                );\r\n                setVendorList(retailerData);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/products`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n            } else {\r\n                setProducts([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `dataEntry/purchaseOrderEntry?Fromdate=${filters.Fromdate}&Todate=${filters.Todate}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPurchaseOrderData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n    }, [filters.refresh]);\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n            OrderStatus: query.get(\"OrderStatus\") || defaultFilters.OrderStatus,\r\n            vendorId: query.get(\"vendorId\") || defaultFilters.vendorId,\r\n            vendor: query.get(\"vendor\") || defaultFilters.vendor,\r\n        };\r\n        setFilters(prev => ({ ...prev, ...queryFilters }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n        }\r\n    }, [stateDetails]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams();\r\n        Object.keys(newFilters).forEach(key => {\r\n            if (newFilters[key]) {\r\n                params.set(key, newFilters[key]);\r\n            }\r\n        });\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const handleFilterChange = (valObj) => {\r\n        const updatedFilters = {\r\n            ...filters,\r\n            ...valObj\r\n        };\r\n        setFilters(updatedFilters);\r\n        updateQueryString(updatedFilters);\r\n    };\r\n\r\n    const deleteOrder = (OrderId) => {\r\n        if (!checkIsNumber(OrderId)) return;\r\n\r\n        fetchLink({\r\n            address: 'dataEntry/purchaseOrderEntry',\r\n            method: 'DELETE',\r\n            bodyData: { OrderId }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '', refresh: !prev.refresh }));\r\n                toast.success(data.message);\r\n            } else {\r\n                setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }));\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const onCloseDialog = () => {\r\n        setOrderPreview({\r\n            OrderDetails: {},\r\n            OrderItemsArray: [],\r\n            DeliveryArray: [],\r\n            TranspoterArray: [],\r\n            display: false,\r\n        });\r\n    };\r\n\r\n    const navigateToPageWithState = ({ page = '', stateToTransfer = {} }) => {\r\n        navigate(page, { state: stateToTransfer });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                dataArray={purchaseOrderDataSet({\r\n                    data: checkIsNumber(filters.vendorId)\r\n                        ? purchaseOrderData.filter(obj => isEqualNumber(obj.PartyId, filters.vendorId))\r\n                        : purchaseOrderData,\r\n                    status: filters.OrderStatus\r\n                })}\r\n                columns={displayColumns({\r\n                    OrderStatus: filters.OrderStatus,\r\n                    dialogs: setFilters,\r\n                    setOrderPreview,\r\n                    navigation: navigateToPageWithState,\r\n                    products: products,\r\n                    EditRights,\r\n                    DeleteRights,\r\n                    AddRights\r\n                })}\r\n                tableMaxHeight={650}\r\n                EnableSerialNumber\r\n                title={'Purchase Order - ' + filters.OrderStatus}\r\n                maxHeightOption\r\n                ExcelPrintOption\r\n                PDFPrintOption\r\n                ButtonArea={\r\n                    <>\r\n                        {AddRights && (\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                onClick={() => navigate('create')}\r\n                            >Add</Button>\r\n                        )}\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            className=\"me-2\"\r\n                            onClick={() => setFilters(prev => ({ ...prev, FilterDialog: true }))}\r\n                        ><FilterAlt /></IconButton>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            {orderPreview.display && (\r\n                <PurchaseOrderPreviewTemplate\r\n                    OrderDetails={orderPreview.OrderDetails}\r\n                    OrderItemsArray={orderPreview.OrderItemsArray}\r\n                    DeliveryArray={orderPreview.DeliveryArray}\r\n                    TranspoterArray={orderPreview.TranspoterArray}\r\n                    StaffArray={orderPreview.StaffArray}\r\n                    display={orderPreview.display}\r\n                    onCloseDialog={onCloseDialog}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={filters.FilterDialog}\r\n                onClose={() => setFilters(prev => ({ ...prev, FilterDialog: false }))}\r\n                maxWidth='sm'\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table m-0 border-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Vendor</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <Select\r\n                                        value={{ value: filters.vendorId, label: filters.vendor }}\r\n                                        onChange={e => handleFilterChange({\r\n                                            vendorId: e.value,\r\n                                            vendor: e.label\r\n                                        })}\r\n                                        options={[\r\n                                            { value: '', label: 'Search', isDisabled: true },\r\n                                            ...vendorList.map(obj => ({\r\n                                                value: obj?.Retailer_Id,\r\n                                                label: obj?.Retailer_Name\r\n                                            }))\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Vendor\"}\r\n                                        maxMenuHeight={300}\r\n                                        filterOption={reactSelectFilterLogic}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Fromdate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => handleFilterChange({ Fromdate: e.target.value })}\r\n                                        value={filters.Fromdate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Todate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => handleFilterChange({ Todate: e.target.value })}\r\n                                        value={filters.Todate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Order Status</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <select\r\n                                        className=\"cus-inpt p-2\"\r\n                                        value={filters.OrderStatus}\r\n                                        onChange={e => handleFilterChange({ OrderStatus: e.target.value })}\r\n                                    >\r\n                                        <optgroup label=\"ITEM BASED\">\r\n                                            <option value={'ITEMS'}>ITEMS</option>\r\n                                            <option value={'ITEMS PENDING'}>ITEMS - PENDING</option>\r\n                                            <option value={'ITEMS ARRIVED'}>ITEMS - ARRIVED</option>\r\n                                        </optgroup>\r\n                                        <optgroup label=\"ORDER BASED\">\r\n                                            <option value={'ORDERS'}>ORDERS</option>\r\n                                            <option value={'COMPLETED ORDERS'}>COMPLETED ORDERS</option>\r\n                                            <option value={'IN-COMPLETED ORDERS'}>IN-COMPLETED ORDERS</option>\r\n                                        </optgroup>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, FilterDialog: false }))}\r\n                        variant=\"outlined\"\r\n                    >Close</Button>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, refresh: !prev.refresh }))}\r\n                        variant=\"outlined\"\r\n                        startIcon={<Search />}\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.deleteOrderDialog}\r\n                onClose={() => setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <h6>Do you want to delete the order permanently?</h6>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                    >Cancel</Button>\r\n                    <Button color='error' variant='outlined' onClick={() => deleteOrder(filters.deleteOrderId)}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PurchaseOrderDataEntry;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","createSvgIcon","_jsx","d","isArr","arr","Array","isArray","purchaseOrderDataSet","_ref","data","status","reduce","acc","item","ItemDetails","itemDetails","map","o","_item$BrokerId","_item$OwnerId","_item$PartyId","OrderDetails","Id","Sno","PoYear","PO_ID","BranchId","BrokerId","BrokerName","CreatedBy","CreatedAt","OrderStatus","StaffDetails","TranspoterDetails","DeliveryDetails","ConvertedAsInvoices","LoadingDate","OwnerId","OwnerName","PartyAddress","PartyId","PartyName","PaymentCondition","Remarks","TradeConfirmDate","Ledger_Name","Party_District","isConvertableArrivalExist","toNumber","IsConvertedAsInvoice","concat","_item$ItemDetails","filter","fil","_item$DeliveryDetails","WeightTotal","del","isEqualNumber","ItemId","sum","delivery","Addition","Weight","Number","filterableText","_item$BrokerId2","_item$OwnerId2","_item$PartyId2","_item$ItemDetails2","_item$DeliveryDetails2","_item$BrokerId3","_item$OwnerId3","_item$PartyId3","_item$BrokerId4","_item$OwnerId4","_item$PartyId4","_item$DeliveryDetails3","isGraterNumber","length","_item$DeliveryDetails4","statusColor","chooseColor","orderStatus","createCol","field","type","ColumnHeader","isVisible","Field_Name","Fied_Data","displayColumns","_ref2","dialogs","setOrderPreview","navigation","products","EditRights","DeleteRights","AddRights","isCustomCell","Cell","_ref3","_row$StaffDetails","row","staff","Cost_Category","Emp_Name","join","_ref4","_row$StaffDetails2","OrderPartyName","_ref5","_row$OrderDetails","OrderActions","_ref6","_jsxs","_Fragment","children","Tooltip","title","IconButton","size","onClick","pre","OrderItemsArray","DeliveryArray","TranspoterArray","StaffArray","display","Visibility","className","page","stateToTransfer","invoiceInfo","Branch_Id","Po_Inv_Date","ISOString","Po_Entry_Date","Retailer_Id","Retailer_Name","orderInfo","pendingInvoiceWeight","POI_St_Id","DeliveryId","Trip_Item_SNo","OrderId","Location_Id","LocationId","Item_Id","Item_Name","ItemName","Bill_Qty","Act_Qty","Bill_Alt_Qty","Quantity","Item_Rate","BilledRate","Amount","Multiplication","Free_Qty","Batch_No","BatchLocation","staffInfo","Involved_Emp_Id","EmployeeId","Involved_Emp_Name","Cost_Center_Type_Id","CostType","ShoppingCartCheckout","editPage","Edit","deleteOrderDialog","deleteOrderId","Delete","GeneralStatus","_ref7","String","replace","OrderPO_ID","ItemPO_ID","_ref8","_row$OrderDetails$PO_","_row$OrderDetails2","Rate","WeightWithUOM","_ref9","checkIsNumber","NumberFormat","ItemArrivedQuantity","_ref10","_row$OrderDetails3","_row$OrderDetails3$De","PendingItemQuantity","_ref11","_row$OrderDetails4","_row$OrderDetails4$De","Subraction","ItemTradeConfirmDate","_ref12","_row$OrderDetails5","LocalDate","ItemOwnerName","_ref14","ItemBrokerName","_ref15","ItemActions","_ref16","ArrivedDate","_ref17","ArrivalDate","ArrivedLocation","ArrivalRate","_ref18","_row$OrderDetails7","_row$OrderDetails8","_OrderedItems$find$Ra","_OrderedItems$find","OrderedRate","find","ItemLOLLedgerName","_ref19","_row$OrderDetails9","ItemLOLPartyDistrict","_ref20","_row$OrderDetails10","StockItem","StockGroup","defaultFilters","Fromdate","Todate","vendorId","vendor","loadingOn","loadingOff","purchaseOrderData","setPurchaseOrderData","useState","orderPreview","vendorList","setVendorList","setProducts","navigate","useNavigate","location","useLocation","stateDetails","query","URLSearchParams","search","filters","setFilters","FilterDialog","refresh","view","useEffect","fetchLink","then","success","retailerData","toArray","sort","a","b","localeCompare","catch","e","console","error","finally","queryFilters","get","isValidDate","prev","updateQueryString","newFilters","params","Object","keys","forEach","key","set","toString","handleFilterChange","valObj","updatedFilters","FilterableTable","dataArray","obj","columns","tableMaxHeight","EnableSerialNumber","maxHeightOption","ExcelPrintOption","PDFPrintOption","ButtonArea","Button","FilterAlt","PurchaseOrderPreviewTemplate","onCloseDialog","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Select","value","label","onChange","options","isDisabled","styles","isSearchable","placeholder","maxMenuHeight","filterOption","reactSelectFilterLogic","target","DialogActions","startIcon","Search","deleteOrder","method","bodyData","toast","message"],"sourceRoot":""}