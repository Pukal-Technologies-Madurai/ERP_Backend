{"version":3,"file":"static/js/8338.1a0ee5a7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","Pages/Receipts/outstandingReports/customerPendingReceipt.jsx","Pages/Receipts/ReceiptMaster/variable.js","Components/tablecolumn.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { useState, useEffect } from \"react\";\r\nimport { Button, Card } from '@mui/material';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, LocalDate, NumberFormat, onlynum, stringCompare, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { receiptGeneralInfoInitialValue } from \"../ReceiptMaster/variable\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\n\r\nconst CustomerPendingReceipt = ({ loadingOn, loadingOff, AddRights }) => {\r\n\r\n    const [reportData, setReportData] = useState([]);\r\n    const [ledgers, setLedgers] = useState([]);\r\n    const [selectedInvoice, setSelectedInvoice] = useState([]);\r\n    const navigation = useNavigate();\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        ledger: { value: '', label: 'Select Ledger' },\r\n        refresh: false,\r\n        filterDialog: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `receipt/getCustomerWhoHasBills`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setLedgers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(filters.ledger.value)) return;\r\n        // setReportData([]);\r\n        setSelectedInvoice([]);\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/pendingSalesInvoiceReceipt?Acc_Id=${filters.ledger.value}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const repDat = toArray(data.data).map(o => ({\r\n                    ...o,\r\n                    receiptPendingAmount: Subraction(o.Total_Invoice_value, o.totalReference)\r\n                }))\r\n                setReportData(repDat);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [filters.ledger.value]);\r\n\r\n    const onSelect = (row, deleteOption) => {\r\n        setSelectedInvoice(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !stringCompare(o?.Do_Inv_No, row.Do_Inv_No));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                updateBillInfo = [...excludeCurrentValue, { ...row, newReceiptBillAmount: toNumber(row?.receiptPendingAmount) }];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (billId, value) => {\r\n        setSelectedInvoice(pre => pre.map(\r\n            bill => ({\r\n                ...bill,\r\n                newReceiptBillAmount: stringCompare(\r\n                    billId, bill.Do_Inv_No\r\n                ) ? value : bill.newReceiptBillAmount\r\n            })\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 d-flex justify-content-between align-items-center\">\r\n                    <h5>Customer Outstaing Receipts</h5>\r\n                    <div style={{ minWidth: '360px' }}>\r\n                        <Select\r\n                            value={filters?.ledger}\r\n                            onChange={(e) => setFilters(pre => ({ ...pre, ledger: e }))}\r\n                            options={[\r\n                                { value: '', label: 'ALL' },\r\n                                ...ledgers\r\n                            ]}\r\n                            styles={customSelectStyles}\r\n                            isSearchable={true}\r\n                            placeholder={\"Select Leder Name\"}\r\n                            menuPortalTarget={document.body}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    navigation('/erp/receipts/listReceipts/create', {\r\n                        state: {\r\n                            ...receiptGeneralInfoInitialValue,\r\n                            credit_ledger: filters.ledger.value,\r\n                            credit_ledger_name: filters.ledger.label,\r\n                            credit_amount: selectedInvoice.reduce((acc, bill) => Addition(\r\n                                acc, bill?.newReceiptBillAmount\r\n                            ), 0),\r\n                            BillsDetails: selectedInvoice.map(bill => ({\r\n                                bill_id: bill.Do_Id,\r\n                                bill_name: bill.Do_Inv_No,\r\n                                bill_amount: bill.Total_Invoice_value,\r\n                                Debit_Amo: 0,\r\n                                Credit_Amo: bill.newReceiptBillAmount\r\n                            }))\r\n                        }\r\n                    })\r\n                }}>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered fa-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', 'Sales Invoice No', 'Source', 'Date', 'Inv-Value', 'Closed Value', 'Outstanding', 'Make a Receipt'].map(\r\n                                        (o, i) => <th key={i} className=\"fa-13\">{o}</th>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {/* total value details */}\r\n                                <tr>\r\n                                    <td colSpan={4} className=\"fw-bold bg-light text-center\">Total</td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.Total_Invoice_value\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.totalReference\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            Subraction(bill.Total_Invoice_value, bill.totalReference)\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"text-primary fw-bold text-end fa-17 bg-light\">\r\n                                        {NumberFormat(selectedInvoice.reduce((acc, bill) => Addition(\r\n                                            acc, bill?.newReceiptBillAmount\r\n                                        ), 0))}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* pengin receipts */}\r\n                                {reportData.map((row, rowIndex) => {\r\n                                    const invIndex = selectedInvoice.findIndex(\r\n                                        bill => stringCompare(bill?.Do_Inv_No, row?.Do_Inv_No)\r\n                                    );\r\n                                    const amount = selectedInvoice[invIndex] ? selectedInvoice[invIndex]?.newReceiptBillAmount : 0;\r\n                                    const isChecked = invIndex !== -1;\r\n\r\n                                    return (\r\n                                        <tr key={rowIndex}>\r\n                                            <td>{rowIndex + 1}</td>\r\n                                            <td>{row?.Do_Inv_No}</td>\r\n                                            <td>{row?.dataSource}</td>\r\n                                            <td>{LocalDate(row?.Do_Date)}</td>\r\n                                            <td>{NumberFormat(row?.Total_Invoice_value)}</td>\r\n                                            <td>{NumberFormat(row?.totalReference)}</td>\r\n                                            <td>{NumberFormat(row?.receiptPendingAmount)}</td>\r\n                                            <td className=\"p-0 vctr text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                <div className=\"d-flex align-items-center\">\r\n\r\n                                                    <input\r\n                                                        className=\"form-check-input shadow-none pointer mx-2\"\r\n                                                        style={{ padding: '0.7em' }}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={isChecked}\r\n                                                        onChange={() => {\r\n                                                            if (isChecked) onSelect(row, true)\r\n                                                            else onSelect(row)\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                    {isChecked && (\r\n                                                        <input\r\n                                                            value={amount ? amount : ''}\r\n                                                            onInput={onlynum}\r\n                                                            required={isChecked}\r\n                                                            type=\"number\"\r\n                                                            max={toNumber(row?.receiptPendingAmount)}\r\n                                                            className=\"cus-inpt flex-grow-1 p-2 border-0 me-1\"\r\n                                                            onChange={e => onChangeAmount(row?.Do_Inv_No, e.target.value)}\r\n                                                            placeholder={isChecked ? \"Enter amount\" : ''}\r\n                                                        />\r\n                                                    )}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                                {/* nave to receipt */}\r\n                                <tr>\r\n                                    <td colSpan={8} className=\"text-end\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            disabled={selectedInvoice.length === 0}\r\n                                            type=\"submit\"\r\n                                        >Create Receipt</Button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </form>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPendingReceipt;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    is_new_ref: 0,\r\n    is_journal_type: 0,\r\n    transaction_type: '',\r\n\r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n\r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n\r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];\r\n\r\nexport const transactionTypes = [\r\n    {\r\n        label: 'Select',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'ATM',\r\n        value: 'ATM'\r\n    },\r\n    {\r\n        label: 'Card',\r\n        value: 'Card'\r\n    },\r\n    {\r\n        label: 'Cash',\r\n        value: 'Cash'\r\n    },\r\n    {\r\n        label: 'Cheque/DD',\r\n        value: 'Cheque/DD'\r\n    },\r\n    {\r\n        label: 'ECS',\r\n        value: 'ECS'\r\n    },\r\n    {\r\n        label: 'e-Fund Transfer',\r\n        value: 'e-Fund Transfer'\r\n    },\r\n    {\r\n        label: 'Electronic Cheque',\r\n        value: 'Electronic Cheque'\r\n    },\r\n    {\r\n        label: 'Electronic DD/PO',\r\n        value: 'Electronic DD/PO'\r\n    },\r\n    {\r\n        label: 'UPI',\r\n        value: 'UPI'\r\n    },\r\n    {\r\n        label: 'Others',\r\n        value: 'Others'\r\n    },\r\n]","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","_ref","loadingOn","loadingOff","AddRights","reportData","setReportData","useState","ledgers","setLedgers","selectedInvoice","setSelectedInvoice","navigation","useNavigate","filters","setFilters","Fromdate","ISOString","Todate","ledger","value","label","refresh","filterDialog","useEffect","fetchLink","address","then","data","success","catch","e","console","error","checkIsNumber","concat","repDat","toArray","map","o","_objectSpread","receiptPendingAmount","Subraction","Total_Invoice_value","totalReference","onSelect","row","deleteOption","pre","excludeCurrentValue","filter","stringCompare","Do_Inv_No","updateBillInfo","newReceiptBillAmount","toNumber","_Fragment","children","_jsxs","Card","style","minWidth","Select","onChange","options","customSelectStyles","isSearchable","placeholder","menuPortalTarget","document","body","onSubmit","preventDefault","state","receiptGeneralInfoInitialValue","credit_ledger","credit_ledger_name","credit_amount","reduce","acc","bill","Addition","BillsDetails","bill_id","Do_Id","bill_name","bill_amount","Debit_Amo","Credit_Amo","i","colSpan","NumberFormat","rowIndex","_selectedInvoice$invI","invIndex","findIndex","amount","isChecked","dataSource","LocalDate","Do_Date","verticalAlign","padding","type","checked","onInput","onlynum","required","max","onChangeAmount","billId","target","Button","variant","disabled","length","userDetails","getSessionUser","user","receipt_id","year_id","receipt_voucher_type_id","receipt_sno","receipt_invoice_no","receipt_date","receipt_bill_type","debit_ledger","debit_ledger_name","debit_amount","remarks","status","is_new_ref","is_journal_type","transaction_type","check_no","check_date","bank_name","bank_date","created_by","UserId","altered_by","created_on","alterd_on","receiptBillInfoInitialValue","auto_id","receipt_no","DR_CR_Acc_Id","JournalBillType","SalesInvoiceDate","StockJournalDate","TotalPaidAmount","PendingAmount","receiptCostingInfoInitialValue","Debit_Ledger_Id","arr_id","item_id","item_name","expence_value","itemQuantity","PaidAmount","receiptTypes","stockJournalTypes","receiptStatus","transactionTypes","customTableStyles","table","width","backgroundColor","rows","headCells","color","fontSize","menu","provided","zIndex","menuPortal","base","groupHeading","fontWeight","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","align","companyDetails","dataBase","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules"],"sourceRoot":""}