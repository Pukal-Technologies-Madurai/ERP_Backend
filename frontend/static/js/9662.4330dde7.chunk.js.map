{"version":3,"file":"static/js/9662.4330dde7.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","Components/requiredStar.jsx","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","Pages/Tasks/Components/addEditTask.jsx","Pages/Tasks/newTasksPage.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","Pages/Tasks/taskParameters.jsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../../common.css'\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Checkbox, TextField, Autocomplete } from '@mui/material';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport { isValidObject } from '../../../Components/functions';\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst TaskMasterMgt = ({ row, children, openAction, reload, onCloseFun, loadingOn, loadingOff, onTaskAdded, onToast }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValue = {\r\n        Task_Id: \"\",\r\n        Task_Name: \"\",\r\n        Task_Desc: \"\",\r\n        Task_Group_Id: 0,\r\n        Entry_By: parseData?.UserId,\r\n        Company_id: parseData?.Company_id,\r\n        Entry_Date: \"\",\r\n        Update_By: '',\r\n        Update_Date: \"\",\r\n        Task_Parameters: [],\r\n\r\n    }\r\n    const [dialog, setDialog] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [taskGroup, setTaskGroup] = useState([]);\r\n    const [taskParameters, setTaskParameters] = useState([]);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `taskManagement/tasks/dropdown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/taskType/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskGroup(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskParameters(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setDialog(openAction ? true : false)\r\n    }, [openAction])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(row)) {\r\n            setInputValue(pre => {\r\n                let inputVAL = { ...pre }\r\n                Object.entries(row).forEach(([key, value]) => {\r\n                    inputVAL[key] = value\r\n                })\r\n                return inputVAL\r\n            });\r\n            setIsEdit(true);\r\n        } else {\r\n            setInputValue(initialValue);\r\n            setIsEdit(false);\r\n        }\r\n    }, [row]);\r\n\r\n    const closeDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDialog(false);\r\n        if (onCloseFun) {\r\n            onCloseFun();\r\n        }\r\n    }\r\n\r\n    const postAndPutTask = async () => {\r\n        const paramArr = inputValue?.Task_Parameters?.map(param => ({\r\n            ...param,\r\n            Param_Id: param?.Paramet_Id\r\n        })) || [];\r\n\r\n        const PostObj = {\r\n            ...inputValue,\r\n            Task_Parameters: paramArr,\r\n        };\r\n\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: `taskManagement/tasks`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: PostObj\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(response.message);\r\n                closeDialog();\r\n                if (reload) {\r\n                    reload();\r\n                }\r\n                onTaskAdded();\r\n            } else {\r\n                toast.error(response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"An error occurred while processing your request.\");\r\n        } finally {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <span onClick={() => setDialog(true)} style={{ cursor: 'pointer' }}>{children}</span>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}>\r\n\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                    {isEdit ? 'Edit Task' : 'Add Task'}\r\n                </DialogTitle>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutTask();\r\n                }}>\r\n\r\n                    <DialogContent>\r\n                        <div className=\"row \">\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Name <RequiredStar /></label>\r\n                                <input\r\n                                    maxLength={150}\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Name: e.target.value })}\r\n                                    required\r\n                                    value={inputValue?.Task_Name}\r\n                                    placeholder=\"ex: File Checking\"\r\n                                    className=\"cus-inpt\" />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Group <RequiredStar /></label>\r\n                                <select\r\n                                    value={inputValue.Task_Group_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    required\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Group_Id: e.target.value })}>\r\n                                    <option value={0} disabled>- select -</option>\r\n                                    {taskGroup?.map((o, i) => (\r\n                                        Number(o?.Task_Type_Id) !== 0 &&\r\n                                        <option key={i} value={o?.Task_Type_Id}>\r\n                                            {o?.Task_Type}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Base Task</label>\r\n                                <select\r\n                                    value={inputValue.Under_Task_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Under_Task_Id: e.target.value })}>\r\n                                    <option value={0}>Primary</option>\r\n                                    {taskData?.map((o, i) => (\r\n                                        <option key={i} value={o?.Task_Id}>\r\n                                            {o?.Task_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <label>Task Describtion <RequiredStar /></label>\r\n                                <textarea\r\n                                    className=\"cus-inpt\"\r\n                                    value={inputValue.Task_Desc}\r\n                                    rows=\"3\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Desc: e.target.value })} />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12 p-2\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"checkboxes-tags-demo\"\r\n                                    options={[...taskParameters?.map(o => ({ ...o, Default_Value: '' }))]}\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={(option) => option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                    value={inputValue?.Task_Parameters || []}\r\n                                    onChange={(f, e) => setInputValue({ ...inputValue, Task_Parameters: e })}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox\r\n                                                icon={icon}\r\n                                                checkedIcon={checkedIcon}\r\n                                                style={{ marginRight: 8 }}\r\n                                                checked={selected}\r\n                                            />\r\n                                            {option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                        </li>\r\n                                    )}\r\n                                    className=\"pt-2\"\r\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Paramet_Id) === Number(val?.Paramet_Id)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} label=\"Task Prarameters\" placeholder=\"Choose Task Parameters\" />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n\r\n                            {inputValue?.Task_Parameters?.map((param, index) => (\r\n                                <div key={index} className=\"col-md-4 p-2\">\r\n                                    <label className=\"mb-2\">{param?.Paramet_Name}</label>\r\n                                    <input\r\n                                        type={param?.Paramet_Data_Type || 'text'}\r\n                                        className=\"cus-inpt\"\r\n                                        onChange={(e) => {\r\n                                            const updatedDetString = [...inputValue.Task_Parameters];\r\n                                            updatedDetString[index] = {\r\n                                                ...updatedDetString[index],\r\n                                                Default_Value: e.target.value,\r\n                                            };\r\n                                            setInputValue({ ...inputValue, Task_Parameters: updatedDetString });\r\n                                        }}\r\n                                        value={param?.Default_Value}\r\n                                        placeholder=\"Default Value\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <button\r\n                            className=\"btn btn-light rounded-5 px-3\"\r\n                            type=\"button\"\r\n                            onClick={closeDialog}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary rounded-5 px-3\"\r\n                            type='submit'>\r\n                            Submit\r\n                        </button>\r\n                    </DialogActions>\r\n\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskMasterMgt;","import { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../common.css'\r\nimport { Edit, Delete } from '@mui/icons-material';\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport DataTable from \"react-data-table-component\";\r\nimport TaskParametersComp from \"./taskParameters\";\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport TaskMasterMgt from \"./Components/addEditTask\";\r\nimport { isEqualNumber, isValidObject } from \"../../Components/functions\";\r\n\r\n\r\nconst TaskMaster = ({ loadingOn, loadingOff }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValue = {\r\n        Task_Id: \"\",\r\n        Task_Name: \"\",\r\n        Task_Desc: \"\",\r\n        Task_Group_Id: 0,\r\n        Entry_By: parseData?.UserId,\r\n        Entry_Date: \"\",\r\n        Update_By: '',\r\n        Update_Date: \"\",\r\n        Task_Parameters: [],\r\n    }\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [rowValue, setRowValue] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/tasks?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    useEffect(() => {\r\n        const filteredResults = [...taskData].filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(filterInput.toLowerCase())\r\n            );\r\n        });\r\n\r\n        setFilteredData(filteredResults);\r\n    }, [filterInput, taskData])\r\n\r\n    const handleDelete = (row) => {\r\n        setInputValue(row);\r\n        setDialog(true);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDialog(false);\r\n    }\r\n\r\n    const tasksColumn = [\r\n        {\r\n            name: 'Task',\r\n            selector: (row) => row?.Task_Name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Task Group',\r\n            selector: (row) => row?.Task_Group,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Task Describtion',\r\n            selector: (row) => row?.Task_Desc,\r\n            sortable: true,\r\n            width: '170px'\r\n        },\r\n        {\r\n            name: 'Created At',\r\n            selector: (row) => new Date(row?.Entry_Date),\r\n            cell: (row) => {\r\n                return new Date(row?.Entry_Date).toLocaleDateString('en-IN', { day: '2-digit', month: '2-digit', year: 'numeric' })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            cell: (row) => (\r\n                <div>\r\n                    {Number(contextObj?.Edit_Rights) === 1 && (\r\n                        <IconButton onClick={() => setRowValue(row)}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    )}\r\n                    {Number(contextObj?.Delete_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleDelete(row)}>\r\n                            <Delete sx={{ color: '#FF6865' }} />\r\n                        </IconButton>\r\n                    )}\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const deleteTask = async () => {\r\n        if (inputValue?.Task_Id && Number(contextObj.Delete_Rights) === 1) {\r\n            fetchLink({\r\n                address: `taskManagement/tasks`,\r\n                method: 'DELETE',\r\n                bodyData: { Task_Id: inputValue?.Task_Id }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                    setReload(!reload);\r\n                    closeDialog();\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n    }\r\n\r\n    const resetValues = () => setRowValue({})\r\n\r\n    return (\r\n        <>\r\n            <TaskParametersComp />\r\n\r\n            {isValidObject(rowValue) && (\r\n                <TaskMasterMgt\r\n                    row={rowValue}\r\n                    openAction={true}\r\n                    reload={() => setReload(pre => !pre)}\r\n                    onCloseFun={resetValues}\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                />\r\n            )}\r\n\r\n            <div className=\"card\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <span>Task Master</span>\r\n                    {isEqualNumber(contextObj.Add_Rights, 1) && (\r\n                        <TaskMasterMgt\r\n                            openAction={false}\r\n                            reload={() => setReload(pre => !pre)}\r\n                            onCloseFun={resetValues}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                        >\r\n                            <button\r\n                                className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\"\r\n                            >\r\n                                {'Create Task'}\r\n                            </button>\r\n                        </TaskMasterMgt>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"card-body p-0 overflow-hidden rounded-bottom-3\">\r\n                    <>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <DataTable\r\n                            columns={tasksColumn}\r\n                            data={filterInput ? filteredData : taskData}\r\n                            pagination\r\n                            highlightOnHover={true}\r\n                            fixedHeader={true}\r\n                            fixedHeaderScrollHeight={'68vh'}\r\n                        />\r\n                    </>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\">\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">Confirmation</DialogTitle>\r\n                <DialogContent className=\"p-4\">\r\n                    Do you want to delete the\r\n                    <span className=\"text-primary\">{\" \" + inputValue?.Task_Name + \" \"}</span>\r\n                    Task ?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button\r\n                        className=\"btn btn-light rounded-5 px-3 me-1\"\r\n                        onClick={closeDialog}>\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-primary rounded-5 px-3\"\r\n                        onClick={deleteTask}>\r\n                        Delete\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskMaster","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Button, Collapse } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\nconst TaskParametersComp = ({ isOpened, disableCollapse }) => {\r\n    const initialValue = {\r\n        Paramet_Id: '',\r\n        Paramet_Name: '',\r\n        Paramet_Data_Type: '',\r\n    }\r\n    const [parameters, setParameters] = useState([])\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(isOpened ? true : false);\r\n\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setParameters(data.data)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    const AddParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'POST',\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(CloseAddDialog)\r\n    }\r\n\r\n    const DeleteParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'DELETE',\r\n            bodyData: { Paramet_Id: inputValue.Paramet_Id }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(closeDeleteConfirmationDialog)\r\n    }\r\n\r\n    const CloseAddDialog = () => {\r\n        setAddDialog(false);\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDeleteDialog(false)\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n        const filteredResults = parameters.filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(term.toLowerCase())\r\n            );\r\n        });\r\n        setFilteredData(filteredResults);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <div className=\"flex-grow-1 mb-0\">\r\n                        {!disableCollapse && (\r\n                            <IconButton size='small' onClick={() => setOpen(!open)}>\r\n                                {open ? <ExpandLess style={{ fontSize: '18px', color: 'black' }} /> : <ExpandMore style={{ fontSize: '18px', color: 'black' }} />}\r\n                            </IconButton>\r\n                        )}\r\n                        Task Parameters\r\n                    </div>\r\n                    <button onClick={() => setAddDialog(true)} className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\">\r\n                        Create Parameter\r\n                    </button>\r\n                </div>\r\n\r\n                <Collapse in={open} unmountOnExit>\r\n\r\n                    <div className=\"card-body\" style={{ maxHeight: !disableCollapse ? '40vh' : 'auto', overflowY: 'auto' }}>\r\n\r\n                        <div className=\"row flex-row-reverse\">\r\n                            <div className=\"col-md-4 pb-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='border fa-14'>Sno</th>\r\n                                        <th className='border fa-14'>Parameter</th>\r\n                                        <th className='border fa-14'>Data Type</th>\r\n                                        {/* <th className='border fa-14'>Action</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(filteredData.length > 0 ? filteredData : filterInput === '' ? parameters : [])?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='border fa-14'>{i + 1}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Name}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Data_Type}</td>\r\n                                            {/* <td className='border fa-14'>\r\n                                                <IconButton onClick={() => openDeleteConfirmationDialog(o)}>\r\n                                                    <Delete sx={{color: 'red', fontSize: '16px'}} />\r\n                                                </IconButton>\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Collapse>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addDialog}\r\n                onClose={CloseAddDialog}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>Create Task Parameters</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    AddParameter()\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Name</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <input\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Name} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Name: e.target.value })} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Data Type</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <select\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Data_Type} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Data_Type: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Data Type</option>\r\n                                                <option value='number'>number</option>\r\n                                                <option value='text'>text</option>\r\n                                                <option value='date'>date</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={CloseAddDialog} type='button'>cancel</Button>\r\n                        <Button type='submit'>Create Parameter</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n            >\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the\r\n                    {inputValue?.Paramet_Name && <span className='text-primary px-1'>{inputValue?.Paramet_Name}</span>}\r\n                    Parameter?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} >Cancel</Button>\r\n                    <Button onClick={DeleteParameter}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskParametersComp;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["createSvgIcon","_jsx","d","RequiredStar","style","color","fontWeight","fontSize","children","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","_ref","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","React","props","ref","autoFocus","checked","checkedProp","checkedIcon","className","defaultChecked","disabled","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","concat","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target","CheckBoxOutlineBlank","CheckBox","_inputValue$Task_Para2","row","openAction","reload","onCloseFun","loadingOn","loadingOff","onTaskAdded","onToast","localData","localStorage","getItem","parseData","JSON","parse","initialValue","Task_Id","Task_Name","Task_Desc","Task_Group_Id","Entry_By","UserId","Company_id","Entry_Date","Update_By","Update_Date","Task_Parameters","dialog","setDialog","useState","isEdit","setIsEdit","taskData","setTaskData","taskGroup","setTaskGroup","taskParameters","setTaskParameters","inputValue","setInputValue","useEffect","fetchLink","address","then","data","success","catch","e","console","error","isValidObject","pre","inputVAL","_objectSpread","Object","entries","forEach","_ref2","key","closeDialog","_Fragment","onClick","Dialog","open","onClose","DialogTitle","onSubmit","preventDefault","async","_inputValue$Task_Para","paramArr","map","param","Param_Id","Paramet_Id","PostObj","response","method","bodyData","toast","message","postAndPutTask","DialogContent","maxLength","placeholder","o","i","Number","Task_Type_Id","Task_Type","Under_Task_Id","rows","Autocomplete","multiple","options","Default_Value","disableCloseOnSelect","getOptionLabel","option","Paramet_Name","Paramet_Data_Type","f","renderOption","_ref3","selected","Checkbox","isOptionEqualToValue","opt","val","renderInput","params","TextField","label","index","updatedDetString","DialogActions","filteredData","setFilteredData","setReload","contextObj","useContext","MyContext","filterInput","setFilterInput","rowValue","setRowValue","filteredResults","filter","item","values","some","String","toLowerCase","includes","tasksColumn","selector","sortable","Task_Group","Date","cell","toLocaleDateString","day","month","year","Edit_Rights","IconButton","Edit","Delete_Rights","handleDelete","Delete","sx","resetValues","TaskParametersComp","TaskMasterMgt","isEqualNumber","Add_Rights","term","DataTable","columns","pagination","highlightOnHover","fixedHeader","fixedHeaderScrollHeight","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","prop","overridesResolver","styles","indeterminate","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","isOpened","disableCollapse","parameters","setParameters","addDialog","setAddDialog","deleteDialog","setDeleteDialog","setOpen","CloseAddDialog","closeDeleteConfirmationDialog","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","maxHeight","overflowY","length","maxWidth","fullWidth","finally","Button","DeleteParameter"],"sourceRoot":""}