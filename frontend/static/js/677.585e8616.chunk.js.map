{"version":3,"file":"static/js/677.585e8616.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/react-bootstrap/esm/Table.js","Pages/Masters/BranchInfo.jsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import React, { useState, useEffect, Fragment, useContext } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button as MuiButton } from '@mui/material';\r\nimport { Edit, Delete } from '@mui/icons-material'\r\nimport { toast } from 'react-toastify';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport InvalidPageComp from \"../../Components/invalidCredential\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst initialState = {\r\n    BranchId: '',\r\n    Company_id: '',\r\n    BranchCode: '',\r\n    BranchName: '',\r\n    Tele_Code: '',\r\n    Tele1_Code: '',\r\n    BranchTel: '',\r\n    BranchTel1: '',\r\n    BranchAddress: '',\r\n    E_Mail: '',\r\n    BranchIncharge: '',\r\n    BranchIncMobile: '',\r\n    BranchCity: '',\r\n    Pin_Code: '',\r\n    State: '',\r\n    BranchCountry: '',\r\n    Entry_By: '',\r\n};\r\n\r\nfunction onlynum(e) {\r\n    e.target.value = e.target.value.replace(/[^0-9]/g, '');\r\n}\r\n\r\nfunction BranchInfo() {\r\n    const [branchData, setBranchData] = useState([]);\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const [reload, setReload] = useState(false);\r\n    const [company, setCompany] = useState([])\r\n    const [screen, setScreen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/branch?User_Id=${parseData?.UserId}&Company_id=${parseData?.Company_id}`,\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setBranchData(data.data);\r\n            }\r\n        });\r\n    }, [reload, parseData?.Company_id]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/company/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompany(data.data)\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [])\r\n\r\n    const input = [\r\n        {\r\n            label: 'Company',\r\n            elem: 'select',\r\n            options: [...company.map(obj => ({ value: obj.ID, label: obj.Name }))],\r\n            event: (e) => setInputValue({ ...inputValue, Company_id: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.Company_id,\r\n        },\r\n        {\r\n            label: 'Branch Name',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"Enter Branch Name\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchName: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchName,\r\n        },\r\n        {\r\n            label: 'Branch Code',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"Enter Branch Name\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchCode: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchCode,\r\n        },\r\n        {\r\n            label: 'Tele Code 1',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, Tele_Code: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.Tele_Code,\r\n        },\r\n        {\r\n            label: 'Branch Telephone 1',\r\n            elem: 'input',\r\n            oninput: (e) => onlynum(e),\r\n            event: (e) => setInputValue({ ...inputValue, BranchTel: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchTel,\r\n        },\r\n        {\r\n            label: 'Tele Code 2',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, Tele1_Code: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.Tele1_Code,\r\n        },\r\n        {\r\n            label: 'Branch Telephone 2',\r\n            elem: 'input',\r\n            oninput: (e) => onlynum(e),\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchTel1: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchTel1,\r\n        },\r\n        {\r\n            label: 'Email',\r\n            elem: 'input',\r\n            type: 'email',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, E_Mail: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.E_Mail,\r\n        },\r\n        {\r\n            label: 'Branch Incharge',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchIncharge: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchIncharge,\r\n        },\r\n        {\r\n            label: 'Incharge Mobile',\r\n            elem: 'input',\r\n            oninput: (e) => onlynum(e),\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchIncMobile: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchIncMobile,\r\n        },\r\n        {\r\n            label: 'City',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchCity: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchCity,\r\n        },\r\n        {\r\n            label: 'PinCode',\r\n            elem: 'input',\r\n            oninput: (e) => onlynum(e),\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, Pin_Code: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.Pin_Code,\r\n        },\r\n        {\r\n            label: 'State',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, State: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.State,\r\n        },\r\n        {\r\n            label: 'Country',\r\n            elem: 'input',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchCountry: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchCountry,\r\n        },\r\n        {\r\n            label: 'Address',\r\n            elem: 'textarea',\r\n            type: 'text',\r\n            placeholder: \"\",\r\n            event: (e) => setInputValue({ ...inputValue, BranchAddress: e.target.value }),\r\n            required: true,\r\n            value: inputValue?.BranchAddress,\r\n        },\r\n    ]\r\n\r\n    const switchScreen = () => {\r\n        setInputValue(initialState)\r\n        setScreen(!screen); setIsEdit(false)\r\n    }\r\n\r\n    const createFun = () => {\r\n        fetchLink({\r\n            address: `masters/branch`,\r\n            method: \"POST\",\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                switchScreen(false);\r\n                setReload(!reload)\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    const editFun = () => {\r\n        fetchLink({\r\n            address: `masters/branch`,\r\n            method: \"PUT\",\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                switchScreen();\r\n                setReload(!reload)\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const setEditRow = (row) => {\r\n        switchScreen(true); setInputValue(row); setIsEdit(true)\r\n    }\r\n\r\n    const setDeleteRow = (row) => {\r\n        setDeleteDialog(!deleteDialog); setInputValue(row);\r\n    }\r\n\r\n    const deleteFun = () => {\r\n        fetchLink({\r\n            address: `masters/branch`,\r\n            method: \"DELETE\",\r\n            bodyData: { BranchID: inputValue?.BranchId }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                toast.success(data.message); setInputValue(initialState); setDeleteDialog(false)\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    return Number(contextObj?.Read_Rights) === 1 ? (\r\n        <Fragment>\r\n            {!screen ? (\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                        Branches\r\n                        <div className=\"text-end\">\r\n                            <Button onClick={() => switchScreen(false)} className=\"rounded-5 px-3 py-1 fa-13 shadow\">Create Branch</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body overflow-scroll\" style={{ maxHeight: '78vh' }}>\r\n                        <div className=\"table-responsive\">\r\n                            <Table className=\"\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"fa-14\">Sno</th>\r\n                                        <th className=\"fa-14\">Code</th>\r\n                                        <th className=\"fa-14\">Branch</th>\r\n                                        <th className=\"fa-14\">Phone</th>\r\n                                        <th className=\"fa-14\">State</th>\r\n                                        <th className=\"fa-14\">City</th>\r\n                                        <th className=\"fa-14\">Address</th>\r\n                                        {(Number(contextObj?.Edit_Rights) === 1 || Number(contextObj?.Delete_Rights) === 1) && <th className=\"fa-14\">Action</th>}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {branchData.map((obj, item) => (\r\n                                        <tr key={item}>\r\n                                            <td className=\"fa-12\">{item + 1}</td>\r\n                                            <td className=\"fa-12\">{obj.BranchCode}</td>\r\n                                            <td className=\"fa-12\">{obj.BranchName}</td>\r\n                                            <td className=\"fa-12\">{obj.BranchTel1}</td>\r\n                                            <td className=\"fa-12\">{obj.State}</td>\r\n                                            <td className=\"fa-12\">{obj.BranchCity}</td>\r\n                                            <td className=\"fa-12\">{obj.BranchAddress}</td>\r\n                                            {(Number(contextObj?.Edit_Rights) === 1 || Number(contextObj?.Delete_Rights) === 1) && (\r\n                                                <td>\r\n                                                    {Number(contextObj?.Edit_Rights) === 1 && (\r\n                                                        <IconButton onClick={() => { setEditRow(obj) }} size='small'>\r\n                                                            <Edit className=\"fa-in\" />\r\n                                                        </IconButton>\r\n                                                    )}\r\n                                                    {Number(contextObj?.Delete_Rights) === 1 && (\r\n                                                        <IconButton onClick={() => { setDeleteRow(obj) }} size='small'>\r\n                                                            <Delete className=\"fa-in del-red\" />\r\n                                                        </IconButton>\r\n                                                    )}\r\n                                                </td>\r\n                                            )}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                        {isEdit ? 'Edit Branch' : 'Create Branch'}\r\n                        <div className=\"text-end\">\r\n                            <Button onClick={() => { switchScreen(false) }} className=\"rounded-5 px-3 py-1 fa-13 shadow\">Back</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            {input.map((field, index) => (\r\n                                <div key={index} className=\"col-lg-4 col-md-6 p-2 px-3\">\r\n                                    <label>{field.label}</label>\r\n                                    {field.elem === 'input' ? (\r\n                                        <input\r\n                                            type={field.type || 'text'}\r\n                                            className={'cus-inpt'}\r\n                                            onChange={field.event}\r\n                                            onInput={field.oninput}\r\n                                            disabled={field.disabled}\r\n                                            value={field.value}\r\n\r\n                                        />\r\n                                    ) : field.elem === 'select' ? (\r\n                                        <select\r\n                                            className={'cus-inpt'}\r\n                                            onChange={field.event}\r\n                                            value={field.value}>\r\n                                            <option value={''}>select</option>\r\n                                            {field.options.map((option, optionIndex) => (\r\n                                                <option key={optionIndex} value={option.value} disabled={option.disabled} defaultValue={option.selected}>\r\n                                                    {option.label}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    ) : field.elem === 'textarea' ? (\r\n                                        <textarea\r\n                                            className={'cus-inpt'}\r\n                                            onChange={field.event}\r\n                                            rows={4} value={field.value}>\r\n                                        </textarea>\r\n                                    ) : null}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer d-flex justify-content-end bg-white\">\r\n                        <Button onClick={() => { switchScreen(false) }} className=\"rounded-5 px-4 mx-1 btn-light bg-white\">{'Cancel'}</Button>\r\n                        <Button onClick={isEdit ? editFun : createFun} className=\"rounded-5 px-4 shadow mx-1\">{isEdit ? 'Update' : 'Create Branch'}</Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={setDeleteRow}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Confirmation\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <b  >{`Do you want to delete the ${inputValue?.BranchName && inputValue?.BranchName} Branch?`}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={setDeleteRow}>Cancel</MuiButton>\r\n                    <MuiButton onClick={deleteFun} autoFocus sx={{ color: 'red' }}>\r\n                        Delete\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Fragment>\r\n    ) : <InvalidPageComp />\r\n}\r\n\r\nexport default BranchInfo;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","_jsx","displayName","bsPrefix","variant","size","active","className","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","createSvgIcon","d","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass","children","initialState","BranchId","Company_id","BranchCode","BranchName","Tele_Code","Tele1_Code","BranchTel","BranchTel1","BranchAddress","E_Mail","BranchIncharge","BranchIncMobile","BranchCity","Pin_Code","State","BranchCountry","Entry_By","onlynum","e","value","replace","branchData","setBranchData","useState","localData","localStorage","getItem","parseData","JSON","parse","inputValue","setInputValue","reload","setReload","company","setCompany","screen","setScreen","isEdit","setIsEdit","deleteDialog","setDeleteDialog","contextObj","useContext","MyContext","useEffect","fetchLink","address","UserId","then","data","success","catch","console","log","input","label","elem","options","map","obj","ID","Name","required","placeholder","oninput","switchScreen","setDeleteRow","row","Number","Read_Rights","_jsxs","Fragment","field","index","onChange","onInput","option","optionIndex","defaultValue","selected","rows","editFun","method","bodyData","toast","message","error","createFun","style","maxHeight","Table","Edit_Rights","Delete_Rights","item","IconButton","Edit","Delete","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","MuiButton","deleteFun","BranchID","autoFocus","sx","color","InvalidPageComp","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","DialogContentTextRoot","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","root","inProps","useDefaultProps","ownerState","composedClasses","composeClasses","_extends","useUtilityClasses","component","clsx"],"sourceRoot":""}