{"version":3,"file":"static/js/2714.47e16d42.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/taxCalculator.js","../node_modules/@mui/icons-material/esm/Done.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","Pages/Sales/SalesInvoice/importFromSaleOrder.jsx","../node_modules/@mui/icons-material/esm/ClearAll.js","Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/Delete.js","Pages/Sales/SaleOrder/addItemToCart.jsx","Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/Add.js","Pages/Sales/SalesInvoice/variable.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { useEffect, useState } from \"react\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, LocalDate, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Button, Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Done } from \"@mui/icons-material\";\r\nimport { salesInvoiceDetailsInfo, salesInvoiceStaffInfo } from \"./variable\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\nconst validStockValue = (Item_Id, Godown_Id, stockInGodown) => {\r\n    const godownStockValue = toArray(stockInGodown).find(\r\n        godownItem => (\r\n            isEqualNumber(godownItem?.Product_Id, Item_Id) &&\r\n            isEqualNumber(godownItem?.Godown_Id, Godown_Id)\r\n        )\r\n    )?.Act_Bal_Qty;\r\n\r\n    if (\r\n        godownStockValue === null ||\r\n        godownStockValue === undefined ||\r\n        Number.isNaN(godownStockValue) ||\r\n        godownStockValue == 0\r\n    ) {\r\n        return 0;\r\n    }\r\n\r\n    return godownStockValue;\r\n};\r\n\r\nconst AddProductsInSalesInvoice = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    open,\r\n    onClose,\r\n    retailer,\r\n    children,\r\n    selectedItems = [],\r\n    setSelectedItems,\r\n    staffArray = [],\r\n    setStaffArray,\r\n    products = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    invoiceInfo = {},\r\n    setInvoiceInfo,\r\n    godowns = [],\r\n    stockInGodown = [],\r\n}) => {\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        search: false,\r\n        Godown: { value: '', label: 'Select Godown For Stock Details' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (checkIsNumber(retailer) && open) {\r\n            const { Fromdate, Todate } = filters;\r\n            if (loadingOn) loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder?Fromdate=${Fromdate}&Todate=${Todate}&Retailer_Id=${retailer}`\r\n            }).then(data => {\r\n                if (data.success) setSaleOrders(data.data);\r\n                else setSaleOrders([]);\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters.search])\r\n\r\n    const changeSelectedItems = (itemDetail, godownDetails = {}, deleteRow) => {\r\n\r\n        if (deleteRow) {\r\n            setInvoiceInfo(pre => ({ ...pre, So_No: '' }));\r\n            setSelectedItems([])\r\n            return;\r\n        }\r\n\r\n        setInvoiceInfo(pre => ({ ...pre, So_No: Number(itemDetail?.So_Id) }));\r\n\r\n        setSelectedItems(pre => {\r\n            const oldData = [...pre];\r\n            return toArray(itemDetail?.Products_List).map((cur, curIndex) => (\r\n                Object.fromEntries(\r\n                    Object.entries(salesInvoiceDetailsInfo).map(([key, value]) => {\r\n\r\n                        const productMaster = findProductDetails(cur.Item_Id);\r\n                        const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                        const isTaxable = gstPercentage > 0;\r\n\r\n                        const { Item_Rate, Bill_Qty, Amount } = cur;\r\n\r\n                        const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                        const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                        const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                        const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                        const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                        const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                        const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                        switch (key) {\r\n                            case 'S_No': return [key, curIndex + 1 ?? value];\r\n                            case 'Item_Id': return [key, cur['Item_Id'] ?? value];\r\n                            case 'Item_Name': return [key, productMaster?.Product_Name ?? value];\r\n                            case 'Item_Rate': return [key, toNumber(Item_Rate)];\r\n\r\n                            case 'Bill_Qty': return [key, toNumber(Bill_Qty)];\r\n                            case 'Act_Qty': return [key, toNumber(Bill_Qty)];\r\n                            case 'Alt_Act_Qty': return [key, toNumber(Bill_Qty)];\r\n\r\n                            case 'Amount': return [key, Amount];\r\n                            case 'HSN_Code': return [key, productMaster.HSN_Code ?? value];\r\n\r\n                            case 'Unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Act_unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Alt_Act_Unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Unit_Name': return [key, cur['Units'] ?? value];\r\n                            case 'GoDown_Id': {\r\n                                const isValidGodown = checkIsNumber(godownDetails?.Godown_Id);\r\n                                const isValidItem = checkIsNumber(godownDetails?.Item_Id);\r\n                                const isSameItem = isEqualNumber(cur?.Item_Id, godownDetails?.Item_Id);\r\n                                const oldGodown = oldData.find(\r\n                                    fndOld => isEqualNumber(fndOld.Item_Id, cur?.Item_Id)\r\n                                )?.GoDown_Id\r\n\r\n                                const newValue = (isValidGodown && isValidItem && isSameItem)\r\n                                    ? godownDetails.Godown_Id\r\n                                    : checkIsNumber(oldGodown) ? oldGodown : value;\r\n\r\n                                return [key, newValue];\r\n                            }\r\n\r\n                            case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                            case 'Total_Qty': return [key, toNumber(Bill_Qty)]\r\n                            case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                            case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                            case 'Tax_Rate': return [key, gstPercentage]\r\n                            case 'Cgst':\r\n                            case 'Sgst': return [key, cgstPer ?? 0]\r\n                            case 'Cgst_Amo':\r\n                            case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                            case 'Igst': return [key, igstPer ?? 0]\r\n                            case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                            case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                            default: return [key, value]\r\n                        }\r\n                    })\r\n                )\r\n            ))\r\n        });\r\n\r\n        const notInStaffList = [...new Map(\r\n            toArray(itemDetail?.Staff_Involved_List).filter(\r\n                staff => !staffArray.some(\r\n                    arrObj => isEqualNumber(arrObj.Emp_Id, staff.Involved_Emp_Id)\r\n                )\r\n            ).map(staff => [staff.Involved_Emp_Id, staff])\r\n        ).values()];\r\n\r\n        if (notInStaffList.length > 0) {\r\n            setStaffArray(prevStaffArray => [\r\n                ...prevStaffArray,\r\n                ...notInStaffList.map(staff => Object.fromEntries(\r\n                    Object.entries(salesInvoiceStaffInfo).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'Emp_Id': return [key, staff?.Involved_Emp_Id];\r\n                            case 'Emp_Name': return [key, staff?.EmpName];\r\n                            case 'Emp_Type_Id': return [key, staff?.Cost_Center_Type_Id];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                ))\r\n            ]);\r\n        }\r\n\r\n        // closeDialog();\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        if (onClose) onClose();\r\n        setSaleOrders([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>\r\n                    <div className=\"d-flex flex-wrap align-items-center \">\r\n                        <span className=\"flex-grow-1\">Select Sale Order</span>\r\n                        <IconButton\r\n                            onClick={closeDialog}\r\n                            color='success'\r\n                        >\r\n                            <Done className=\"fa-20\" />\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"d-flex flex-wrap align-items-end\">\r\n                        <div className=\"p-2\">\r\n                            <label className='d-block ms-2'>From Date</label>\r\n                            <input\r\n                                className=\"cus-inpt p-2 w-auto\"\r\n                                type=\"date\"\r\n                                value={filters?.Fromdate}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Fromdate: e.target.value }))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <label className='d-block ms-2'>To Date</label>\r\n                            <input\r\n                                className=\"cus-inpt p-2 w-auto\"\r\n                                type=\"date\"\r\n                                min={filters.Fromdate}\r\n                                value={filters?.Todate}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        {/* <div style={{ minWidth: '170px', maxWidth: '100%' }} className=\"p-2\">\r\n                            <label className='d-block ms-2'>Godown</label>\r\n                            <Select\r\n                                value={filters.Godown}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Godown: e }))}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(godowns).map(obj => ({ value: obj?.Godown_Id, label: obj?.Godown_Name }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                menuPortalTarget={document.body}\r\n                                isSearchable={true}\r\n                                placeholder={\"Select Godown\"}\r\n                                maxMenuHeight={200}\r\n                            />\r\n                        </div> */}\r\n                        <div className=\"p-2\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => setFilters(pre => ({ ...pre, search: !pre.search }))}\r\n                            >search</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    {saleOrders.map((invoice, ind) => {\r\n                        const {\r\n                            So_Inv_No, So_Date, VoucherTypeGet, Branch_Name,\r\n                            Sales_Person_Name, Total_Tax, Total_Invoice_value, Products_List\r\n                        } = invoice;\r\n\r\n                        const isChecked = isEqualNumber(invoiceInfo?.So_No, invoice.So_Id)\r\n\r\n                        return (\r\n                            <div className=\"container-fluid\" key={ind} >\r\n                                <div\r\n                                    className={`\r\n                                        invoice-card bg-white p-4 shadow-sm mb-4 border rounded  \r\n                                        ${isChecked ? ' border-primary ' : ''}\r\n                                        `\r\n                                    }\r\n                                >\r\n                                    {/* Header */}\r\n                                    <h5 className=\"d-flex align-items-center flex-wrap\">\r\n                                        <span className=\"me-2\">\r\n                                            <input\r\n                                                className=\"form-check-input shadow-none pointer\"\r\n                                                style={{ padding: '0.7em' }}\r\n                                                type=\"checkbox\"\r\n                                                checked={isChecked}\r\n                                                onChange={() => {\r\n                                                    if (isChecked) changeSelectedItems(invoice, null, true)\r\n                                                    else changeSelectedItems(invoice, null, false)\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <span>Invoice No: <span className=\"text-primary\">{So_Inv_No}</span></span>\r\n                                    </h5>\r\n                                    <div className=\"invoice-header d-flex justify-content-between flex-wrap border-bottom pb-3 mb-3\">\r\n                                        <div>\r\n                                            <div><strong>Invoice Date:</strong> {LocalDate(So_Date)}</div>\r\n                                            <div><strong>Voucher Type:</strong> {VoucherTypeGet}</div>\r\n                                            <div><strong>Branch:</strong> {Branch_Name}</div>\r\n                                        </div>\r\n                                        <div className=\"text-end\">\r\n                                            <h5 className=\"mt-2\"><strong>Total Invoice:</strong> ₹{Total_Invoice_value}</h5>\r\n                                            {/* <div><strong>Subtotal:</strong> ₹{Total_Before_Tax}</div> */}\r\n                                            <div><strong>Tax:</strong> ₹{Total_Tax}</div>\r\n                                            {/* <div><strong>Round Off:</strong> ₹{Round_off}</div> */}\r\n                                            <div><strong>Salesperson:</strong> {Sales_Person_Name}</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Product Table */}\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered table-striped product-table\">\r\n                                            <thead className=\"table-light\">\r\n                                                <tr>\r\n                                                    {['#', 'Product', 'Qty', 'Rate', 'Amount', 'Tax %', 'Final Amount', 'Godown'].map(\r\n                                                        (o, i) => (\r\n                                                            <th\r\n                                                                key={i}\r\n                                                                style={{\r\n                                                                    minWidth: '150px',\r\n                                                                    maxWidth: '160px'\r\n                                                                }}\r\n                                                            >{o}</th>\r\n                                                        )\r\n                                                    )}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Products_List.map((item, index) => (\r\n                                                    <tr key={item.SO_St_Id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{item.Product_Name}</td>\r\n                                                        <td>\r\n                                                            {item.Bill_Qty}\r\n                                                            {checkIsNumber(filters.Godown.value) && (\r\n                                                                ' (Bal: ' + validStockValue(item.Item_Id, filters.Godown.value, stockInGodown) + ') '\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td>₹{item.Item_Rate}</td>\r\n                                                        <td>₹{item.Amount}</td>\r\n                                                        <td>{item.Tax_Rate}%</td>\r\n                                                        <td>₹{item.Final_Amo}</td>\r\n                                                        <td>\r\n                                                            <select\r\n                                                                disabled={!isChecked}\r\n                                                                className=\"cus-inpt p-2\"\r\n                                                                value={\r\n                                                                    toArray(godowns).find(\r\n                                                                        godFnd => toArray(selectedItems).find(\r\n                                                                            fnd => (\r\n                                                                                isEqualNumber(fnd.Item_Id, item?.Item_Id)\r\n                                                                                && isChecked\r\n                                                                                && isEqualNumber(godFnd?.Godown_Id, fnd?.GoDown_Id)\r\n                                                                            )\r\n                                                                        )\r\n                                                                    )?.Godown_Id\r\n                                                                }\r\n                                                                onChange={e => changeSelectedItems(\r\n                                                                    invoice,\r\n                                                                    {\r\n                                                                        Godown_Id: e.target.value,\r\n                                                                        Item_Id: item?.Item_Id\r\n                                                                    },\r\n                                                                    false\r\n                                                                )}\r\n                                                            >\r\n                                                                <option value=\"\" disabled>Select</option>\r\n                                                                <optgroup label=\"Stock-Available-Godown\">\r\n                                                                    {\r\n                                                                        toArray(godowns).filter(\r\n                                                                            fil => (\r\n                                                                                toArray(stockInGodown).some(\r\n                                                                                    fnd => (\r\n                                                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                                        && isEqualNumber(item?.Item_Id, fnd?.Product_Id)\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            )\r\n                                                                        ).map((obj, objInd) => (\r\n                                                                            <option\r\n                                                                                value={obj?.Godown_Id}\r\n                                                                                key={objInd}\r\n                                                                            >\r\n                                                                                {obj?.Godown_Name\r\n                                                                                    + ' (Bal: '\r\n                                                                                    + validStockValue(item?.Item_Id, obj?.Godown_Id, stockInGodown)\r\n                                                                                    + ')'\r\n                                                                                }\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </optgroup>\r\n                                                                <optgroup label=\"Other-Godown\">\r\n                                                                    {\r\n                                                                        toArray(godowns).filter(\r\n                                                                            fil => !(\r\n                                                                                toArray(stockInGodown).some(\r\n                                                                                    fnd => (\r\n                                                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                                        && isEqualNumber(item?.Item_Id, fnd?.Product_Id)\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            )\r\n                                                                        ).map((obj, objInd) => (\r\n                                                                            <option value={obj?.Godown_Id} key={objInd}>{obj?.Godown_Name}</option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </optgroup>\r\n                                                            </select>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    {/* Summary */}\r\n                                    <div className=\"invoice-summary border-top pt-3 mt-3 text-end\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddProductsInSalesInvoice;\r\nexport {\r\n    validStockValue,\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import { useEffect, useState } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, Division, isEqualNumber, isValidObject, Multiplication, onlynum, RoundNumber, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll } from \"@mui/icons-material\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport { validStockValue } from \"../SalesInvoice/importFromSaleOrder\";\r\n\r\nconst AddItemToSaleOrderCart = ({\r\n    children,\r\n    orderProducts = [],\r\n    setOrderProducts,\r\n    open = false,\r\n    onClose,\r\n    products = [],\r\n    brands = [],\r\n    uom = [],\r\n    godowns = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    editValues = null,\r\n    initialValue = {},\r\n    stockInGodown = [],\r\n}) => {\r\n\r\n    const [productDetails, setProductDetails] = useState(initialValue);\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues) && open) {\r\n            setProductDetails(pre => (\r\n                Object.fromEntries(\r\n                    Object.entries(pre).map(([key, value]) => [key, editValues[key] ? editValues[key] : value])\r\n                )\r\n            ))\r\n        }\r\n    }, [editValues])\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const closeDialog = () => {\r\n        setProductDetails(initialValue);\r\n        onClose();\r\n    }\r\n\r\n    const handleProductInputChange = () => {\r\n\r\n        setOrderProducts(pre => {\r\n            const existingProducts = pre.filter(ordered => !isEqualNumber(ordered.Item_Id, productDetails.Item_Id));\r\n\r\n            const currentProductDetails = Object.fromEntries(\r\n                Object.entries(initialValue).map(([key, value]) => {\r\n                    const productMaster = findProductDetails(productDetails.Item_Id);\r\n                    const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const { Bill_Qty, Item_Rate, Amount } = productDetails;\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    switch (key) {\r\n                        case 'Item_Name': return [key, productMaster.Product_Name]\r\n                        case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                        case 'Total_Qty': return [key, Bill_Qty]\r\n                        case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                        case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                        case 'Tax_Rate': return [key, gstPercentage]\r\n                        case 'Cgst':\r\n                        case 'Sgst': return [key, cgstPer ?? 0]\r\n                        case 'Cgst_Amo':\r\n                        case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                        case 'Igst': return [key, igstPer ?? 0]\r\n                        case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                        case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                        default: return [key, productDetails[key] || value]\r\n                    }\r\n                })\r\n            );\r\n\r\n            return [...existingProducts, currentProductDetails];\r\n        });\r\n\r\n        closeDialog();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                maxWidth='md' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id) {\r\n                        handleProductInputChange();\r\n                    } else {\r\n                        toast.warn('Select Product');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n\r\n                            {/* brand */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...brands.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* group */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* item name */}\r\n                            <div className={\r\n                                Object.hasOwn(productDetails, 'GoDown_Id') ? 'col-md-8 p-2' : \"col-12 p-2\"\r\n                            }>\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: (\r\n                                            findProductDetails(productDetails.Item_Id)?.Product_Name\r\n                                        )\r\n                                    }}\r\n                                    isDisabled={checkIsNumber(productDetails.Pre_Id)}\r\n                                    menuPortalTarget={document.body}\r\n                                    onChange={e => {\r\n                                        const productInfo = findProductDetails(e.value);\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n\r\n                                            Item_Id: e.value,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Bill_Qty: 0,\r\n                                            Amount: 0,\r\n                                            Unit_Id: productInfo.UOM_Id ?? pre.Unit_Id,\r\n                                            Unit_Name: productInfo.Units ?? pre.Unit_Name,\r\n                                            HSN_Code: productInfo?.HSN_Code\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* godown  */}\r\n                            {Object.hasOwn(productDetails, 'GoDown_Id') && (\r\n                                <div className=\"col-md-4 p-2\">\r\n                                    <label>Godown</label>\r\n                                    <Select\r\n                                        value={{\r\n                                            value: productDetails?.GoDown_Id,\r\n                                            label: godowns.find(g => isEqualNumber(g.Godown_Id, productDetails?.GoDown_Id))?.Godown_Name || ''\r\n                                        }}\r\n                                        onChange={(e) => setProductDetails(pre => ({ ...pre, GoDown_Id: e.value }))}\r\n                                        options={[\r\n                                            { value: '', label: 'select', isDisabled: true },\r\n                                            {\r\n                                                label: 'Stock-Available-Godowns',\r\n                                                options: toArray(godowns).filter(fil => {\r\n                                                    const stockList = toArray(stockInGodown);\r\n\r\n                                                    if (stockList.length === 0) return false;\r\n\r\n                                                    return stockList.some(\r\n                                                        fnd => (\r\n                                                            isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                            && isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                        )\r\n                                                    )\r\n                                                }).map(obj => ({\r\n                                                    value: obj?.Godown_Id,\r\n                                                    label: obj?.Godown_Name\r\n                                                        + \" (Bal: \"\r\n                                                        + validStockValue(productDetails?.Item_Id, obj?.Godown_Id, stockInGodown)\r\n                                                        + \")\"\r\n                                                }))\r\n                                            },\r\n                                            {\r\n                                                label: 'Other Godowns',\r\n                                                options: toArray(godowns).filter(fil => {\r\n                                                    const stockList = toArray(stockInGodown);\r\n\r\n                                                    if (stockList.length === 0) return true;\r\n\r\n                                                    return !stockList.some(fnd =>\r\n                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id) &&\r\n                                                        isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                    );\r\n                                                }).map(obj => ({\r\n                                                    value: obj?.Godown_Id,\r\n                                                    label: obj?.Godown_Name\r\n                                                }))\r\n                                            }\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isDisabled={!checkIsNumber(productDetails?.Item_Id)}\r\n                                        menuPortalTarget={document.body}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Godown\"}\r\n                                        // maxMenuHeight={200}  \r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* quantity */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {Object.hasOwn(productDetails, 'Act_Qty') && (\r\n                                <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                    <label>Actual Quantity </label>\r\n                                    <input\r\n                                        value={productDetails.Act_Qty ? productDetails.Act_Qty : ''}\r\n                                        onInput={onlynum}\r\n                                        disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                        onChange={e => setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Act_Qty: e.target.value,\r\n                                        }))}\r\n                                        required\r\n                                        className=\"cus-inpt\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Rate */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* UOM */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={\r\n                                        Object.hasOwn(productDetails, 'UOM') ? productDetails.UOM : \r\n                                        Object.hasOwn(productDetails, 'Unit_Id') ? productDetails.Unit_Id : '' \r\n                                    }\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ \r\n                                            ...pre, \r\n                                            UOM: value, \r\n                                            Unit_Id: value, \r\n                                            Units: label,\r\n                                            Unit_Name: label, \r\n                                        }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {uom.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Amount */}\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(initialValue)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeDialog}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItemToSaleOrderCart;","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","import { getSessionUser, ISOString } from \"../../../Components/functions\";\r\n\r\nconst storage = getSessionUser().user;\r\n\r\nexport const salesInvoiceGeneralInfo = {\r\n    Do_Id: '',\r\n    Do_No: '',\r\n    Do_Year: '',\r\n    Do_Inv_No: '',\r\n    \r\n    Voucher_Type: '',\r\n    Do_Date: ISOString(),\r\n    Retailer_Id: '',\r\n    Retailer_Name: '',      // for Front-end purpose\r\n    Delivery_Person_Id: '', // not used in sales invoice\r\n    Branch_Id: '',\r\n    GST_Inclusive: 2,\r\n    IS_IGST: 0,\r\n    Narration: '',\r\n    Cancel_status: 1,\r\n    So_No: '',              // SALE ORDER ID (ONE TO MANY INVOICE MAPPING)\r\n    Trans_Type: '',\r\n\r\n    CSGT_Total: 0,\r\n    SGST_Total: 0,\r\n    IGST_Total: 0,\r\n    Total_Expences: 0,\r\n    Round_off: 0,\r\n    Total_Before_Tax: 0,\r\n    Total_Tax: 0,\r\n    Total_Invoice_value: 0,\r\n    Stock_Item_Ledger_Name: '',\r\n\r\n    // Delivery_Status: '',\r\n    // Delivery_Time: '',\r\n    // Delivery_Location: '',\r\n    // Delivery_Latitude: '',\r\n    // Delivery_Longitude: '',\r\n    // Collected_By: '',\r\n    // Collected_Status: '',\r\n    // Payment_Mode: '',\r\n    // Payment_Ref_No: '',\r\n    // Payment_Status: '',\r\n\r\n    Alter_Id: '',\r\n    Created_by: storage?.UserId,\r\n    Altered_by: storage?.UserId,\r\n    Created_on: '',\r\n    Alterd_on: '',\r\n}\r\n\r\n\r\nexport const salesInvoiceDetailsInfo = {\r\n    DO_St_Id: '',\r\n    Do_Date: '',\r\n    Delivery_Order_Id: '',\r\n\r\n    GoDown_Id: '',\r\n    S_No: '',\r\n    Item_Id: '',                // From front-end\r\n    Item_Name: '',\r\n    HSN_Code: '',\r\n    Taxble: '',\r\n\r\n    Bill_Qty: '',               // From front-end\r\n    Act_Qty: '',\r\n    Alt_Act_Qty: '',\r\n    Free_Qty: '',\r\n    Total_Qty: '',\r\n\r\n    Item_Rate: '',              // From front-end\r\n    Taxable_Rate: '',\r\n    Amount: '',                 // From front-end\r\n    \r\n    Unit_Id: '',                // From front-end\r\n    Unit_Name: '',\r\n    Act_unit_Id: '',\r\n    Alt_Act_Unit_Id: '',\r\n    \r\n    Taxable_Amount: '',\r\n    Tax_Rate: '',\r\n\r\n    Cgst: '',\r\n    Sgst: '',\r\n    Igst: '',\r\n    Cgst_Amo: '',\r\n    Sgst_Amo: '',\r\n    Igst_Amo: '',\r\n\r\n    Final_Amo: '',\r\n    Created_on: '',\r\n}\r\n\r\n\r\nexport const salesInvoiceExpencesInfo = {\r\n    Id: '',\r\n    Do_Id: '',\r\n    Sno: '',\r\n    Expense_Id: '',\r\n    Cgst: 0,\r\n    Cgst_Amo: 0,\r\n    Sgst: 0,\r\n    Sgst_Amo: 0,\r\n    Igst: 0,\r\n    Igst_Amo: 0,\r\n    Expence_Value: 0\r\n}\r\n\r\n\r\nexport const salesInvoiceStaffInfo = {\r\n    Id: '',\r\n    Do_Id: '',\r\n    Emp_Id: '',\r\n    Emp_Name: '',       // for Front-end purpose\r\n    Emp_Type_Id: '',\r\n}"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","validStockValue","Item_Id","Godown_Id","stockInGodown","_toArray$find","godownStockValue","toArray","find","godownItem","isEqualNumber","Product_Id","Act_Bal_Qty","isNaN","_ref","loadingOn","loadingOff","open","onClose","retailer","selectedItems","setSelectedItems","staffArray","setStaffArray","products","GST_Inclusive","IS_IGST","invoiceInfo","setInvoiceInfo","godowns","isInclusive","isNotTaxableBill","saleOrders","setSaleOrders","useState","filters","setFilters","Fromdate","ISOString","Todate","search","Godown","value","label","useEffect","checkIsNumber","fetchLink","address","concat","then","data","success","catch","e","console","error","finally","changeSelectedItems","itemDetail","godownDetails","pre","_objectSpread","So_No","So_Id","oldData","Products_List","map","cur","curIndex","Object","fromEntries","entries","salesInvoiceDetailsInfo","_ref2","_ref3","_cur$Item_Id","_productMaster$Produc","_productMaster$HSN_Co","_cur$Unit_Id","_cur$Unit_Id2","_cur$Unit_Id3","_cur$Units","key","productMaster","productid","_products$find","obj","findProductDetails","gstPercentage","Igst_P","Gst_P","isTaxable","Item_Rate","Bill_Qty","Amount","taxType","itemRateGst","gstInfo","cgstPer","igstPer","Cgst_Amo","Igst_Amo","Product_Name","HSN_Code","_oldData$find","isValidGodown","isValidItem","isSameItem","oldGodown","fndOld","GoDown_Id","notInStaffList","Map","Staff_Involved_List","filter","staff","some","arrObj","Emp_Id","Involved_Emp_Id","values","prevStaffArray","salesInvoiceStaffInfo","_ref4","EmpName","Cost_Center_Type_Id","closeDialog","_jsxs","_Fragment","Dialog","fullScreen","DialogTitle","IconButton","onClick","Done","DialogContent","onChange","target","required","min","Button","variant","invoice","ind","So_Inv_No","So_Date","VoucherTypeGet","Branch_Name","Sales_Person_Name","Total_Tax","Total_Invoice_value","isChecked","checked","LocalDate","o","i","minWidth","maxWidth","item","index","_toArray$find2","Tax_Rate","Final_Amo","disabled","godFnd","fnd","fil","objInd","Godown_Name","SO_St_Id","preprocessDataForExport","columns","row","flattenedRow","forEach","column","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","Field_Name","createCol","field","align","verticalAlign","Fied_Data","ButtonActions","buttonsData","ToolTipText","anchorEl","setAnchorEl","popOverOpen","Boolean","Tooltip","title","event","currentTarget","size","MoreVert","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","ListItemIcon","icon","ListItemText","formatString","val","dataType","NumberFormat","LocalTime","FilterableTable","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","setOpen","Fragment","TableRow","TableCell","sx","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isCommonValue","tdClass","tdIndex","horizondalalignClass","verticalAlignClass","foundEntry","log","colSpan","Card","Paper","ToggleOn","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","rows","header","Sno","autoTable","head","body","save","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","_findProductDetails","_godowns$find","orderProducts","setOrderProducts","brands","uom","editValues","initialValue","productDetails","setProductDetails","isValidObject","fullWidth","onSubmit","preventDefault","ordered","toast","warn","Select","BrandID","Brand","options","isDisabled","Brand_Name","customSelectStyles","menuPortalTarget","document","isSearchable","placeholder","maxMenuHeight","GroupID","Group","pro","reduce","acc","grp","Product_Group","push","Pro_Group","hasOwn","Pre_Id","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$Item_Rat","_productInfo$UOM_Id","_productInfo$Units","Unit_Id","UOM_Id","Unit_Name","Units","findIndex","g","stockList","onInput","onlynum","Multiplication","Division","Act_Qty","UOM","selectedIndex","text","DialogActions","startIcon","ClearAll","customTableStyles","table","width","headCells","menu","provided","state","zIndex","menuPortal","base","groupHeading","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","companyDetails","dataBase","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","storage","getSessionUser","user","salesInvoiceGeneralInfo","Do_Id","Do_No","Do_Year","Do_Inv_No","Voucher_Type","Do_Date","Retailer_Id","Retailer_Name","Delivery_Person_Id","Branch_Id","Narration","Cancel_status","Trans_Type","CSGT_Total","SGST_Total","IGST_Total","Total_Expences","Round_off","Total_Before_Tax","Stock_Item_Ledger_Name","Alter_Id","Created_by","UserId","Altered_by","Created_on","Alterd_on","DO_St_Id","Delivery_Order_Id","S_No","Item_Name","Taxble","Alt_Act_Qty","Free_Qty","Total_Qty","Taxable_Rate","Act_unit_Id","Alt_Act_Unit_Id","Taxable_Amount","Cgst","Sgst","Igst","Sgst_Amo","salesInvoiceExpencesInfo","Id","Expense_Id","Expence_Value","Emp_Name","Emp_Type_Id"],"sourceRoot":""}