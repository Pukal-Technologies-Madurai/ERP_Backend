{"version":3,"file":"static/js/8674.79e15486.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/SettingsOutlined.js","../node_modules/@mui/icons-material/esm/List.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/ArrowBackIosNewOutlined.js","Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/FileDownload.js","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx","../node_modules/export-to-csv/output/index.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}), 'SettingsOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3zm0 4h2v-2H3zm0-8h2V7H3zm4 4h14v-2H7zm0 4h14v-2H7zM7 7v2h14V7z\"\n}), 'List');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNewOutlined');","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","import React from 'react';\r\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\nimport { fetchLink } from './fetchComponent';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [];\r\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\r\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\r\n            //     : null\r\n            // )\r\n            return {\r\n                filterVariant: 'text',\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DynamicMuiTable = ({ reportId, company, queryFilters, buttons, groupingState }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(dataArray);\r\n    const filterCount = Object.keys(filters).length;\r\n    const showData = (filterCount > 0) ? filteredData : dataArray;\r\n    const [aggregationValues, setAggregationValues] = useState({});\r\n    const [dialogs, setDialogs] = useState({\r\n        filters: false,\r\n        aggregations: false\r\n    });\r\n    console.log(groupingState)\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template?ReportId=${reportId}`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                if (data.data[0]) {\r\n\r\n                    const o = data.data[0];\r\n                    const strucre = {\r\n                        Report_Type_Id: o?.Report_Type_Id,\r\n                        reportName: o?.Report_Name,\r\n                        tables: o?.tablesList?.map(table => ({\r\n                            Table_Id: table?.Table_Id,\r\n                            Table_Name: table?.Table_Name,\r\n                            AliasName: table?.AliasName,\r\n                            Table_Accronym: table?.Table_Accronym,\r\n                            isChecked: true,\r\n                            columns: table?.columnsList?.map(column => ({\r\n                                Column_Data_Type: column?.Column_Data_Type,\r\n                                Column_Name: column?.Column_Name,\r\n                                IS_Default: column?.IS_Default,\r\n                                IS_Join_Key: column?.IS_Join_Key,\r\n                                Order_By: column?.Order_By,\r\n                                Table_Id: column?.Table_Id,\r\n                                isVisible: true,\r\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\r\n                            }))\r\n                        }))\r\n                    }\r\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\r\n                        return colArr.concat(table.columns);\r\n                    }, []);\r\n                    setColumns(allColumns);\r\n                }\r\n            }\r\n        }).catch(e => console.log(e))\r\n\r\n    }, [reportId])\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            fetchLink({\r\n                address: `reports/template/executeQuery`,\r\n                method: 'POST',\r\n                headers: {\r\n                    'Db': company,\r\n                },\r\n                bodyData: {\r\n                    filterReq: queryFilters,\r\n                    ReportID: reportId\r\n                }\r\n            }).then(data => {\r\n                if (data?.success) {\r\n                    setDataArray(data?.data);\r\n                }\r\n            }).catch(e => console.log(e))\r\n        }\r\n    }, [company, reportId])\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\r\n\r\n        const muiColumns = displayColumns.filter(column =>\r\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\r\n        ).map(column => ({\r\n            header: column?.Column_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.accessColumnName,\r\n            sortable: true,\r\n            size: 150,\r\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\r\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\r\n            AggregatedCell: ({ cell }) => (\r\n                <div className='blue-text text-center float-end w-100'>\r\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\r\n                </div>\r\n            ),\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100`}>\r\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Column_Data_Type),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns, aggregationValues])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleExportRows = (rows) => {\r\n        const rowData = rows.map((row) => row.original);\r\n        const csv = generateCsv(csvConfig)(rowData);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const handleExportData = () => {\r\n        const csv = generateCsv(csvConfig)(dataArray);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: showData || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            // grouping: groupingState?.filter(o => typeof o === 'string')\r\n            // .filter(o => {\r\n            //     const ind = dispColmn.findIndex(indVal => indVal?.accessorKey === o);\r\n            //     return ind !== -1; \r\n            // })\r\n            // ,\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\r\n        muiTableProps: {\r\n            sx: {\r\n                caption: {\r\n                    captionSide: 'top',\r\n                },\r\n            },\r\n        },\r\n        muiTableHeadCellProps: {\r\n            sx: {\r\n                fontWeight: 'normal',\r\n            },\r\n            className: ' border text-center'\r\n        },\r\n        muiTableBodyCellProps: {\r\n            className: ' border-end text-center'\r\n        },\r\n        renderTopToolbarCustomActions: ({ table }) => (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    gap: '16px',\r\n                    padding: '8px',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={handleExportData}\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    All Data\r\n                </Button>\r\n                <Button\r\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                    onClick={() =>\r\n                        handleExportRows(table.getPrePaginationRowModel().rows)\r\n                    }\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    Filtered Rows\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\r\n                    startIcon={<SettingsOutlined />}\r\n                >\r\n                    Aggregation\r\n                </Button>\r\n                {/*  */}\r\n                {/* {buttons({grouping: table.getState().grouping})} */}\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\r\n                    className=\"d-md-none d-inline\"\r\n                    startIcon={<FilterAlt />}\r\n                >\r\n                    Filters\r\n                </Button>\r\n            </Box>\r\n        ),\r\n    })\r\n\r\n    const memoizedTableConfig = useMemo(() => table, [table, aggregationValues, showData, groupingState]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dataArray];\r\n        for (const column of columns) {\r\n            if (filters[column.accessColumnName]) {\r\n                if (filters[column.accessColumnName].type === 'range') {\r\n                    const { min, max } = filters[column.accessColumnName];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.accessColumnName];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.accessColumnName].type === 'date') {\r\n                    const { start, end } = filters[column.accessColumnName].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.accessColumnName]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.accessColumnName])) {\r\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${accessColumnName}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[accessColumnName] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Column_Name?.replace(/_/g, ' ')}\r\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row \">\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <div className=\"p-2\">\r\n                        <MaterialReactTable table={memoizedTableConfig} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialogs.filters}\r\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogs.aggregations}\r\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Aggregations</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\r\n                        {[...columns].filter(column => (\r\n                            isEqualNumber(column?.IS_Default, 0)\r\n                            && isEqualNumber(column?.IS_Join_Key, 0)\r\n                            && (column.Column_Data_Type === 'number'\r\n                                || column.Column_Data_Type === 'string')\r\n                        )).map((o, i) => (\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                <select\r\n                                    className='cus-inpt'\r\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\r\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\r\n                                >\r\n                                    {\r\n                                        [\r\n                                            { label: 'Select Aggregation', value: '' },\r\n                                            { label: 'count', value: 'count' },\r\n                                            { label: 'extent', value: 'extent' },\r\n                                            { label: 'max', value: 'max' },\r\n                                            { label: 'min', value: 'min' },\r\n                                            { label: 'mean', value: 'mean' },\r\n                                            { label: 'median', value: 'median' },\r\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\r\n                                            { label: 'sum', value: 'sum' },\r\n                                            { label: 'unique', value: 'unique' },\r\n                                        ].map((o, i) => (\r\n                                            <option value={o.value} key={i}>{o.label}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\r\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, \r\n} from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, Edit, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\r\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from '../../Components/filterableTable2'\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReportTemplates = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [templates, setTemplates] = useState([]);\r\n    const variableState = {\r\n        search: '',\r\n        openFilterDialog: false,\r\n        filterTablesAndColumns: {},\r\n        deleteConfirmationDialog: false,\r\n        preFilterDialog: false,\r\n    }\r\n    const [localVariable, setLocalVariable] = useState(variableState);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filters, setFilters] = useState({})\r\n    const nav = useNavigate();\r\n    const [reload, setReload] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template`,\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setTemplates(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [reload])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt me-1\"\r\n                        value={filters[Column_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt ms-1\"\r\n                        value={filters[Column_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between flex-wrap'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            return (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search...'\r\n                    className='cus-inpt'\r\n                    value={filters[Column_Name]?.value ?? ''}\r\n                    onChange={e => handleFilterChange(Column_Name, {\r\n                        type: 'textCompare',\r\n                        value: String(e.target.value).toLowerCase() || ''\r\n                    })}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    const Actions = ({ o }) => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const dataToForward = {\r\n            Report_Type_Id: o?.Report_Type_Id,\r\n            reportName: o?.Report_Name,\r\n            ReportState: o?.ReportState,\r\n            tables: o?.tablesList?.map(table => ({\r\n                Table_Id: table?.Table_Id,\r\n                Table_Name: table?.Table_Name,\r\n                AliasName: table?.AliasName,\r\n                Table_Accronym: table?.Table_Accronym,\r\n                isChecked: true,\r\n                columns: table?.columnsList?.map(column => ({\r\n                    Column_Data_Type: column?.Column_Data_Type,\r\n                    Column_Name: column?.Column_Name,\r\n                    IS_Default: column?.IS_Default,\r\n                    IS_Join_Key: column?.IS_Join_Key,\r\n                    Order_By: column?.Order_By,\r\n                    Table_Id: column?.Table_Id,\r\n                    isVisible: true\r\n                }))\r\n            }))\r\n        }\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n        const id = popOverOpen ? o?.Report_Name : undefined;\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <IconButton aria-describedby={id} onClick={handleClick}>\r\n                    <List />\r\n                </IconButton>\r\n\r\n                <Popover\r\n                    id={id}\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    setLocalVariable(pre => ({\r\n                                        ...pre,\r\n                                        filterTablesAndColumns: dataToForward,\r\n                                        openFilterDialog: true,\r\n                                    }));\r\n                                    setSelectedTab(0);\r\n                                    setFilters({})\r\n                                }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>OPEN</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                !storage?.Company_id\r\n                                    ? () => toast.warn('Select Company!')\r\n                                    : () => {\r\n                                        setLocalVariable(pre => ({\r\n                                            ...pre,\r\n                                            filterTablesAndColumns: dataToForward,\r\n                                            preFilterDialog: true,\r\n                                        }));\r\n                                        setFilters({});\r\n                                        setSelectedTab(0);\r\n                                    }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>FILTERS</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\r\n                        >\r\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>EDIT</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\r\n                        >\r\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\r\n                            <ListItemText>DELETE</ListItemText>\r\n                        </MenuItem>\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RowComp = ({ o }) => {\r\n        return (\r\n            <>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {o?.tablesList?.map((table, tableInd) => (\r\n                                <React.Fragment key={tableInd}>\r\n                                    {table?.columnsList?.map((column, columnInd) => (\r\n                                        <tr key={columnInd}>\r\n                                            {columnInd === 0 && (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\r\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\r\n                                                        {table?.AliasName}\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n                                            <td\r\n                                                className={`\r\n                                                    border fa-13 vctr\r\n                                                    ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\r\n                                                    ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\r\n                                                    `}\r\n                                            >\r\n                                                {column?.Column_Name}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeFilterDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\r\n        setFilters({})\r\n    }\r\n\r\n    const deleteTemplate = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: 'DELETE',\r\n            bodyData: {\r\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\r\n            }\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                toast.success(data.message)\r\n                setReload(pre => !pre)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\r\n    }\r\n\r\n    // const saveReportGroupingState = (reportid, grouping) => {\r\n    //     fetchLink({\r\n    //         address: `reports/template/templateState`,\r\n    //         method: 'POST',\r\n    //         bodyData: {\r\n    //             Report_Type_Id: reportid,\r\n    //             ReportState: grouping\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             toast.success(data.message);\r\n    //         } else {\r\n    //             toast.error(data.message)\r\n    //         }\r\n    //     }).catch(e => console.error(e))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end p-3\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className='cus-inpt w-auto'\r\n                        placeholder='Search Report Name'\r\n                        value={localVariable?.search ?? ''}\r\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\r\n                    />\r\n                </div>\r\n\r\n                <CardContent className='p-0'>\r\n                    <FilterableTable\r\n                        dataArray={\r\n                            !localVariable?.search ? templates : (\r\n                                [...templates].filter(fil =>\r\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\r\n                                )\r\n                            )\r\n                        }\r\n                        columns={[\r\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\r\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\r\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\r\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => <RowComp o={row} />}\r\n                        tableMaxHeight={650}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={localVariable?.openFilterDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\r\n                    <span>\r\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\r\n                        <DynamicMuiTable\r\n                            reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id}\r\n                            company={storage?.Company_id}\r\n                            queryFilters={filters}\r\n                            // buttons={({ grouping }) => (\r\n                            //     <Button\r\n                            //         onClick={() => saveReportGroupingState(localVariable?.filterTablesAndColumns?.Report_Type_Id, grouping)}\r\n                            //         disabled={grouping.length === 0}\r\n                            //         startIcon={<Save />}\r\n                            //     >\r\n                            //         Save State\r\n                            //     </Button>\r\n                            // )}\r\n                            // groupingState={\r\n                            //     localVariable?.filterTablesAndColumns?.ReportState \r\n                            //         ? JSON.parse(localVariable?.filterTablesAndColumns?.ReportState)\r\n                            //         : []\r\n                            // }\r\n                        />\r\n                    )}\r\n                    {/* {console.log(localVariable)} */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDialog}\r\n                        startIcon={<ArrowBackIosNewOutlined />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.deleteConfirmationDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDeleteConfirmationDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteTemplate}\r\n                        startIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='error'\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.preFilterDialog}\r\n                onClose={closeFilterDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\r\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                            <Tab label={table?.AliasName} key={i} />\r\n                        ))}\r\n                    </Tabs>\r\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                        <TabPanel value={selectedTab} index={i} key={i}>\r\n                            <div className=\"row\">\r\n                                {table?.columns?.map((column, ii) => (\r\n                                    !Boolean(Number(column?.IS_Default)) &&\r\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\r\n                                    (\r\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\r\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\r\n                                            {renderFilter(column)}\r\n                                        </div>\r\n                                    )\r\n                                ))}\r\n                            </div>\r\n                        </TabPanel>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeFilterDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\r\n                        startIcon={<Launch />}\r\n                        variant='contained'\r\n                    >\r\n                        Open report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTemplates","var y={fieldSeparator:\",\",decimalSeparator:\".\",quoteStrings:!0,quoteCharacter:'\"',showTitle:!1,title:\"My Generated Report\",filename:\"generated\",showColumnHeaders:!0,useTextFile:!1,useBom:!0,columnHeaders:[],useKeysAsHeaders:!1,boolDisplay:{true:\"TRUE\",false:\"FALSE\"},replaceUndefinedWith:\"\"},L=\"\\r\\n\",F=\"\\uFEFF\",q=($)=>Object.assign({},y,$);class Q extends Error{constructor($){super($);this.name=\"CsvGenerationError\"}}class T extends Error{constructor($){super($);this.name=\"EmptyHeadersError\"}}class U extends Error{constructor($){super($);this.name=\"CsvDownloadEnvironmentError\"}}class V extends Error{constructor($){super($);this.name=\"UnsupportedDataFormatError\"}}var X=($)=>$,z=($)=>$,Z=X,_=X,Y=X,K=X,N=X;var r=function($,x){if(x=='\"'&&$.indexOf('\"')>-1)return $.replace(/\"/g,'\"\"');return $},D=($)=>typeof $===\"object\"?K($.key):K($),h=($)=>typeof $===\"object\"?N($.displayLabel):N($),P=($,...x)=>x.reduce((W,j)=>j(W),$),S=($)=>(x)=>$.useBom?_(z(x)+F):x,R=($)=>(x)=>$.showTitle?B(_(z(x)+$.title))(Y(\"\")):x,B=($)=>(x)=>_(z($)+z(x)+L),E=($)=>(x,W)=>w($)(Y(z(x)+z(W))),w=($)=>(x)=>X(z(x)+$.fieldSeparator),O=($,x)=>(W)=>{if(!$.showColumnHeaders)return W;if(x.length<1)throw new T(\"Option to show headers but none supplied. Make sure there are keys in your collection or that you've supplied headers through the config options.\");let j=Y(\"\");for(let A=0;A<x.length;A++){const J=h(x[A]);j=E($)(j,b($,z(J)))}return j=Y(z(j).slice(0,-1)),B(W)(j)},C=($,x,W)=>(j)=>{let A=j;for(var J=0;J<W.length;J++){let I=Y(\"\");for(let M=0;M<x.length;M++){const H=D(x[M]),v=W[J][z(H)];I=E($)(I,b($,v))}I=Y(z(I).slice(0,-1)),A=B(A)(I)}return A},l=z,k=($)=>+$===$&&(!isFinite($)||Boolean($%1)),m=($,x)=>{if(k(x)){if($.decimalSeparator===\"locale\")return Z(x.toLocaleString());if($.decimalSeparator)return Z(x.toString().replace(\".\",$.decimalSeparator))}return Z(x.toString())},G=($,x)=>{let W=x;if($.quoteStrings||$.fieldSeparator&&x.indexOf($.fieldSeparator)>-1||$.quoteCharacter&&x.indexOf($.quoteCharacter)>-1||x.indexOf(\"\\n\")>-1||x.indexOf(\"\\r\")>-1)W=$.quoteCharacter+r(x,$.quoteCharacter)+$.quoteCharacter;return Z(W)},p=($,x)=>{const W=x?\"true\":\"false\";return Z($.boolDisplay[W])},g=($,x)=>{if(typeof x===\"undefined\"&&$.replaceUndefinedWith!==void 0)return G($,$.replaceUndefinedWith+\"\");if(x===null)return G($,\"null\");return G($,\"\")},b=($,x)=>{if(typeof x===\"number\")return m($,x);if(typeof x===\"string\")return G($,x);if(typeof x===\"boolean\"&&$.boolDisplay)return p($,x);if(x===null||typeof x===\"undefined\")return g($,x);throw new V(`\n    typeof ${typeof x} isn't supported. Only number, string, boolean, null and undefined are supported.\n    Please convert the data in your object to one of those before generating the CSV.\n    `)};var Q$=($)=>(x)=>{const W=q($),j=W.useKeysAsHeaders?Object.keys(x[0]):W.columnHeaders;let A=P(_(\"\"),S(W),R(W),O(W,j),C(W,j,x));if(z(A).length<1)throw new Q(\"Output is empty. Is your data formatted correctly?\");return A},s=($)=>(x)=>{const W=q($),j=z(x),A=W.useTextFile?\"plain\":\"csv\";return new Blob([j],{type:`text/${A};charset=utf8;`})},T$=($)=>(x)=>{if(!window)throw new U(\"Downloading only supported in a browser environment.\");const W=s($)(x),j=q($),A=j.useTextFile?\"txt\":\"csv\",J=`${j.filename}.${A}`,I=document.createElement(\"a\");I.download=J,I.href=URL.createObjectURL(W),I.setAttribute(\"visibility\",\"hidden\"),document.body.appendChild(I),I.click(),document.body.removeChild(I)};export{q as mkConfig,Q$ as generateCsv,T$ as download,l as asString,s as asBlob};\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["createSvgIcon","_jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","Tooltip","title","IconButton","onClick","event","currentTarget","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","CheckBoxOutlineBlank","checkedIcon","CheckBox","reportId","company","queryFilters","buttons","groupingState","dispColmn","setDispColmn","setDataArray","setColumns","filters","setFilters","filteredData","setFilteredData","showData","keys","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","useEffect","fetchLink","address","then","success","_o$tablesList","_strucre$tables","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","accessColumnName","allColumns","reduce","colArr","catch","method","bodyData","filterReq","ReportID","muiColumns","_column$Column_Name","accessorKey","sortable","aggregationFn","AggregatedCell","cell","getValue","filterVariant","filterFn","getFun","applyFilters","handleExportData","csv","generateCsv","download","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","muiTableContainerProps","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","Box","display","gap","flexWrap","Button","startIcon","FileDownload","getPrePaginationRowModel","rowData","original","handleExportRows","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","prevFilters","filtered","min","max","item","start","end","dateValue","Date","isArray","_filters$column$acces","includes","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","_ref5","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","MaterialReactTable","FilterAltOff","overflow","_column$Column_Name2","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","_o$Column_Name","_aggregationValues$o$","TabPanel","_objectWithoutProperties","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","Actions","dataToForward","ReportState","List","Visibility","Company_id","toast","warn","state","Edit","Delete","_o$tablesList2","tableInd","_table$columnsList2","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Add_Rights","variant","CardContent","fil","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","_ref7","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch","y","quoteStrings","quoteCharacter","showTitle","filename","showColumnHeaders","useTextFile","useBom","columnHeaders","boolDisplay","true","false","replaceUndefinedWith","q","$","assign","Q","Error","constructor","super","this","T","U","V","X","z","Z","_","Y","K","N","D","h","displayLabel","B","x","E","W","w","m","isFinite","k","toLocaleString","toString","G","indexOf","r","g","Q$","j","A","_len","_key","P","S","R","O","J","C","I","M","H","v","T$","window","Blob","s","document","createElement","href","URL","createObjectURL","setAttribute","appendChild","click","removeChild"],"sourceRoot":""}