{"version":3,"file":"static/js/3053.e1ad76a3.chunk.js","mappings":"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","sources":["Pages/Authorization/userBased.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, Button } from '@mui/material';\r\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Checkbox } from \"@mui/material\";\r\nimport { UnfoldMore } from '@mui/icons-material'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Select from 'react-select';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { customSelectStyles, MainMenu } from \"../../Components/tablecolumn\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\n\r\nconst postCheck = (param, Menu_id, UserId, loadingOn, loadingOff) => {\r\n    if (loadingOn) {\r\n        loadingOn()\r\n    }\r\n    fetchLink({\r\n        address: `authorization/userRights`,\r\n        method: 'POST',\r\n        bodyData: {\r\n            MenuId: Menu_id,\r\n            User: Number(UserId),\r\n            ReadRights: param.readRights === true ? 1 : 0,\r\n            AddRights: param.addRights === true ? 1 : 0,\r\n            EditRights: param.editRights === true ? 1 : 0,\r\n            DeleteRights: param.deleteRights === true ? 1 : 0,\r\n            PrintRights: param.printRights === true ? 1 : 0\r\n        },\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(data => {\r\n        if (!data.success) {\r\n            toast.error(data.message)\r\n        }\r\n    }).catch(e => console.error(e)).finally(() => {\r\n        if (loadingOff) {\r\n            loadingOff()\r\n        }\r\n    })\r\n}\r\n\r\nconst TRow = ({ UserId, data, loadingOn, loadingOff }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [readRights, setReadRights] = useState(data.Read_Rights === 1)\r\n    const [addRights, setAddRights] = useState(data.Add_Rights === 1)\r\n    const [editRights, setEditRights] = useState(data.Edit_Rights === 1)\r\n    const [deleteRights, setDeleteRights] = useState(data.Delete_Rights === 1)\r\n    const [printRights, setPrintRights] = useState(data.Print_Rights === 1)\r\n    const [pflag, setpFlag] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReadRights(data.Read_Rights === 1);\r\n        setAddRights(data.Add_Rights === 1);\r\n        setEditRights(data.Edit_Rights === 1);\r\n        setDeleteRights(data.Delete_Rights === 1);\r\n        setPrintRights(data.Print_Rights === 1);\r\n        setpFlag(false)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pflag === true) {\r\n            postCheck({ readRights, addRights, editRights, deleteRights, printRights }, data.id, UserId, loadingOn, loadingOff)\r\n        }\r\n    }, [readRights, addRights, editRights, deleteRights, printRights])\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover={true}>\r\n                <TableCell>{data.id}</TableCell>\r\n                <TableCell>{data.name}</TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={readRights} size='small'\r\n                        onChange={() => { setpFlag(true); setReadRights(!readRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={addRights} size='small'\r\n                        onChange={() => { setpFlag(true); setAddRights(!addRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={editRights} size='small'\r\n                        onChange={() => { setpFlag(true); setEditRights(!editRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={deleteRights} size='small'\r\n                        onChange={() => { setpFlag(true); setDeleteRights(!deleteRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={printRights} size='small'\r\n                        onChange={() => { setpFlag(true); setPrintRights(!printRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    {data?.SubMenu?.length > 0 && (\r\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                            <UnfoldMore />\r\n                        </IconButton>\r\n                    )}\r\n                </TableCell>\r\n            </TableRow>\r\n            <Dialog open={open} onClose={() => setOpen(!open)} maxWidth=\"lg\" fullWidth>\r\n                <DialogContent>\r\n                    <h3 style={{ paddingBottom: '0.5em' }}>\r\n                        Sub Menu\r\n                    </h3>\r\n                    <TableContainer component={Paper} sx={{ maxHeight: 650 }}>\r\n                        <Table stickyHeader aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {MainMenu.map(obj => (\r\n                                        <TableCell\r\n                                            key={obj.id}\r\n                                            variant={obj.variant}\r\n                                            align={obj.align}\r\n                                            width={obj.width}\r\n                                            sx={{ backgroundColor: 'rgb(15, 11, 42)', color: 'white' }}>\r\n                                            {obj.headname === \"Action\" ? 'Child Menu' : obj.headname}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data?.SubMenu?.map((obj, ind) => (\r\n                                    <STrow\r\n                                        key={ind}\r\n                                        data={obj}\r\n                                        UserId={UserId}\r\n                                        loadingOn={loadingOn}\r\n                                        loadingOff={loadingOff}\r\n                                    />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(!open)} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nconst STrow = ({ data, UserId, loadingOn, loadingOff }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [readRights, setReadRights] = useState(data.Read_Rights === 1)\r\n    const [addRights, setAddRights] = useState(data.Add_Rights === 1)\r\n    const [editRights, setEditRights] = useState(data.Edit_Rights === 1)\r\n    const [deleteRights, setDeleteRights] = useState(data.Delete_Rights === 1)\r\n    const [printRights, setPrintRights] = useState(data.Print_Rights === 1)\r\n    const [pflag, setpFlag] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReadRights(data.Read_Rights === 1);\r\n        setAddRights(data.Add_Rights === 1);\r\n        setEditRights(data.Edit_Rights === 1);\r\n        setDeleteRights(data.Delete_Rights === 1);\r\n        setPrintRights(data.Print_Rights === 1);\r\n        setpFlag(false)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pflag === true) {\r\n            postCheck({ readRights, addRights, editRights, deleteRights, printRights }, data.id, UserId, loadingOn, loadingOff)\r\n        }\r\n    }, [readRights, addRights, editRights, deleteRights, printRights])\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover={true}>\r\n                <TableCell>{data.id}</TableCell>\r\n                <TableCell>{data.name}</TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={readRights} size='small'\r\n                        onChange={() => { setpFlag(true); setReadRights(!readRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={addRights} size='small'\r\n                        onChange={() => { setpFlag(true); setAddRights(!addRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={editRights} size='small'\r\n                        onChange={() => { setpFlag(true); setEditRights(!editRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={deleteRights} size='small'\r\n                        onChange={() => { setpFlag(true); setDeleteRights(!deleteRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={printRights} size='small'\r\n                        onChange={() => { setpFlag(true); setPrintRights(!printRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    {data?.ChildMenu?.length > 0 && (\r\n                        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                            <UnfoldMore />\r\n                        </IconButton>\r\n                    )}\r\n                </TableCell>\r\n            </TableRow>\r\n            <Dialog open={open} onClose={() => setOpen(!open)} maxWidth=\"lg\" fullWidth>\r\n                <DialogContent>\r\n                    <h3 style={{ paddingBottom: '0.5em' }}>\r\n                        Child Menu\r\n                    </h3>\r\n                    <TableContainer component={Paper} sx={{ maxHeight: 650 }}>\r\n                        <Table stickyHeader aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {MainMenu.map(obj => (\r\n                                        <TableCell\r\n                                            key={obj.id}\r\n                                            variant={obj.variant}\r\n                                            align={obj.align}\r\n                                            width={obj.width}\r\n                                            sx={{ backgroundColor: 'rgb(15, 11, 42)', color: 'white' }}>\r\n                                            {obj.headname}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {data?.ChildMenu?.map((obj, ind) => <CTrow key={ind} data={obj} UserId={UserId} />)}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(!open)} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nconst CTrow = ({ data, UserId, loadingOn, loadingOff }) => {\r\n    const [readRights, setReadRights] = useState(data.Read_Rights === 1)\r\n    const [addRights, setAddRights] = useState(data.Add_Rights === 1)\r\n    const [editRights, setEditRights] = useState(data.Edit_Rights === 1)\r\n    const [deleteRights, setDeleteRights] = useState(data.Delete_Rights === 1)\r\n    const [printRights, setPrintRights] = useState(data.Print_Rights === 1)\r\n    const [pflag, setpFlag] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setReadRights(data.Read_Rights === 1);\r\n        setAddRights(data.Add_Rights === 1);\r\n        setEditRights(data.Edit_Rights === 1);\r\n        setDeleteRights(data.Delete_Rights === 1);\r\n        setPrintRights(data.Print_Rights === 1);\r\n        setpFlag(false)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (pflag === true) {\r\n            postCheck({ readRights, addRights, editRights, deleteRights, printRights }, data.id, UserId, loadingOn, loadingOff)\r\n        }\r\n    }, [readRights, addRights, editRights, deleteRights, printRights])\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover={true}>\r\n                <TableCell>{data.id}</TableCell>\r\n                <TableCell>{data.name}</TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={readRights} size='small'\r\n                        onChange={() => { setpFlag(true); setReadRights(!readRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={addRights} size='small'\r\n                        onChange={() => { setpFlag(true); setAddRights(!addRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={editRights} size='small'\r\n                        onChange={() => { setpFlag(true); setEditRights(!editRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={deleteRights} size='small'\r\n                        onChange={() => { setpFlag(true); setDeleteRights(!deleteRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Checkbox\r\n                        sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\r\n                        checked={printRights} size='small'\r\n                        onChange={() => { setpFlag(true); setPrintRights(!printRights) }} />\r\n                </TableCell>\r\n                <TableCell>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}\r\n\r\nconst UserBased = (props) => {\r\n    const [authData, setAuthData] = useState([]);\r\n    const [subRoutings, setSubRoutings] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const [currentAuthId, setCurrentAuthId] = useState({ value: parseData?.Autheticate_Id, label: parseData?.Name });\r\n    const [currentUserId, setCurrentUserId] = useState(parseData?.UserId)\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `authorization/userRights`,\r\n            headers: {\r\n                Authorization: currentAuthId.value\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setAuthData(data.data);\r\n                setSubRoutings(data.others.subRoutings)\r\n            }\r\n        })\r\n    }, [currentAuthId])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/users?Company_id=${parseData?.Company_id}`\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setUsers(data.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [parseData?.Company_id])\r\n\r\n    const handleUserChange = (selectedOption) => {\r\n        if (selectedOption) {\r\n            const selectedUser = users.find(user => user.Autheticate_Id === selectedOption.value);\r\n            setCurrentAuthId({ value: selectedUser?.Autheticate_Id, label: selectedUser.Name } || { value: parseData?.Autheticate_Id, label: parseData?.Name });\r\n            setCurrentUserId(selectedUser?.UserId || parseData.UserId);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <ToastContainer /> */}\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 pt-1\">\r\n                    <Select\r\n                        value={currentAuthId}\r\n                        onChange={(e) => handleUserChange(e)}\r\n                        options={[...users.map(obj => ({ value: obj.Autheticate_Id, label: obj.Name }))]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Select User\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <h6 style={{ marginBottom: '0.5em', borderBottom: '2px solid blue', width: 'fit-content' }}>Menu Access Control</h6>\r\n\r\n            <TableContainer component={Paper} sx={{ maxHeight: 650 }} title=\"Menu Access Control\">\r\n                <Table stickyHeader aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {MainMenu.map(obj => (\r\n                                <TableCell\r\n                                    key={obj.id}\r\n                                    variant={obj.variant}\r\n                                    align={obj.align}\r\n                                    width={obj.width}\r\n                                    sx={{ backgroundColor: 'rgb(15, 11, 42)', color: 'white' }}>\r\n                                    {obj.headname === \"Action\" ? 'Sub Menu' : obj.headname}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {authData.map((obj, index) => (\r\n                            <TRow\r\n                                key={index}\r\n                                data={obj}\r\n                                UserId={currentUserId}\r\n                                loadingOn={props.loadingOn}\r\n                                loadingOff={props.loadingOff}\r\n                            />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <br />\r\n            <h6 style={{ marginBottom: '0.5em', borderBottom: '2px solid blue', width: 'fit-content' }}>Sub-Routings Access Control</h6>\r\n\r\n            {subRoutings.length > 0 && (\r\n                <TableContainer component={Paper} sx={{ maxHeight: 650 }} title=\"Sub-Routings Access Control\">\r\n                    <Table stickyHeader aria-label=\"simple table\" size='small'>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {MainMenu.map(obj => (\r\n                                    <TableCell\r\n                                        key={obj.id}\r\n                                        variant={obj.variant}\r\n                                        align={obj.align}\r\n                                        width={obj.width}\r\n                                        sx={{ backgroundColor: 'rgb(15, 11, 42)', color: 'white' }}>\r\n                                        {obj.headname === \"Action\" ? 'Sub Menu' : obj.headname}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {subRoutings.map((obj, index) => (\r\n                                <CTrow\r\n                                    key={index}\r\n                                    data={obj}\r\n                                    UserId={currentUserId}\r\n                                    loadingOn={props.loadingOn}\r\n                                    loadingOff={props.loadingOff}\r\n                                />\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserBased;"],"names":["postCheck","param","Menu_id","UserId","loadingOn","loadingOff","fetchLink","address","method","bodyData","MenuId","User","Number","ReadRights","readRights","AddRights","addRights","EditRights","editRights","DeleteRights","deleteRights","PrintRights","printRights","headers","then","data","success","toast","error","message","catch","e","console","finally","TRow","_ref","_data$SubMenu","_data$SubMenu2","open","setOpen","useState","setReadRights","Read_Rights","setAddRights","Add_Rights","setEditRights","Edit_Rights","setDeleteRights","Delete_Rights","setPrintRights","Print_Rights","pflag","setpFlag","useEffect","id","_jsxs","_Fragment","children","TableRow","hover","_jsx","TableCell","name","Checkbox","sx","fontSize","checked","size","onChange","SubMenu","length","IconButton","onClick","UnfoldMore","Dialog","onClose","maxWidth","fullWidth","DialogContent","style","paddingBottom","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","MainMenu","map","obj","variant","align","width","backgroundColor","color","headname","TableBody","ind","STrow","DialogActions","Button","_ref2","_data$ChildMenu","_data$ChildMenu2","ChildMenu","CTrow","_ref3","props","authData","setAuthData","subRoutings","setSubRoutings","users","setUsers","localData","localStorage","getItem","parseData","JSON","parse","currentAuthId","setCurrentAuthId","value","Autheticate_Id","label","Name","currentUserId","setCurrentUserId","contextObj","useContext","MyContext","Authorization","others","concat","Company_id","log","className","Select","selectedOption","selectedUser","find","user","handleUserChange","options","styles","customSelectStyles","isSearchable","placeholder","marginBottom","borderBottom","title","index"],"sourceRoot":""}