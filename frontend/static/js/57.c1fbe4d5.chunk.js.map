{"version":3,"file":"static/js/57.c1fbe4d5.chunk.js","mappings":"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","sources":["Pages/Sales/TripMaster/tableColumns.js","Pages/Sales/TripMaster/DeliveryTripSheetAdd.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Close.js","Components/tablecolumn.js"],"sourcesContent":["import { ISOString } from \"../../../Components/functions\"\r\n\r\nexport const tripMasterDetails = {\r\n    Trip_Id: '',\r\n    Challan_No: '',\r\n    Branch_Id: '',\r\n    Trip_Date: ISOString(),\r\n    Vehicle_No: '',\r\n    StartTime: '',\r\n    EndTime: '',\r\n    Trip_No: '',\r\n    Trip_ST_KM: '',\r\n    Trip_EN_KM: '',\r\n    Trip_Tot_Kms: '',\r\n    Created_By: '',\r\n    Updated_By: '',\r\n    DO_Date:ISOString(),\r\n    Delivery_Person_Id:'',\r\n    BillType:'',\r\n    VoucherType:''\r\n}\r\n\r\nexport const tripDetailsColumns = {\r\n    Id: '',\r\n    Trip_Id: '',\r\n    Batch_No: '',\r\n    Journal_no: '',\r\n    From_Location: '',\r\n    To_Location: '',\r\n    S_No: '',\r\n    Reason: '',\r\n    Product_Id: '',\r\n    HSN_Code: '',\r\n    QTY: '',\r\n    KGS: '',\r\n    GST_Inclusive: '',\r\n    IS_IGST: '',\r\n    Gst_Rate: '',\r\n    Gst_P: '',\r\n    Cgst_P: '',\r\n    Sgst_P: '',\r\n    Igst_P: '',\r\n    Taxable_Value: '',\r\n    Round_off: '',\r\n    Total_Value: '',\r\n    Trip_From: '',\r\n    Party_And_Branch_Id: '',\r\n    Transporter_Id: '',\r\n    Dispatch_Date: '',\r\n    Delivery_Date: '',\r\n    Created_By: '',\r\n    Updated_By: '',\r\n}\r\n\r\nexport const tripStaffsColumns = {\r\n    Id: '',\r\n    Trip_Id: '',\r\n    Involved_Emp_Id: '',\r\n    Cost_Center_Type_Id: '',\r\n    Emp_Name: '',\r\n}","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport {\r\n    Addition,\r\n    checkIsNumber,\r\n    combineDateTime,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidDate,\r\n    isValidObject,\r\n    Subraction,\r\n} from \"../../../Components/functions\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Close, Delete, Search } from \"@mui/icons-material\";\r\nimport FilterableTable, {\r\n    createCol,\r\n} from \"../../../Components/filterableTable2\";\r\nimport { tripMasterDetails, tripStaffsColumns } from \"./tableColumns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Godown from \"../../Masters/Godown\";\r\n\r\nconst TripSheetGodownSearch = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const [deliveryPerson, setDeliveryPerson] = useState(null);\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Retailer_Id: \"\",\r\n        RetailerGet: \"ALL\",\r\n        Created_by: \"\",\r\n        CreatedByGet: \"ALL\",\r\n        Sales_Person_Id: \"\",\r\n        SalsePersonGet: \"ALL\",\r\n        Cancel_status: 0,\r\n        Route_Id: \"\",\r\n        RoutesGet: \"ALL\",\r\n        Area_Id: \"\",\r\n        AreaGet: \"ALL\",\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        VoucherType: [],\r\n        Broker:[],\r\n        Transporters:[],\r\n        Item:[],\r\n        Godown:\"\",\r\n        search: false,\r\n        addItemDialog: false,\r\n          Retailer: []     \r\n    });\r\n\r\n    const [transactionData, setTransactionData] = useState([]);\r\n    const [costCenter, setCostCenter] = useState([]);\r\n    const [costCenterCategory, setCostCenterCategory] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n    const [tripSheetInfo, setTripSheetInfo] = useState(tripMasterDetails);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\nconst [voucher, setVoucher] = useState([]);\r\n\r\nconst [broker, setBroker] = useState([]);\r\nconst [transporters, setTransporters] = useState([]);\r\nconst [items, setItems] = useState([]);\r\nconst [godowns, setGodowns] = useState([]);\r\nconst[retailers,setRetailers]=useState([])\r\n\r\n\r\n  useEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const [\r\n        branchResponse,\r\n        staffResponse,\r\n        staffCategory,\r\n        voucherResponse,\r\n        itemsRes,\r\n        godownRes,\r\n        retailerRes\r\n      ] = await Promise.all([\r\n        fetchLink({ address: `masters/branch/dropDown` }),\r\n        fetchLink({ address: `dataEntry/costCenter` }),\r\n        fetchLink({ address: `dataEntry/costCenter/category` }),\r\n        fetchLink({ address: `masters/voucher` }),\r\n        fetchLink({ address: `masters/products/dropDown` }),\r\n        fetchLink({ address: `masters/godown` }),\r\n        fetchLink({ address: `masters/retailers/dropDown` })\r\n      ]);\r\n\r\n      // Branches\r\n      const branchData = (branchResponse.success ? branchResponse.data : [])\r\n        .sort((a, b) => String(a?.BranchName).localeCompare(b?.BranchName));\r\n\r\n      // All Cost Centers\r\n      const staffData = (staffResponse.success ? staffResponse.data : [])\r\n        .sort((a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name));\r\n\r\n      // Cost Center Categories\r\n      const staffCategoryData = (staffCategory.success ? staffCategory.data : [])\r\n        .sort((a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category));\r\n\r\n      // Filter brokers and transporters\r\n      const brokers = staffData.filter(cc => cc.UserTypeGet === \"Broker\");\r\n      const transporters = staffData.filter(cc => cc.UserTypeGet === \"Transport\");\r\n\r\n      // Other masters\r\n      const voucherData = voucherResponse.success ? voucherResponse.data : [];\r\n      const itemData = itemsRes.success ? itemsRes.data : [];\r\n      const godownData = godownRes.success ? godownRes.data : [];\r\n      const retailData = retailerRes.success ? retailerRes.data : [];\r\n\r\n      // Update states\r\n      setVoucher(voucherData);\r\n      setBranch(branchData);\r\n      setCostCenter(staffData);\r\n      setCostCenterCategory(staffCategoryData);\r\n      setBroker(brokers);\r\n      setTransporters(transporters);\r\n      setGodowns(godownData);\r\n      setItems(itemData);\r\n      setRetailers(retailData);\r\n\r\n    } catch (e) {\r\n      console.error(\"Error fetching data:\", e);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\n\r\n const voucherTypeOptions = [\r\n        { value: '', label: 'ALL' },\r\n        ...voucher\r\n            .filter(obj => obj.Type === 'SALES')\r\n            .map(obj => ({ \r\n                value: obj?.Vocher_Type_Id, \r\n                label: obj?.Voucher_Type \r\n            }))\r\n    ];\r\n\r\n    const tripVoucherTypeOptions = voucher\r\n        .filter(obj => obj.Type === 'SALES')\r\n        .map(obj => ({ \r\n            value: obj?.Voucher_Type, \r\n            label: obj?.Voucher_Type \r\n        }));\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSalePerson(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const extractHHMM = (timeString) => {\r\n            const date = new Date(timeString);\r\n            const hours = date.getHours();\r\n            const minutes = date.getMinutes();\r\n            return `${hours < 10 ? \"0\" + hours : hours}:${minutes < 10 ? \"0\" + minutes : minutes\r\n                }`;\r\n        };\r\n\r\n        const productsArray = stateDetails?.Product_Array;\r\n        const employeesArray = stateDetails?.Employees_Involved;\r\n        if (\r\n            isValidObject(stateDetails) &&\r\n            Array.isArray(productsArray) &&\r\n            Array.isArray(employeesArray)\r\n        ) {\r\n            setTripSheetInfo((prev) => ({\r\n                ...prev,\r\n                ...Object.fromEntries(\r\n                    Object.entries(tripMasterDetails).map(([key, value]) => {\r\n                        if (key === \"Trip_Date\")\r\n                            return [\r\n                                key,\r\n                                stateDetails[key] ? ISOString(stateDetails[key]) : value,\r\n                            ];\r\n                        if (key === \"Branch_Id\") return [key, stateDetails[key] ?? value];\r\n                        if (key === \"StartTime\" || key === \"EndTime\")\r\n                            return [\r\n                                key,\r\n                                stateDetails[key] ? extractHHMM(stateDetails[key]) : value,\r\n                            ];\r\n\r\n                        return [key, stateDetails[key] ?? value];\r\n                    })\r\n                ),\r\n                Product_Array: productsArray,\r\n            }));\r\n\r\n            setSelectedItems(productsArray);\r\n            setStaffInvolvedList(\r\n                employeesArray.map((staffData) =>\r\n                    Object.fromEntries(\r\n                        Object.entries(tripStaffsColumns).map(([key, value]) => {\r\n                            return [key, staffData[key] ?? value];\r\n                        })\r\n                    )\r\n                )\r\n            );\r\n\r\n            const deliveryStaff = employeesArray.find(\r\n                (staff) => Number(staff.Cost_Center_Type_Id) === 9\r\n            );\r\n            if (deliveryStaff) {\r\n                setDeliveryPerson({\r\n                    UserId: deliveryStaff.Involved_Emp_Id,\r\n                    Name: deliveryStaff.Emp_Name,\r\n                });\r\n            } else {\r\n                setDeliveryPerson(null);\r\n            }\r\n        }\r\n    }, [stateDetails]);\r\n\r\n    // const searchTransaction = (e) => {\r\n    //     e.preventDefault();\r\n    //     const { Fromdate, Todate, Sales_Person_Id,Broker,Transporters,Godown,Item,Retailer_Id   } = filters;\r\n    //     console.log(\"filterts\",filters)\r\n    //    const branchValue =filters?.Branch || '';\r\n    //    const VoucherValue=filters?.VoucherType || '';\r\n    //     if (Fromdate && Todate) {\r\n    //         if (loadingOn) loadingOn();\r\n    //         setTransactionData([]);\r\n    //         fetchLink({\r\n    //             address: `delivery/deliveryDetailsList?Fromdate=${Fromdate}&Todate=${Todate}&Sales_Person_Id=${Sales_Person_Id}&VoucherType=${VoucherValue}&Branch=${branchValue}\r\n    //             &Broker=${Broker}&Transporter=${Transporters}&Godown=${Godown}&Item=${Item}&Retailer=${Retailer_Id}`,\r\n    //         })\r\n    //             .then((data) => {\r\n    //                 if (data.success) setTransactionData(data.data);\r\n    //             })\r\n    //             .catch((e) => console.log(e))\r\n    //             .finally(() => {\r\n    //                 if (loadingOff) loadingOff();\r\n    //             });\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\nconst searchTransaction = (e) => {\r\n    e.preventDefault();\r\n    const { Fromdate, Todate, Sales_Person_Id, Broker, Transporters, Godown, Item, Retailer, VoucherType } = filters;\r\n    \r\n   \r\n    const voucherTypeString = Array.isArray(VoucherType) ? VoucherType.join(',') : VoucherType || '';\r\n    const brokerString = Array.isArray(Broker) ? Broker.join(',') : Broker || '';\r\n    const transporterString = Array.isArray(Transporters) ? Transporters.join(',') : Transporters || '';\r\n    const itemString = Array.isArray(Item) ? Item.join(',') : Item || '';\r\n    const retailerString = Array.isArray(Retailer) ? Retailer.join(',') : Retailer || '';\r\n    const branchValue = filters?.Branch || '';\r\n    \r\n    if (Fromdate && Todate) {\r\n        if (loadingOn) loadingOn();\r\n        setTransactionData([]);\r\n        fetchLink({\r\n            address: `delivery/deliveryDetailsList?Fromdate=${Fromdate}&Todate=${Todate}&Sales_Person_Id=${Sales_Person_Id}&VoucherType=${voucherTypeString}&Branch=${branchValue}\r\n            &Broker=${brokerString}&Transporter=${transporterString}&Godown=${Godown}&Item=${itemString}&Retailer=${retailerString}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) setTransactionData(data.data);\r\n            })\r\n            .catch((e) => console.log(e))\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    }\r\n};\r\n\r\nconst MultiSelect = ({ value, onChange, options, placeholder, isSearchable = true }) => {\r\n    return (\r\n        <Select\r\n            isMulti\r\n            value={value}\r\n            onChange={onChange}\r\n            options={options}\r\n            placeholder={placeholder}\r\n            styles={{\r\n                ...customSelectStyles,\r\n                menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n            }}\r\n            isSearchable={isSearchable}\r\n            menuPortalTarget={document.body}\r\n            menuPosition=\"fixed\"\r\n            menuPlacement=\"auto\"\r\n        />\r\n    );\r\n};\r\n\r\n\r\n    const resetForm = () => {\r\n        setSelectedItems([]);\r\n        setStaffInvolvedList([]);\r\n        setTripSheetInfo(tripMasterDetails);\r\n        setTransactionData([]);\r\n    };\r\n\r\n    const saveTripSheet = () => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderTrip`,\r\n            method: checkIsNumber(tripSheetInfo?.Trip_Id) ? \"PUT\" : \"POST\",\r\n            bodyData: {\r\n                ...tripSheetInfo,\r\n                StartTime:\r\n                    tripSheetInfo.StartTime && tripSheetInfo.Trip_Date\r\n                        ? combineDateTime(tripSheetInfo.Trip_Date, tripSheetInfo.StartTime)\r\n                        : \"\",\r\n                EndTime:\r\n                    tripSheetInfo.EndTime && tripSheetInfo.Trip_Date\r\n                        ? combineDateTime(tripSheetInfo.Trip_Date, tripSheetInfo.EndTime)\r\n                        : \"\",\r\n                Product_Array: selectedItems,\r\n                Delivery_Person_Id: deliveryPerson?.UserId,\r\n                EmployeesInvolved: staffInvolvedList.filter(\r\n                    (staff) =>\r\n                        checkIsNumber(staff.Involved_Emp_Id) &&\r\n                        checkIsNumber(staff.Cost_Center_Type_Id)\r\n                ),\r\n            },\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    resetForm();\r\n                    toast.success(data.message);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e))\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    };\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n                                {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>\r\n                                {row.Narration}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handleCostCenterChange = (e, index) => {\r\n        setStaffInvolvedList((prev) => {\r\n            const updatedList = prev.map((item, ind) => {\r\n                if (isEqualNumber(ind, index)) {\r\n                    const updatedItem = { ...item, Cost_Center_Type_Id: e.target.value };\r\n                    if (Number(updatedItem.Cost_Center_Type_Id) === 9) {\r\n                        setDeliveryPerson({\r\n                            UserId: updatedItem.Involved_Emp_Id,\r\n                            Name: updatedItem.Emp_Name,\r\n                        });\r\n                    } else if (deliveryPerson?.UserId === updatedItem.Involved_Emp_Id) {\r\n                        setDeliveryPerson(null);\r\n                    }\r\n                    return updatedItem;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return updatedList;\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (row) => {\r\n        setSelectedItems((prevSelectedItems) => {\r\n            const isSelected = prevSelectedItems.some(\r\n                (selectedRow) => selectedRow.Do_Id == row.Do_Id\r\n            );\r\n\r\n            if (isSelected) {\r\n                return prevSelectedItems.filter(\r\n                    (selectedRow) => selectedRow.Do_Id != row.Do_Id\r\n                );\r\n            } else {\r\n                return [...prevSelectedItems, row];\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"d-flex flex-wrap align-items-center border-bottom p-2\">\r\n                    <h5 className=\"flex-grow-1 m-0 ps-2\">Trip Sheet Creation</h5>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={saveTripSheet}\r\n                        disabled={\r\n                            selectedItems.length === 0 ||\r\n                            !isValidDate(tripSheetInfo.Trip_Date)\r\n                        }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n\r\n                <CardContent style={{ minHeight: 500 }}>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                            <div\r\n                                className=\"border p-2\"\r\n                                style={{ minHeight: \"30vh\", height: \"100%\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                            setStaffInvolvedList([\r\n                                                ...staffInvolvedList,\r\n                                                { ...tripStaffsColumns },\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"fa-13\">Sno</th>\r\n                                            <th className=\"fa-13\">Staff Name</th>\r\n                                            <th className=\"fa-13\">Category</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                  <tbody>\r\n                                        {staffInvolvedList.map((row, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"fa-13 vctr text-center\">{index + 1}</td>\r\n                                                <td className=\"fa-13 w-100 p-0\">\r\n                                                    <Select\r\n                                                        value={{\r\n                                                            value: row?.Involved_Emp_Id,\r\n                                                            label: row?.Emp_Name,\r\n                                                        }}\r\n                                                        onChange={(e) => {\r\n                                                            setStaffInvolvedList((prev) => {\r\n                                                                const updatedList = prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = costCenter.find((c) =>\r\n                                                                            isEqualNumber(c.Cost_Center_Id, e.value)\r\n                                                                        );\r\n                                                                        const updatedItem = {\r\n                                                                            ...item,\r\n                                                                            Cost_Center_Type_Id:\r\n                                                                                item.Cost_Center_Type_Id ||\r\n                                                                                staff.User_Type ||\r\n                                                                                0,\r\n                                                                            Involved_Emp_Id: e.value,\r\n                                                                            Emp_Name: staff.Cost_Center_Name ?? \"\",\r\n                                                                        };\r\n\r\n                                                                        if (\r\n                                                                            Number(\r\n                                                                                updatedItem.Cost_Center_Type_Id\r\n                                                                            ) === 9\r\n                                                                        ) {\r\n                                                                            setDeliveryPerson({\r\n                                                                                UserId: updatedItem.Involved_Emp_Id,\r\n                                                                                Name: updatedItem.Emp_Name,\r\n                                                                            });\r\n                                                                        } else if (\r\n                                                                            deliveryPerson?.UserId ===\r\n                                                                            updatedItem.Involved_Emp_Id\r\n                                                                        ) {\r\n                                                                            setDeliveryPerson(null);\r\n                                                                        }\r\n\r\n                                                                        return updatedItem;\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n\r\n                                                                return updatedList;\r\n                                                            });\r\n                                                        }}\r\n                                                        options={costCenter\r\n                                                            .filter(\r\n                                                                (fil) =>\r\n                                                                    staffInvolvedList.findIndex((st) =>\r\n                                                                        isEqualNumber(\r\n                                                                            st.Cost_Center_Type_Id,\r\n                                                                            fil.Cost_Center_Id\r\n                                                                        )\r\n                                                                    ) === -1\r\n                                                            )\r\n                                                            .map((st) => ({\r\n                                                                value: st.Cost_Center_Id,\r\n                                                                label: st.Cost_Center_Name,\r\n                                                            }))}\r\n                                                        styles={customSelectStyles}\r\n                                                        isSearchable\r\n                                                        placeholder=\"Select Staff\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td\r\n                                                    className=\"fa-13 vctr p-0\"\r\n                                                    style={{ maxWidth: \"130px\", minWidth: \"110px\" }}\r\n                                                >\r\n                                                    <select\r\n                                                        value={row?.Cost_Center_Type_Id}\r\n                                                        onChange={(e) => handleCostCenterChange(e, index)}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    >\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {costCenterCategory.map((st, sti) => (\r\n                                                            <option value={st?.Cost_Category_Id} key={sti}>\r\n                                                                {st?.Cost_Category}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                                <td className=\"fa-13 vctr text-center\">\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm\"\r\n                                                        onClick={() => {\r\n                                                            setStaffInvolvedList((prev) => {\r\n                                                                const updatedList = prev.filter(\r\n                                                                    (_, i) => i !== index\r\n                                                                );\r\n\r\n                                                                if (\r\n                                                                    deliveryPerson?.UserId === row.Involved_Emp_Id\r\n                                                                ) {\r\n                                                                    setDeliveryPerson(null);\r\n                                                                }\r\n\r\n                                                                return updatedList;\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <Close />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Stock Journal Details */}\r\n                        <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0\">\r\n                            <div\r\n                                className=\"border p-2\"\r\n                                style={{ minHeight: \"30vh\", height: \"100%\" }}\r\n                            >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>\r\n                                            Branch <span style={{ color: \"red\" }}>*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            value={tripSheetInfo.Branch_Id}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Branch_Id: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            placeholder={\"Select Branch\"}\r\n                                            className=\"cus-inpt mb-2 p-2\"\r\n                                        >\r\n                                            <option value=\"\" disabled>\r\n                                                Select Branch\r\n                                            </option>\r\n                                            {branch.map((br, bi) => (\r\n                                                <option key={bi} value={br.BranchId}>\r\n                                                    {br.BranchName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip_Date</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Trip_Date}\r\n                                            type=\"date\"\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Trip_Date: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Vehicle No</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Vehicle_No}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Vehicle_No: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-6 col-sm-12 p-2\">\r\n                                        <label>\r\n                                            Delivery Person <span style={{ color: \"red\" }}>*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            id=\"delivery-person\"\r\n                                            name=\"deliveryPerson\"\r\n                                            type=\"text\"\r\n                                            value={deliveryPerson ? deliveryPerson.Name : \"\"}\r\n                                            readOnly\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Delivery Person\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip No</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Trip_No}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Trip_No: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Voucher Type</label>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                            value={tripSheetInfo?.VoucherType ?? \"\"} \r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    VoucherType: e.target.value,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option value=\"\">Select Voucher Type</option>\r\n                                            <option value=\"0\">SALES</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Bill Type</label>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                            value={tripSheetInfo?.BillType ?? \"\"}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    BillType: e.target.value,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option value=\"\">Select Bill Type</option>\r\n                                            <option value=\"SALES\">SALES</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip Status</label>\r\n                                        <select\r\n                                            value={tripSheetInfo?.TripStatus || \"\"}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo((pre) => ({\r\n                                                    ...pre,\r\n                                                    TripStatus: e.target.value,\r\n                                                }))\r\n                                            }\r\n                                            className=\"cus-inpt p-2\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"New\">New</option>\r\n                                            <option value=\"OnProcess\">OnProcess</option>\r\n                                            <option value=\"Completed\">Completed</option>\r\n                                            <option value=\"Canceled\">Canceled</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th colSpan={2} className=\"fa-13 text-center\">\r\n                                                    Time\r\n                                                </th>\r\n                                                <th colSpan={2} className=\"fa-13 text-center\">\r\n                                                    Distance\r\n                                                </th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className=\"fa-13 text-center\">Start </th>\r\n                                                <th className=\"fa-13 text-center\">End</th>\r\n                                                <th className=\"fa-13 text-center\">Start (Km)</th>\r\n                                                <th className=\"fa-13 text-center\">End (Km)</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                StartTime: e.target.value,\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.StartTime}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                EndTime: e.target.value,\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.EndTime}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                Trip_ST_KM: e.target.value,\r\n                                                                Trip_Tot_Kms: Subraction(\r\n                                                                    pre.Trip_EN_KM ?? 0,\r\n                                                                    e.target.value ?? 0\r\n                                                                ),\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.Trip_ST_KM}\r\n                                                        min={0}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                        placeholder=\"Kilometers\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                Trip_EN_KM: e.target.value,\r\n                                                                Trip_Tot_Kms: Subraction(\r\n                                                                    e.target.value ?? 0,\r\n                                                                    pre.Trip_ST_KM ?? 0\r\n                                                                ),\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.Trip_EN_KM}\r\n                                                        min={Addition(tripSheetInfo?.Trip_ST_KM, 1)}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                        placeholder=\"Kilometers\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        <div className=\"d-flex justify-content-end gap-3\">\r\n                            <h6 className=\"m-0 text-muted\">\r\n        Total Bill Qty: {selectedItems?.reduce((acc, item) => \r\n            acc + (item?.Products_List?.reduce((sum, product) => \r\n                sum + (parseFloat(product?.Bill_Qty) || 0), 0) || 0), 0)\r\n        }\r\n    </h6>\r\n                            <h6 className=\"m-0 text-muted\">Selected Sales Orders: {selectedItems.length}</h6> <span></span>\r\n                            <h6 className=\"m-0 text-muted\">\r\n                                Total Items: {selectedItems?.reduce((acc, item) => acc + (item.Products_List?.length || 0), 0)}\r\n                            </h6>\r\n                        </div>\r\n                    }\r\n                    <FilterableTable\r\n                        dataArray={selectedItems?.map((item) => item?.Products_List).flat()}\r\n                        expandableComp={ExpendableComponent}\r\n                        ButtonArea={\r\n                            <>\r\n                                <Button\r\n                                    onClick={() =>\r\n                                        setFilters((prev) => ({ ...prev, addItemDialog: true }))\r\n                                    }\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n                                <Button onClick={() => setSelectedItems([])} className=\"me-2\">\r\n                                    Clear\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                        EnableSerialNumber\r\n                        disablePagination\r\n                        // title={`Selected Items: ${selectedItems?.reduce((acc, item) => acc + item.Products_List.length, 0) ?? 0} QTY: ${selectedItems?.reduce((acc, item) => acc + item.Products_List.reduce((sum, product) => sum + (product.Total_Qty ?? 0), 0), 0) ?? 0}`}\r\n                        maxHeightOption\r\n                        columns={[\r\n                            createCol(\"Retailer_Name\", \"string\", \"Retailer_Name\"),\r\n                            createCol(\"Product_Name\", \"string\", \"Product_Name\"),\r\n                            // createCol('Sales_Order_Id', 'string', 'So_Id'),\r\n                            // createCol('So_Date', 'date', 'So_Date'),\r\n                            createCol(\"Taxable_Rate\", \"number\", \"Rate\"),\r\n                            createCol(\"Bill_Qty\", \"number\", \"Bill_Qty\"),\r\n                            createCol(\"Taxable_Amount\", \"string\", \"Before_Tax_Amount\"),\r\n                            createCol(\"Amount\", \"number\", \"Total_Invoice_value\"),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: \"#\",\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        variant=\"contained\"\r\n                                        color=\"error\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            const filteredItems = selectedItems\r\n                                                ?.map((item) => {\r\n                                                    return {\r\n                                                        ...item,\r\n                                                        Products_List: item.Products_List.filter(\r\n                                                            (o) =>\r\n                                                                o[row.DO_St_Id ? \"DO_St_Id\" : \"SO_St_Id\"] !==\r\n                                                                row[row.DO_St_Id ? \"DO_St_Id\" : \"SO_St_Id\"]\r\n                                                        ),\r\n                                                    };\r\n                                                })\r\n                                                .filter((item) => item.Products_List.length > 0);\r\n\r\n                                            setSelectedItems(filteredItems);\r\n                                        }}\r\n                                    >\r\n                                        <Delete className=\"fa-20\" />\r\n                                    </IconButton>\r\n                                ),\r\n                            },\r\n                        ]}\r\n                    />\r\n                </CardContent>\r\n                <div className=\"border-top p-2 text-end\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={saveTripSheet}\r\n                        disabled={\r\n                            selectedItems.length === 0 ||\r\n                            !isValidDate(tripSheetInfo.Trip_Date)\r\n                        }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={filters.addItemDialog}\r\n                onClose={() => setFilters((pre) => ({ ...pre, addItemDialog: false }))}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                fullScreen\r\n            >\r\n                <form onSubmit={searchTransaction}>\r\n                    <DialogTitle className=\"d-flex align-items-center\">\r\n                        <span className=\"flex-grow-1\">Add Data</span>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            type=\"submit\"\r\n                            className=\"me-2\"\r\n                            startIcon={<Search />}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() =>\r\n                                setFilters((pre) => ({ ...pre, addItemDialog: false }))\r\n                            }\r\n                        >\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n            <DialogContent>\r\n    <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n            <tbody>\r\n  \r\n                <tr>\r\n            \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">From Date</td>\r\n                    <td>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={filters.Fromdate}\r\n                            className=\"cus-inpt p-2\"\r\n                            required\r\n                            max={filters.Todate}\r\n                            onChange={(e) =>\r\n                                setFilters((pre) => ({\r\n                                    ...pre,\r\n                                    Fromdate: e.target.value,\r\n                                }))\r\n                            }\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                    </td>\r\n\r\n             \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">To Date</td>\r\n                    <td>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={filters.Todate}\r\n                            className=\"cus-inpt p-2\"\r\n                            min={filters.Fromdate}\r\n                            required\r\n                            onChange={(e) =>\r\n                                setFilters((pre) => ({\r\n                                    ...pre,\r\n                                    Todate: e.target.value,\r\n                                }))\r\n                            }\r\n                            style={{ width: \"100%\" }}\r\n                        />\r\n                    </td>\r\n\r\n                   \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Sales Person</td>\r\n                    <td>\r\n                        <Select\r\n                            value={{ \r\n                                value: filters?.Sales_Person_Id, \r\n                                label: filters?.Sales_Person_Name || \"ALL\" \r\n                            }}\r\n                            onChange={(e) => {\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Sales_Person_Id: e.value,\r\n                                    Sales_Person_Name: e.label,\r\n                                });\r\n                            }}\r\n                            options={[\r\n                                { value: \"\", label: \"ALL\" },\r\n                                ...salesPerson.map((obj) => ({\r\n                                    value: obj?.UserId,\r\n                                    label: obj?.Name,\r\n                                })),\r\n                            ]}\r\n                            placeholder={\"Select Sales Person\"}\r\n                            styles={{\r\n                                menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n                            }}\r\n                            isSearchable={true}\r\n                            menuPortalTarget={document.body}\r\n                            menuPosition=\"fixed\"\r\n                            menuPlacement=\"auto\"\r\n                        />\r\n                    </td>\r\n\r\n                 \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Voucher Type</td>\r\n                    <td>\r\n                        <MultiSelect\r\n                            value={(filters.VoucherType || []).map(val => ({\r\n                                value: val,\r\n                                label: voucherTypeOptions.find(opt => opt.value === val)?.label || val\r\n                            }))}\r\n                            onChange={(selectedOptions) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    VoucherType: selectedOptions ? selectedOptions.map(opt => opt.value) : [],\r\n                                })\r\n                            }\r\n                            options={voucherTypeOptions}\r\n                            placeholder={\"Select Voucher Types\"}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                \r\n             \r\n                <tr>\r\n                  \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Branch</td>\r\n                    <td>\r\n                        <Select\r\n                            value={{ \r\n                                value: filters?.Branch, \r\n                                label: filters?.BranchName || \"ALL\" \r\n                            }}\r\n                            onChange={(e) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Branch: e.value,\r\n                                    BranchName: e.label,\r\n                                })\r\n                            }\r\n                            options={[\r\n                                { value: \"\", label: \"ALL\" },\r\n                                ...branch.map((option) => ({\r\n                                    value: option.BranchId,\r\n                                    label: option.BranchName,\r\n                                })),\r\n                            ]}\r\n                            placeholder={\"Select Branch\"}\r\n                            styles={{\r\n                                menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n                            }}\r\n                            isSearchable={true}\r\n                            menuPortalTarget={document.body}\r\n                            menuPosition=\"fixed\"\r\n                            menuPlacement=\"auto\"\r\n                        />\r\n                    </td>\r\n\r\n               \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Broker</td>\r\n                    <td>\r\n                        <MultiSelect\r\n                            value={(filters.Broker || []).map(val => ({\r\n                                value: val,\r\n                                label: broker.find(b => b.Cost_Center_Id === val)?.Cost_Center_Name || val\r\n                            }))}\r\n                            onChange={(selectedOptions) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Broker: selectedOptions ? selectedOptions.map(opt => opt.value) : [],\r\n                                })\r\n                            }\r\n                            options={broker.map(option => ({\r\n                                value: option.Cost_Center_Id,\r\n                                label: option.Cost_Center_Name,\r\n                            }))}\r\n                            placeholder={\"Select Brokers\"}\r\n                        />\r\n                    </td>\r\n      \r\n             \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Transporter</td>\r\n                    <td>\r\n                        <MultiSelect\r\n                            value={(filters.Transporters || []).map(val => ({\r\n                                value: val,\r\n                                label: transporters.find(t => t.Cost_Center_Id === val)?.Cost_Center_Name || val\r\n                            }))}\r\n                            onChange={(selectedOptions) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Transporters: selectedOptions ? selectedOptions.map(opt => opt.value) : [],\r\n                                })\r\n                            }\r\n                            options={transporters.map(option => ({\r\n                                value: option.Cost_Center_Id,\r\n                                label: option.Cost_Center_Name,\r\n                            }))}\r\n                            placeholder={\"Select Transporters\"}\r\n                        />\r\n                    </td>\r\n\r\n                    {/* Godown */}\r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Godown</td>\r\n                    <td>\r\n                        <Select\r\n                            value={{ \r\n                                value: filters?.Godown, \r\n                                label: filters?.GodownName || \"ALL\" \r\n                            }}\r\n                            onChange={(e) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Godown: e.value,\r\n                                    GodownName: e.label,\r\n                                })\r\n                            }\r\n                            options={[\r\n                                { value: \"\", label: \"ALL\" },\r\n                                ...godowns.map((option) => ({\r\n                                    value: option.Godown_Id,\r\n                                    label: option.Godown_Name,\r\n                                })),\r\n                            ]}\r\n                            placeholder={\"Select Godown\"}\r\n                            styles={{\r\n                                menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n                            }}\r\n                            isSearchable={true}\r\n                            menuPortalTarget={document.body}\r\n                            menuPosition=\"fixed\"\r\n                            menuPlacement=\"auto\"\r\n                        />\r\n                    </td>\r\n                </tr>\r\n\r\n             \r\n                <tr>\r\n              \r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Retailers</td>\r\n                    <td colSpan=\"3\">\r\n                        <MultiSelect\r\n                            value={(filters.Retailer || []).map(val => ({\r\n                                value: val,\r\n                                label: retailers.find(r => r.Retailer_Id === val)?.Retailer_Name || val\r\n                            }))}\r\n                            onChange={(selectedOptions) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Retailer: selectedOptions ? selectedOptions.map(opt => opt.value) : [],\r\n                                })\r\n                            }\r\n                            options={retailers.map(option => ({\r\n                                value: option.Retailer_Id,\r\n                                label: option.Retailer_Name,\r\n                            }))}\r\n                            placeholder={\"Select Retailers\"}\r\n                        />\r\n                    </td>\r\n\r\n                    {/* Products */}\r\n                    <td style={{ verticalAlign: \"middle\" }} className=\"fa-13 fw-bold\">Products</td>\r\n                    <td colSpan=\"3\">\r\n                        <MultiSelect\r\n                            value={(filters.Item || []).map(val => ({\r\n                                value: val,\r\n                                label: items.find(i => i.Product_Id === val)?.Product_Name || val\r\n                            }))}\r\n                            onChange={(selectedOptions) =>\r\n                                setFilters({\r\n                                    ...filters,\r\n                                    Item: selectedOptions ? selectedOptions.map(opt => opt.value) : [],\r\n                                })\r\n                            }\r\n                            options={items.map(option => ({\r\n                                value: option.Product_Id,\r\n                                label: option.Product_Name,\r\n                            }))}\r\n                            placeholder={\"Select Products\"}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div className=\"d-flex justify-content-between align-items-center\">\r\n        {transactionData.length > 0 && (\r\n            <Button\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                    if (selectedItems.length === transactionData.length) {\r\n                        setSelectedItems([]);\r\n                    } else {\r\n                        setSelectedItems(transactionData);\r\n                    }\r\n                }}\r\n            >\r\n                {selectedItems.length === transactionData.length\r\n                    ? \"Unselect All\"\r\n                    : \"Select All\"}\r\n            </Button>\r\n        )}\r\n\r\n        {selectedItems.length >= 0 && (\r\n            <div className=\"d-flex justify-content-end gap-3\">\r\n                <h6 className=\"m-0 text-muted\">Selected Sales Orders: {selectedItems.length}</h6>\r\n                <h6 className=\"m-0 text-muted\">\r\n                    Total Items: {selectedItems?.reduce((acc, item) => acc + (item.Products_List?.length || 0), 0)}\r\n                </h6>\r\n            </div>\r\n        )}\r\n    </div>\r\n\r\n    <FilterableTable\r\n        dataArray={transactionData}\r\n        disablePagination\r\n        maxHeightOption\r\n        columns={[\r\n            {\r\n                Field_Name: \"checkbox\",\r\n                ColumnHeader: \"\",\r\n                isVisible: 1,\r\n                pointer: true,\r\n                isCustomCell: true,\r\n                Cell: ({ row }) => {\r\n                    return (\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={selectedItems.some(\r\n                                (selectedRow) => selectedRow.Do_Id === row.Do_Id\r\n                            )}\r\n                            onChange={() => handleCheckboxChange(row)}\r\n                            onFocus={(e) => {\r\n                                e.target.blur();\r\n                            }}\r\n                            style={{\r\n                                cursor: \"pointer\",\r\n                                transform: \"scale(1.5)\",\r\n                                width: \"14px\",\r\n                                height: \"20px\",\r\n                            }}\r\n                        />\r\n                    );\r\n                },\r\n            },\r\n            createCol(\"Retailer_Name\", \"string\", \"Retailer_Name\"),\r\n            createCol(\"Branch_Name\", \"string\", \"Branch_Name\"),\r\n            createCol(\"AreaName\", \"string\", \"AreaName\"),\r\n            createCol(\"Do_Date\", \"date\", \"Do_Date\"),\r\n            createCol(\"Total_Before_Tax\", \"string\", \"Total_Before_Tax\"),\r\n            createCol(\"Total_Tax\", \"number\", \"Total_Tax\"),\r\n            createCol(\"Total_Invoice_value\", \"number\", \"Total_Invoice_value\"),\r\n        ]}\r\n    />\r\n</DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            type=\"button\"\r\n                            onClick={() =>\r\n                                setFilters((pre) => ({ ...pre, addItemDialog: false }))\r\n                            }\r\n                        >\r\n                            close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TripSheetGodownSearch;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]"],"names":["tripMasterDetails","Trip_Id","Challan_No","Branch_Id","Trip_Date","ISOString","Vehicle_No","StartTime","EndTime","Trip_No","Trip_ST_KM","Trip_EN_KM","Trip_Tot_Kms","Created_By","Updated_By","DO_Date","Delivery_Person_Id","BillType","VoucherType","tripStaffsColumns","Id","Involved_Emp_Id","Cost_Center_Type_Id","Emp_Name","_ref","_tripSheetInfo$Vouche","_tripSheetInfo$BillTy","loadingOn","loadingOff","stateDetails","useLocation","state","deliveryPerson","setDeliveryPerson","useState","storage","JSON","parse","localStorage","getItem","salesPerson","setSalePerson","filters","setFilters","Retailer_Id","RetailerGet","Created_by","CreatedByGet","Sales_Person_Id","SalsePersonGet","Cancel_status","Route_Id","RoutesGet","Area_Id","AreaGet","Fromdate","Todate","Broker","Transporters","Item","Godown","search","addItemDialog","Retailer","transactionData","setTransactionData","costCenter","setCostCenter","costCenterCategory","setCostCenterCategory","branch","setBranch","tripSheetInfo","setTripSheetInfo","staffInvolvedList","setStaffInvolvedList","selectedItems","setSelectedItems","voucher","setVoucher","broker","setBroker","transporters","setTransporters","items","setItems","godowns","setGodowns","retailers","setRetailers","useEffect","async","branchResponse","staffResponse","staffCategory","voucherResponse","itemsRes","godownRes","retailerRes","Promise","all","fetchLink","address","branchData","success","data","sort","a","b","String","BranchName","localeCompare","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","brokers","filter","cc","UserTypeGet","voucherData","itemData","godownData","retailData","e","console","error","fetchData","voucherTypeOptions","value","label","obj","Type","map","Vocher_Type_Id","Voucher_Type","concat","Company_id","then","catch","extractHHMM","timeString","date","Date","hours","getHours","minutes","getMinutes","productsArray","Product_Array","employeesArray","Employees_Involved","isValidObject","Array","isArray","prev","_objectSpread","Object","fromEntries","entries","_ref2","_stateDetails$key","_stateDetails$key2","key","_ref3","_staffData$key","deliveryStaff","find","staff","Number","UserId","Name","MultiSelect","_ref4","onChange","options","placeholder","isSearchable","_jsx","Select","isMulti","styles","customSelectStyles","menuPortal","base","zIndex","menuPortalTarget","document","body","menuPosition","menuPlacement","saveTripSheet","method","checkIsNumber","bodyData","combineDateTime","EmployeesInvolved","toast","message","log","finally","_jsxs","_Fragment","children","Card","className","Button","variant","onClick","disabled","length","isValidDate","CardContent","style","minHeight","height","color","type","row","index","item","ind","isEqualNumber","_staff$Cost_Center_Na","c","Cost_Center_Id","updatedItem","User_Type","fil","findIndex","st","maxWidth","minWidth","handleCostCenterChange","target","sti","Cost_Category_Id","updatedList","_","i","Close","br","bi","BranchId","id","name","readOnly","TripStatus","pre","colSpan","_pre$Trip_EN_KM","_e$target$value","Subraction","min","_e$target$value2","_pre$Trip_ST_KM","Addition","reduce","acc","_item$Products_List","Products_List","sum","product","parseFloat","Bill_Qty","_item$Products_List2","FilterableTable","dataArray","flat","expandableComp","_ref5","Branch_Name","Sales_Person_Name","Round_off","GST_Inclusive","IS_IGST","Narration","ButtonArea","EnableSerialNumber","disablePagination","maxHeightOption","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref6","IconButton","size","filteredItems","o","DO_St_Id","Delete","Dialog","open","onClose","fullWidth","fullScreen","onSubmit","preventDefault","voucherTypeString","join","brokerString","transporterString","itemString","retailerString","branchValue","Branch","DialogTitle","startIcon","Search","DialogContent","verticalAlign","required","max","width","val","_voucherTypeOptions$f","opt","selectedOptions","option","_broker$find","_transporters$find","t","GodownName","Godown_Id","Godown_Name","_retailers$find","r","Retailer_Name","_items$find","Product_Id","Product_Name","_item$Products_List3","Field_Name","pointer","_ref7","checked","some","selectedRow","Do_Id","prevSelectedItems","handleCheckboxChange","onFocus","blur","cursor","transform","DialogActions","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","createSvgIcon","d","customTableStyles","table","backgroundColor","rows","headCells","fontSize","menu","provided","groupHeading","fontWeight","borderBottom","textTransform","isSelected","isFocused","MainMenu","headname","align","companyDetails","dataBase","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules"],"sourceRoot":""}