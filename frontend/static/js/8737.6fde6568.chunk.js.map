{"version":3,"file":"static/js/8737.6fde6568.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/utils/createChainedFunction.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/icons-material/esm/Refresh.js","Components/filterableTable2.jsx","Components/tablecolumn.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/utils/deprecatedPropType.js","../node_modules/@mui/utils/deprecatedPropType/deprecatedPropType.js","../node_modules/@mui/material/utils/requirePropFactory.js","../node_modules/@mui/utils/requirePropFactory/requirePropFactory.js","../node_modules/@mui/material/utils/setRef.js","../node_modules/@mui/material/utils/unsupportedProp.js","../node_modules/@mui/utils/unsupportedProp/unsupportedProp.js","../node_modules/@mui/material/utils/index.js","Pages/Attendance/defaultLeave.jsx","Pages/Attendance/fingerPrintAttendance.jsx"],"sourcesContent":["import createChainedFunction from '@mui/utils/createChainedFunction';\nexport default createChainedFunction;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import deprecatedPropType from '@mui/utils/deprecatedPropType';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n    return null;\n  };\n}","import requirePropFactory from '@mui/utils/requirePropFactory';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}","import setRef from '@mui/utils/setRef';\nexport default setRef;","import unsupportedProp from '@mui/utils/unsupportedProp';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n  const propFullNameSafe = propFullName || propName;\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n  return null;\n}","'use client';\n\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/ClassNameGenerator';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';\n// TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    }\n    ClassNameGenerator.configure(generator);\n  }\n};","import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport Close from \"@mui/icons-material/Close\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { moment } from \"moment\";\r\nimport { Edit } from \"@mui/icons-material\";\r\nconst LeaveCalendar = ({\r\n  currentView,\r\n  onViewChange\r\n}) => {\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [monthlyLeaves, setMonthlyLeaves] = useState([]);\r\n  const [filter, setFilter] = useState({\r\n    FromDate: new Date().toISOString().split(\"T\")[0],\r\n    Description: \"\",\r\n    display: 2,\r\n    Created_By: \"\",\r\n  });\r\n  const [description, setDesctiption] = useState(\"\");\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [calendarViewDate, setCalendarViewDate] = useState(new Date());\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const formatDate = (dateStr) => {\r\n    const d = new Date(dateStr);\r\n    const day = String(d.getDate()).padStart(2, \"0\");\r\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n    const year = d.getFullYear();\r\n    return `${day}-${month}-${year}`;\r\n  };\r\n  const localData = localStorage.getItem(\"user\");\r\n  const parseData = JSON.parse(localData);\r\n  const fetchLeaves = async () => {\r\n    try {\r\n      const res = await fetchLink({ address: `masters/defaultLeave` });\r\n      if (res.success) {\r\n        setAttendanceData(res.data);\r\n\r\n        const currentMonth = calendarViewDate.getMonth();\r\n        const currentYear = calendarViewDate.getFullYear();\r\n\r\n        const filtered = res.data.filter((item) => {\r\n          const itemDate = new Date(item.Date);\r\n          return (\r\n            itemDate.getMonth() === currentMonth &&\r\n            itemDate.getFullYear() === currentYear\r\n          );\r\n        });\r\n\r\n        setMonthlyLeaves(filtered);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLeaves();\r\n  }, []);\r\n  const closeDialg = () => {\r\n    setAddDialog(false);\r\n    setFilter({});\r\n    setDesctiption(\"\");\r\n    setEditMode(false);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const onsubmit = ({ filter, description }) => {\r\n    const User_Id = parseData?.UserId;\r\n    const bodyData = {\r\n      FromDate: filter?.FromDate,\r\n      Description: description,\r\n      Created_By: User_Id,\r\n    };\r\n\r\n    fetchLink({\r\n      address: `masters/addLeave`,\r\n      method: \"POST\",\r\n      bodyData,\r\n    })\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          toast.error(data.message);\r\n        } else {\r\n          toast.success(\"Leave added successfully\");\r\n          setAddDialog(false);\r\n          setFilter({\r\n            FromDate: new Date().toISOString().split(\"T\")[0],\r\n            Description: \"\",\r\n            display: 2,\r\n            Created_By: 1,\r\n          });\r\n          setDesctiption(\"\");\r\n          fetchLeaves();\r\n        }\r\n      })\r\n      .catch((e) => console.error(e));\r\n  };\r\n\r\n  const onUpdate = async ({ index, filter, description, id, Modified_By }) => {\r\n    const updatedList = [...attendanceData];\r\n    const User_Id = Number(parseData?.UserId);\r\n\r\n    const bodyData = {\r\n      Id: id,\r\n      FromDate: filter?.FromDate,\r\n      Description: description,\r\n      Modified_By: User_Id || Modified_By,\r\n    };\r\n\r\n    try {\r\n      const data = await fetchLink({\r\n        address: \"masters/defaultLeave\",\r\n        method: \"PUT\",\r\n        bodyData: bodyData,\r\n      });\r\n\r\n      if (data.success) {\r\n        updatedList[index] = {\r\n          ...updatedList[index],\r\n          Date: filter.FromDate,\r\n          Description: description,\r\n        };\r\n\r\n        setAttendanceData(updatedList);\r\n\r\n        const currentMonth = calendarViewDate.getMonth();\r\n        const currentYear = calendarViewDate.getFullYear();\r\n\r\n        const filtered = updatedList.filter((item) => {\r\n          const itemDate = new Date(item.Date);\r\n          return (\r\n            itemDate.getMonth() === currentMonth &&\r\n            itemDate.getFullYear() === currentYear\r\n          );\r\n        });\r\n\r\n        setMonthlyLeaves(filtered);\r\n        closeDialg();\r\n        toast.success(\"Leave updated successfully\");\r\n      } else {\r\n        toast.error(data.message || \"Failed to update\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating leave:\", error);\r\n      toast.error(\"Update failed: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const formatForInputDate = (dateString) => {\r\n    const d = new Date(dateString);\r\n    const year = d.getFullYear();\r\n    const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(d.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <Card>\r\n        <CardContent sx={{ minHeight: \"50vh\" }}>\r\n          <div className=\"d-flex align-items-center mb-3\">\r\n            {[\"default\", \"employee\", \"department\", \"defaultLeave\"].map(\r\n              (view) => (\r\n                <Button\r\n                  key={view}\r\n                  size=\"small mx-2\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => onViewChange(view)}\r\n                  disabled={currentView === view}\r\n                >\r\n                  {view === \"defaultLeave\"\r\n                    ? \"Defined Leave\"\r\n                    : view.charAt(0).toUpperCase() + view.slice(1)}\r\n                </Button>\r\n              )\r\n            )}\r\n          </div>\r\n          <div className=\"ps-3 pb-2 pt-0 d-flex align-items-center justify-content-between border-bottom mb-3\">\r\n            <h6 className=\"fa-18\">Leave Details</h6>\r\n            <div>\r\n              <select\r\n                className=\"cus-inpt w-auto\"\r\n                value={filter?.display}\r\n                disabled\r\n                onChange={(e) =>\r\n                  setFilter((pre) => ({\r\n                    ...pre,\r\n                    display: Number(e.target.value),\r\n                  }))\r\n                }\r\n              >\r\n                <option disabled value={2}>\r\n                  Calendar\r\n                </option>\r\n                {/* <option value={1}>Table</option> */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-5 mb-3\">\r\n              <div className=\"card shadow-sm\">\r\n                <div className=\"card-header\">\r\n                  <h6 className=\"mb-0\">Month Leave List</h6>\r\n                </div>\r\n                <div\r\n                  className=\"card-body\"\r\n                  style={{ maxHeight: \"800px\", overflowY: \"auto\" }}\r\n                >\r\n                  {monthlyLeaves.length === 0 ? (\r\n                    <p>No data</p>\r\n                  ) : (\r\n                    monthlyLeaves.map((item, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"mb-2 border-bottom pb-2 position-relative\"\r\n                      >\r\n                        <small>{item.Description}</small>\r\n                        <br />\r\n                        <small>Date: {formatDate(item.Date)}</small>\r\n                      </div>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-8 col-md-7\">\r\n              <FullCalendar\r\n                plugins={[\r\n                  timeGridPlugin,\r\n                  listPlugin,\r\n                  dayGridPlugin,\r\n                  interactionPlugin,\r\n                ]}\r\n                initialView=\"dayGridMonth\"\r\n                initialDate={new Date()}\r\n                events={attendanceData.map((o) => ({\r\n                  title: ` ${o?.Description}`,\r\n                start: new Date(o?.Date).toISOString().split(\"T\")[0],\r\n                  objectData: o,\r\n                }))}\r\n                headerToolbar={{\r\n                  left: \"prev next\",\r\n                  center: \"title\",\r\n                  right: \"dayGridMonth\",\r\n                }}\r\n                // slotDuration={\"00:30:00\"}\r\n                // slotMinTime={\"08:00:00\"}\r\n                // slotMaxTime={\"22:00:00\"}\r\n                showNonCurrentDates={false}\r\n                editable={false}\r\n                selectable\r\n                selectMirror\r\n                height={800}\r\n                eventClick={(eventInfo) => {\r\n                  const leave = eventInfo.event.extendedProps.objectData;\r\n                  const date = leave?.Date;\r\n\r\n                  const index = attendanceData.findIndex(\r\n                    (item) =>\r\n                      item.Date === date &&\r\n                      item.Description === leave.Description\r\n                  );\r\n\r\n                  setEditMode(true);\r\n                  setEditIndex(index);\r\n                  setFilter({ FromDate: date });\r\n                  setDesctiption(leave.Description);\r\n                  setAddDialog(true);\r\n                }}\r\n                dateClick={(info) => {\r\n                  setSelectedDate(info.dateStr);\r\n                  setFilter({ ...filter, FromDate: info.dateStr });\r\n                  setAddDialog(true);\r\n                }}\r\n                datesSet={(date) => {\r\n                  const viewDate = new Date(date.start);\r\n                  setCalendarViewDate(viewDate);\r\n\r\n                  const currentMonth = viewDate.getMonth();\r\n                  const currentYear = viewDate.getFullYear();\r\n\r\n                  const filtered = attendanceData.filter((item) => {\r\n                    const itemDate = new Date(item.Date);\r\n                    \r\n                    return (\r\n                      itemDate.getMonth() === currentMonth &&\r\n                      itemDate.getFullYear() === currentYear\r\n                    );\r\n                  });\r\n\r\n                  setMonthlyLeaves(filtered);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog open={addDialog} onClose={closeDialg} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle className=\"d-flex justify-content-between\">\r\n          <span> {editMode ? \"UPDATE\" : \"ADD\"}</span>\r\n          <IconButton onClick={closeDialg}>\r\n            <Close sx={{ color: \"black\" }} />\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <div className=\"table-responsive pb-4\">\r\n            <table className=\"table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>From</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"cus-inpt\"\r\n                      value={formatForInputDate(filter?.FromDate || \"\")}\r\n                      onChange={(e) =>\r\n                        setFilter({ ...filter, FromDate: e.target.value })\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Description</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"cus-inpt\"\r\n                      value={description}\r\n                      onChange={(e) => setDesctiption(e.target.value)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={closeDialg}>Cancel</Button>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              if (editMode) {\r\n            \r\n                const currentRow = attendanceData[editIndex];\r\n                const id = currentRow?.SNo;\r\n                const User_Id = parseData?.UserId;\r\n                onUpdate({\r\n                  index: editIndex,\r\n                  filter,\r\n                  description,\r\n                  id,\r\n                  User_Id,\r\n                });\r\n              } else {\r\n                onsubmit({ filter, description });\r\n              }\r\n            }}\r\n          >\r\n            {editMode ? \"UPDATE\" : \"ADD\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaveCalendar;\r\n","import React, { useState, useEffect,useMemo } from \"react\";\r\nimport {\r\n  Dialog,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { ISOString, isValidDate } from \"../../Components/functions\";\r\nimport { Search, Refresh } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Chip,\r\n  Autocomplete,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as XLSX from \"xlsx\";\r\nimport DefaultLeave from \"./defaultLeave\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { saveAs } from \"file-saver\";\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nconst AttendanceNewScreen = ({ loadingOn, loadingOff }) => {\r\n  const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const stateDetails = location.state;\r\n\r\n  const [addEmployeeDialogOpen, setAddEmployeeDialogOpen] = useState(false);\r\nconst [selectedLogDate, setSelectedLogDate] = useState(\"\");\r\n// const [filtereLogData, setFilteredLogData] = useState([]);\r\n  const getCurrentMonthYear = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    return `${year}-${month}`;\r\n  };\r\n\r\n  const initialValue = {\r\n    From: getCurrentMonthYear(),\r\n    To: getCurrentMonthYear(),\r\n    EmpId: \"0\",\r\n    Name: \"ALL\",\r\n  };\r\n  const query = useQuery();\r\n\r\n  const defaultFilters = {\r\n    From: getCurrentMonthYear(),\r\n    To: getCurrentMonthYear(),\r\n  };\r\n\r\n  const [saleOrders, setSaleOrders] = useState([]);\r\n  const [viewMode, setViewMode] = useState(\"default\");\r\n  const [expandedDepartment, setExpandedDepartment] = useState([]);\r\n\r\n  const [dropdownEmployees, setDropdownEmployees] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [isDropdownDisabled, setIsDropdownDisabled] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const userTypeId = storage?.UserTypeId;\r\n  const parseData = storage;\r\n  const { contextObj } = useContext(MyContext);\r\n\r\n  const [dropdownPlaceholder, setDropdownPlaceholder] = useState(\"ALL\");\r\n  const [filter, setFilter] = useState(initialValue);\r\n  const [debouncedFilter, setDebouncedFilter] = useState(filter);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedFilter(filter);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n\r\n    const { From, EmpId } = debouncedFilter;\r\n    if (From && (EmpId || EmpId === 0)) {\r\n      fetchAttendanceData(From, EmpId);\r\n      fetchDropdownEmployees();\r\n    }\r\n  }, [debouncedFilter]);\r\n\r\n  const getDaysInMonth = (monthYear) => {\r\n    if (!monthYear) return 0;\r\n\r\n    const [year, month] = monthYear.split(\"-\");\r\n\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const [filters, setFilters] = useState({\r\n    FromDate: new Date().toISOString().split(\"T\")[0],\r\n    ToDate: new Date().toISOString().split(\"T\")[0],\r\n    Cancel_status: 0,\r\n  });\r\n\r\n  const toggleExpand = (department) => {\r\n    if (expandedDepartment === department) {\r\n      setExpandedDepartment(null);\r\n    } else {\r\n      setExpandedDepartment(department);\r\n    }\r\n  };\r\n  const [departments, setDepartments] = useState([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\r\n\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const Add_Rights = contextObj?.Add_Rights;\r\n\r\n  useEffect(() => {\r\n    if (loadingOn) loadingOn();\r\n\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const fromDate = filters.FromDate || today;\r\n    const toDate = filters.ToDate || today;\r\n\r\n    fetchLink({\r\n      address: `empAttendance/departmentwise?FromDate=${fromDate}&ToDate=${toDate}`,\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setSaleOrders(data?.data);\r\n        }\r\n      })\r\n      .catch((e) => console.error(e))\r\n      .finally(() => {\r\n        if (loadingOff) loadingOff();\r\n      });\r\n  }, [reload]);\r\n\r\n  const handleFromChange = (e) => {\r\n    const getDaysInMonth = (monthYear) => {\r\n      if (!monthYear) return 0;\r\n\r\n      const [year, month] = monthYear.split(\"-\");\r\n\r\n      return new Date(year, month, 0).getDate();\r\n    };\r\n    const selectedMonth = e.target.value;\r\n    const [year, month] = selectedMonth.split(\"-\");\r\n    const startDate = `${year}-${month}-01`;\r\n    const dayCount = getDaysInMonth(`${year}-${month}`);\r\n    const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n    setFilter({\r\n      From: startDate,\r\n      To: endDate,\r\n      EmpId: filter.EmpId || 0,\r\n      Name: filter?.Name,\r\n    });\r\n  };\r\n\r\nconst handleSummaryDownload = async () => {\r\n  try {\r\n    const fromDate = filter.From;\r\n    const [year, month] = fromDate.split(\"-\");\r\n    const startDate = `${year}-${month}-01`;\r\n    const dayCount = getDaysInMonth(`${year}-${month}`);\r\n    const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n    const response = await fetchLink({\r\n      address: `userModule/employeeActivity/summary?FromDate=${startDate}&ToDate=${endDate}`,\r\n    });\r\n\r\n    if (response.success) {\r\n      const overallData = response.data;\r\n\r\n      // Build all dates in month\r\n      const getDateRange = (from, to) => {\r\n        const allDates = [];\r\n        const start = new Date(from);\r\n        const end = new Date(to);\r\n        let sundayCount = 0;\r\n\r\n        while (start <= end) {\r\n          const dateStr = start.toISOString().split(\"T\")[0];\r\n          allDates.push(dateStr);\r\n          if (start.getDay() === 0) sundayCount++; // Sunday\r\n          start.setDate(start.getDate() + 1);\r\n        }\r\n\r\n        return {\r\n          days: allDates,\r\n          sundayCount,\r\n          totalDays: allDates.length,\r\n        };\r\n      };\r\n\r\n      const { days: dateRange, sundayCount, totalDays } = getDateRange(startDate, endDate);\r\n\r\nconst summaryData = overallData.map((row) => {\r\n  const punchDetails = Array.isArray(row.AttendanceDetails)\r\n    ? row.AttendanceDetails\r\n    : row.AttendanceDetails\r\n    ? JSON.parse(row.AttendanceDetails)\r\n    : [];\r\n\r\n  let totalPresent = 0;\r\n  let companyHoliday = 0;\r\n\r\n  const workingDays = dateRange.filter(date => new Date(date).getDay() !== 0);\r\n\r\n  workingDays.forEach(date => {\r\n    const dayRecord = punchDetails.find(p => p.Date.startsWith(date));\r\n    if (dayRecord) {\r\n      if (dayRecord.AttendanceStatus === \"P\") {\r\n        totalPresent++;\r\n      } else if (dayRecord.AttendanceStatus === \"H\") {\r\n        companyHoliday++;\r\n      }\r\n    }\r\n  });\r\n\r\n  const approvedLeave = row.ApprovedLeave || 0;\r\n  const pendingLeave = row.PendingLeave || 0;\r\n  const totalWorkingDays = workingDays.length;\r\n\r\n  const totalAbsent =\r\n    totalWorkingDays - (totalPresent + approvedLeave + companyHoliday);\r\n\r\n  return {\r\n    Name: row.Name,\r\n    TotalPresent: totalPresent,\r\n    ApprovedLeave: approvedLeave,\r\n    PendingLeave: pendingLeave,\r\n    CompanyHoliday: companyHoliday,\r\n    TotalAbsent: totalAbsent < 0 ? 0 : totalAbsent,\r\n    NumberOfSundays: sundayCount,\r\n  };\r\n});\r\n\r\nconst ws = XLSX.utils.json_to_sheet(summaryData);\r\n\r\nconst headers = [\r\n  \"Name\",\r\n  \"TotalPresent\",\r\n  \"ApprovedLeave\",\r\n  \"PendingLeave\",\r\n  \"CompanyHoliday\",\r\n  \"TotalAbsent\",\r\n  \"NumberOfSundays\",\r\n];\r\n\r\nXLSX.utils.sheet_add_aoa(ws, [headers], { origin: \"A1\" });\r\n\r\nconst wb = XLSX.utils.book_new();\r\nXLSX.utils.book_append_sheet(wb, ws, \"Attendance Summary\");\r\n\r\nXLSX.writeFile(wb, `Attendance_Summary_${month}_${year}.xlsx`);\r\n\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error downloading attendance summary:\", error);\r\n    toast.error(\"Failed to generate summary report\");\r\n  }\r\n};\r\n\r\nfunction formatPunch(punch) {\r\n  if (!punch) return \"\";\r\n\r\n  const match = punch.match(/^(\\d{2}):(\\d{2}):(in|out)\\((.+)\\)$/);\r\n  if (!match) return punch;\r\n\r\n  let [, hourStr, minuteStr, type, location] = match;\r\n  let hour = parseInt(hourStr, 10);\r\n  const ampm = hour >= 12 ? \"PM\" : \"AM\";\r\n  hour = hour % 12 || 12;\r\n\r\n  const formattedTime = `${hour.toString().padStart(2, \"0\")}:${minuteStr} ${ampm}`;\r\n  return `${formattedTime}`;\r\n}\r\n\r\nconst exportToExcel = async () => {\r\n  if (!filteredAttendanceData || filteredAttendanceData.length === 0) {\r\n    alert(\"No data to export\");\r\n    return;\r\n  }\r\n\r\n  const workbook = new ExcelJS.Workbook();\r\n  const worksheet = workbook.addWorksheet(\"Attendance\");\r\n\r\n  \r\n  worksheet.columns = [\r\n    { header: \"Employee\", key: \"username\", width: 25 },\r\n    { header: \"Log Date\", key: \"logDate\", width: 20 },\r\n    { header: \"Punch 1\", key: \"punch1\", width: 25 },\r\n    { header: \"Punch 2\", key: \"punch2\", width: 25 },\r\n    { header: \"Punch 3\", key: \"punch3\", width: 25 },\r\n    { header: \"Punch 4\", key: \"punch4\", width: 25 },\r\n    { header: \"Punch 5\", key: \"punch5\", width: 25 },\r\n    { header: \"Punch 6\", key: \"punch6\", width: 25 },\r\n  ];\r\n\r\n \r\n  filteredAttendanceData.forEach((item) => {\r\n    let punches = [];\r\n    if (item.AttendanceDetails && item.AttendanceDetails !== \"[]\") {\r\n      punches = item.AttendanceDetails\r\n        .split(\",\")\r\n        .map((p) => p.trim())\r\n        .filter(Boolean);\r\n    }\r\n\r\n    if (punches.length === 0) return;\r\n\r\n\r\n    const formattedPunches = punches.map((p) => formatPunch(p)).slice(0, 6);\r\n\r\n    worksheet.addRow({\r\n      username: item.username,\r\n      logDate: new Date(item.LogDate).toLocaleDateString(\"en-GB\"), \r\n      punch1: formattedPunches[0] || \"\",\r\n      punch2: formattedPunches[1] || \"\",\r\n      punch3: formattedPunches[2] || \"\",\r\n      punch4: formattedPunches[3] || \"\",\r\n      punch5: formattedPunches[4] || \"\",\r\n      punch6: formattedPunches[5] || \"\",\r\n    });\r\n  });\r\n\r\n  \r\n  worksheet.getRow(1).eachCell((cell) => {\r\n    cell.font = { bold: true, color: { argb: \"FFFFFFFF\" } };\r\n    cell.fill = {\r\n      type: \"pattern\",\r\n      pattern: \"solid\",\r\n      fgColor: { argb: \"FF1976D2\" },\r\n    };\r\n    cell.alignment = { horizontal: \"center\" };\r\n  });\r\n\r\n \r\n  const buffer = await workbook.xlsx.writeBuffer();\r\n  saveAs(\r\n    new Blob([buffer], {\r\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    }),\r\n    `Attendance_${selectedLogDate || \"Report\"}.xlsx`\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst handleDownload = () => {\r\n  const maxPunches = 6;\r\n\r\n  const filteredAttendanceData = filter?.EmpId && filter.EmpId !== 0 && filter.EmpId !== \"ALL\"\r\n    ? attendanceData.filter(row => row.fingerPrintEmpId === filter.EmpId)\r\n    : attendanceData;\r\n  \r\n  const exportData = filteredAttendanceData.map((row) => {\r\n    const punchDetails = row.AttendanceDetails\r\n      ? row.AttendanceDetails.split(\",\").filter((p) => p.trim() !== \"\")\r\n      : [];\r\n\r\n    let attendanceStatus = row.AttendanceStatus;\r\n\r\n    if (!attendanceStatus) {\r\n      attendanceStatus = punchDetails.length === 0 ? \"A\" : \"P\";\r\n    }\r\n\r\n    const punchColumns = {};\r\n    for (let i = 0; i < maxPunches; i++) {\r\n      punchColumns[`Punch${i + 1}`] = punchDetails[i]\r\n        ? punchDetails[i].trim()\r\n        : \"--\";\r\n    }\r\n\r\n    return {\r\n      \"Employee ID\": row.fingerPrintEmpId || \"--\",\r\n      \"Employee Name\": row.username || row.Employee || \"--\",\r\n      \"Log Date\": formatAttendanceDate(row.LogDate),\r\n      \"Attendance Status\": attendanceStatus,\r\n      ...punchColumns,\r\n    };\r\n  });\r\n\r\n  const columnsOrder = [\r\n    \"Employee ID\",\r\n    \"Employee Name\",\r\n    \"Log Date\",\r\n    \"Attendance Status\",\r\n    \"Punch1\",\r\n    \"Punch2\",\r\n    \"Punch3\",\r\n    \"Punch4\",\r\n    \"Punch5\",\r\n    \"Punch6\"\r\n  ];\r\n\r\n  const reorderedData = exportData.map((row) =>\r\n    columnsOrder.reduce((acc, col) => {\r\n      acc[col] = row[col] || \"--\";\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const ws = XLSX.utils.json_to_sheet(reorderedData);\r\n  const wb = XLSX.utils.book_new();\r\n  \r\n  let fileName = \"Attendance_Report\";\r\n  if (filter?.EmpId && filter.EmpId !== 0 && filter.EmpId !== \"ALL\") {\r\n    const employeeName = filteredAttendanceData[0]?.username || filteredAttendanceData[0]?.Employee || filter.EmpId;\r\n    fileName = `Attendance_Report_${employeeName}_${filter.EmpId}`;\r\n  }\r\n  \r\n  XLSX.utils.book_append_sheet(wb, ws, \"Attendance Report\");\r\n  XLSX.writeFile(wb, `${fileName}.xlsx`);\r\n};\r\n  const MAX_PUNCHES = 6;\r\n\r\n  function formatToAmPm(timeString) {\r\n    if (!timeString) return \"--\";\r\n    const [hourStr, minuteStr] = timeString.split(\":\");\r\n    if (!hourStr || !minuteStr) return \"--\";\r\n\r\n    let hour = parseInt(hourStr, 10);\r\n    const minute = minuteStr;\r\n    const ampm = hour >= 12 ? \"PM\" : \"AM\";\r\n\r\n    hour = hour % 12 || 12;\r\n\r\n    return `${hour.toString().padStart(2, \"0\")}:${minute} ${ampm}`;\r\n  }\r\n\r\n  const punchColumns = Array.from({ length: MAX_PUNCHES }, (_, index) => ({\r\n    isCustomCell: true,\r\n    ColumnHeader: `Punch ${index + 1}`,\r\n    isVisible: 1,\r\n    width: \"13%\",\r\n    CellProps: {\r\n      sx: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: \"10px\",\r\n      },\r\n    },\r\n    Cell: ({ row }) => {\r\n      const punches = row.AttendanceDetails\r\n        ? row.AttendanceDetails.split(\",\")\r\n            .map((p) => p.trim())\r\n            .filter((p) => p !== \"\")\r\n        : [];\r\n\r\n      const punch = punches[index] || \"--\";\r\n      const rawTime = punch.split(\":in(\")[0];\r\n      const formattedTime = punch !== \"--\" ? formatToAmPm(rawTime) : \"--\";\r\n\r\n      return formattedTime !== \"--\" ? (\r\n        <Chip\r\n          label={formattedTime}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{ color: \"green\", margin: \"2px\" }}\r\n        />\r\n      ) : (\r\n        <div style={{ color: \"gray\" }}>--</div>\r\n      );\r\n    },\r\n  }));\r\n\r\n  const formatAttendanceDate = (logDateTime) => {\r\n    if (!logDateTime) return \"--\";\r\n    const [date] = logDateTime.split(\"T\");\r\n    return `${date} `;\r\n  };\r\n\r\nconst handleOverallDownload = async () => {\r\n  try {\r\n    const fromDate = filter.From;\r\n    const [year, month] = fromDate.split(\"-\");\r\n    const startDate = `${year}-${month}-01`;\r\n    const dayCount = getDaysInMonth(`${year}-${month}`);\r\n    const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n    const [attendanceRes, leaveRes, defaultLeaveRes] = await Promise.all([\r\n      fetchLink({\r\n        address: `userModule/employeActivity/employeeAttendanceModuledownload?FromDate=${startDate}&ToDate=${endDate}`,\r\n      }),\r\n      fetchLink({\r\n        address: `masters/leave?FromDate=${startDate}&ToDate=${endDate}`,\r\n      }),\r\n      fetchLink({\r\n        address: `masters/defaultLeave?FromDate=${startDate}&ToDate=${endDate}`,\r\n      }),\r\n    ]);\r\n\r\n    if (!attendanceRes.success) throw new Error(\"Attendance data failed\");\r\n\r\n    const leaveMap = {};\r\n    const defaultLeaveDates = new Set();\r\n\r\n    (leaveRes?.data || []).forEach((leave) => {\r\n      if (leave.Status?.toUpperCase() !== \"APPROVED\") return;\r\n\r\n      const userId = leave.User_Id;\r\n      if (!userId) return;\r\n\r\n      let current = new Date(leave.FromDate);\r\n      const leaveEnd = new Date(leave.ToDate);\r\n\r\n      while (current <= leaveEnd) {\r\n        const dateStr = current.toISOString().split(\"T\")[0];\r\n        if (!leaveMap[userId]) leaveMap[userId] = {};\r\n        leaveMap[userId][dateStr] = true;\r\n        current.setDate(current.getDate() + 1);\r\n      }\r\n    });\r\n\r\n    (defaultLeaveRes?.data || []).forEach((defaultLeave) => {\r\n      const dateStr = new Date(defaultLeave.Date).toISOString().split(\"T\")[0];\r\n      defaultLeaveDates.add(dateStr);\r\n    });\r\n\r\n    const { days: dateRange } = getDateRange(startDate, endDate);\r\n    const exportData = attendanceRes.data.map((emp) => {\r\n      const attendanceDetails = tryParseJSON(emp.AttendanceDetails) || [];\r\n      const dailyStatus = {};\r\n      let presentCount = 0;\r\n\r\n      const attendanceLookup = {};\r\n      attendanceDetails.forEach((record) => {\r\n        const dateStr = new Date(record.Date).toISOString().split(\"T\")[0];\r\n        attendanceLookup[dateStr] = {\r\n          status: record.AttendanceStatus,\r\n          hasPunch: record.Punch1 !== \"[]\",\r\n        };\r\n      });\r\n\r\n      dateRange.forEach((date, index) => {\r\n      const dayKey = `Day ${index + 1}`;\r\n        const userId = emp.fingerPrintEmpId; // Changed from User_Mgt_Id to fingerPrintEmpId\r\n        const dateStr = new Date(date).toISOString().split(\"T\")[0];\r\n        const isSunday = new Date(date).getDay() === 0;\r\n\r\n        const attendanceRecord = attendanceLookup[dateStr];\r\n        const attendanceStatus = attendanceRecord?.status;\r\n        const hasPunch = attendanceRecord?.hasPunch;\r\n        if (defaultLeaveDates.has(dateStr)) {\r\n          if (attendanceStatus === \"P\" && hasPunch) {\r\n            dailyStatus[dayKey] = \"P\";\r\n            presentCount++;\r\n          } else {\r\n            dailyStatus[dayKey] = \"DL\";\r\n          }\r\n        } else if (isSunday) {\r\n          dailyStatus[dayKey] = \"H\";\r\n        } else if (leaveMap[userId]?.[dateStr]) {\r\n          dailyStatus[dayKey] = \"L\";\r\n        } else if (attendanceStatus === \"L\") {\r\n          dailyStatus[dayKey] = \"L\";\r\n        } else if (attendanceStatus === \"P\") {\r\n          dailyStatus[dayKey] = hasPunch ? \"P\" : \"A\";\r\n          if (hasPunch) presentCount++;\r\n        } else if (attendanceStatus === \"H\") {\r\n          dailyStatus[dayKey] = \"H\";\r\n        } else {\r\n          dailyStatus[dayKey] = \"A\";\r\n        }\r\n      });\r\n\r\n      return {\r\n        EmployeeName: emp.username || emp.Name,\r\n        TotalPresent: presentCount,\r\n        ...dailyStatus,\r\n      };\r\n    });\r\n\r\n    const headers = [\r\n      \"EmployeeName\",\r\n      \"TotalPresent\",\r\n      ...dateRange.map((_, i) => `Day ${i + 1}`),\r\n    ];\r\n    const ws = XLSX.utils.json_to_sheet(exportData);\r\n    XLSX.utils.sheet_add_aoa(ws, [headers], { origin: \"A1\" });\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Attendance Report\");\r\n    XLSX.writeFile(wb, `Attendance_Report_${month}_${year}.xlsx`);\r\n  } catch (error) {\r\n    console.error(\"Download failed:\", error);\r\n    toast.error(\"Failed to generate report\");\r\n  }\r\n};\r\n\r\n  function getDateRange(start, end) {\r\n    const dates = [];\r\n    const current = new Date(start);\r\n    const endDate = new Date(end);\r\n\r\n    while (current <= endDate) {\r\n      dates.push(current.toISOString().split(\"T\")[0]);\r\n      current.setDate(current.getDate() + 1);\r\n    }\r\n\r\n    return { days: dates, count: dates.length };\r\n  }\r\n\r\n  function tryParseJSON(jsonString) {\r\n    try {\r\n      return jsonString ? JSON.parse(jsonString) : [];\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n\r\nconst handleOverallWithPunch = async () => {\r\n  try {\r\n    const maxPunches = 6;\r\n\r\n    const firstLogDate = attendanceData[0]?.LogDate;\r\n    if (!firstLogDate) {\r\n      toast.error(\"No attendance data found\");\r\n      return;\r\n    }\r\n\r\n    const dateObj = new Date(firstLogDate);\r\n    const year = dateObj.getFullYear();\r\n    const month = dateObj.getMonth() + 1;\r\n    const startDate = `${year}-${month.toString().padStart(2, \"0\")}-01`;\r\n    const endDate = new Date(year, month, 0).toISOString().split(\"T\")[0];\r\n\r\n    const defaultLeaveResponse = await fetchLink({\r\n      address: `masters/defaultLeave?FromDate=${startDate}&ToDate=${endDate}`,\r\n    });\r\n  \r\n    const defaultLeaveData = defaultLeaveResponse?.success ? defaultLeaveResponse.data : [];\r\n    const defaultLeaveDates = new Set(\r\n      defaultLeaveData\r\n        .map(leave => leave.Date ? leave.Date.split('T')[0] : null)\r\n        .filter(date => date !== null)\r\n    );\r\n  \r\n    const leaveResponse = await fetchLink({\r\n      address: `masters/leave?FromDate=${startDate}&ToDate=${endDate}`,\r\n    });\r\n    const leaveData = leaveResponse.data || [];\r\n\r\n    const leaveMap = {};\r\n    leaveData.forEach((leave) => {\r\n      if (leave.Status?.toLowerCase() !== \"approved\") return;\r\n\r\n      const userId = String(leave.User_Id);\r\n      if (!userId) return;\r\n\r\n      const parseDate = (dateStr) => {\r\n        const parts = dateStr.split(/[-/]/) || [];\r\n        if (parts.length === 3) {\r\n          if (parts[2].length === 4) {\r\n            return parts[0].length === 2\r\n              ? new Date(`${parts[2]}-${parts[1]}-${parts[0]}`)\r\n              : new Date(`${parts[2]}-${parts[0]}-${parts[1]}`);\r\n          }\r\n          return new Date(dateStr);\r\n        }\r\n        return new Date(dateStr);\r\n      };\r\n\r\n      const leaveStart = parseDate(leave.FromDate);\r\n      const leaveEnd = parseDate(leave.ToDate);\r\n\r\n      let currentDate = new Date(leaveStart);\r\n      while (currentDate <= leaveEnd) {\r\n        const dateStr = currentDate.toISOString().split(\"T\")[0];\r\n        if (!leaveMap[userId]) leaveMap[userId] = {};\r\n        \r\n        if (currentDate.getDay() !== 0) { // Skip Sundays\r\n          leaveMap[userId][dateStr] = true;\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n    });\r\n\r\n    // Filter and group attendance data by fingerPrintEmpId\r\n    const filteredAttendanceData = attendanceData.filter((row) =>\r\n      selectedEmployees.some(\r\n        (user) =>\r\n          String(user.fingerPrintEmpId) === String(row.fingerPrintEmpId) ||\r\n          user.UserId === \"ALL\"\r\n      )\r\n    );\r\n\r\n    const groupedData = filteredAttendanceData.reduce((acc, row) => {\r\n      acc[row.username] = acc[row.username] || [];\r\n      acc[row.username].push(row);\r\n      return acc;\r\n    }, {});\r\n\r\n    if (Object.keys(groupedData).length === 0) {\r\n      toast.error(\"No attendance data found\");\r\n      return;\r\n    }\r\n\r\n    // Generate Excel sheets\r\n    const wb = XLSX.utils.book_new();\r\n\r\n    Object.entries(groupedData).forEach(([username, userAttendance]) => {\r\n      const exportData = userAttendance.map((row) => {\r\n        const logDate = new Date(row.LogDate);\r\n        const dateStr = logDate.toISOString().split(\"T\")[0];\r\n        const isSunday = logDate.getDay() === 0;\r\n        const userId = String(row.fingerPrintEmpId); // Changed from User_Mgt_Id to fingerPrintEmpId\r\n\r\n        // Attendance status priority:\r\n        // 1. Default Leave (DL)\r\n        // 2. Approved Leave (L)\r\n        // 3. Sunday (H)\r\n        // 4. Present/Absent based on punches\r\n        let attendanceStatus;\r\n        if (defaultLeaveDates.has(dateStr)) {\r\n          attendanceStatus = \"DL\";\r\n        } else if (leaveMap[userId]?.[dateStr]) {\r\n          attendanceStatus = \"L\";\r\n        } else if (isSunday) {\r\n          attendanceStatus = \"H\";\r\n        } else {\r\n          const punches = row.AttendanceDetails?.split(\",\").map((d) => d.trim()) || [];\r\n          attendanceStatus = punches.some((p) => p && p !== \"--\") ? \"P\" : \"A\";\r\n        }\r\n\r\n        // Punch columns\r\n        const punchColumns = {};\r\n        const punches = row.AttendanceDetails?.split(\",\").map((d) => d.trim()) || [];\r\n        for (let i = 0; i < maxPunches; i++) {\r\n          punchColumns[`Punch ${i + 1}`] = punches[i] || \"--\";\r\n        }\r\n\r\n        return {\r\n          Employee: username,\r\n          \"Log Date\": formatAttendanceDate(row.LogDate),\r\n          \"Attendance Status\": attendanceStatus,\r\n          ...punchColumns,\r\n        };\r\n      });\r\n\r\n      // Reorder columns\r\n      const columnsOrder = [\r\n        \"Employee\",\r\n        \"Log Date\",\r\n        \"Attendance Status\",\r\n        ...Array.from({ length: maxPunches }, (_, i) => `Punch ${i + 1}`),\r\n      ];\r\n\r\n      const reorderedData = exportData.map((row) =>\r\n        columnsOrder.reduce((acc, col) => {\r\n          acc[col] = row[col] || \"--\";\r\n          return acc;\r\n        }, {})\r\n      );\r\n\r\n      XLSX.utils.book_append_sheet(\r\n        wb,\r\n        XLSX.utils.json_to_sheet(reorderedData),\r\n        username.slice(0, 31)\r\n      );\r\n    });\r\n\r\n    // Export Excel file\r\n    const fileName = `Attendance_Report_${new Date().toLocaleString(\r\n      \"default\",\r\n      { month: \"long\" }\r\n    )}_${year}.xlsx`;\r\n    XLSX.writeFile(wb, fileName);\r\n\r\n  } catch (error) {\r\n    console.error(\"Error generating report:\", error);\r\n    toast.error(\"Failed to generate report\");\r\n  }\r\n};\r\n\r\n  const fetchDropdownEmployees = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await fetchLink({\r\n        address: `masters/Employeedetails/dropDown?Company_id=${parseData.Company_id}`,\r\n      });\r\n      if (data.success) {\r\n   \r\n        const employeesWithFingerPrintId = data.data.map(emp => ({\r\n          ...emp,\r\n          fingerPrintEmpId: emp.fingerPrintEmpId || emp.UserId\r\n        }));\r\n        setDropdownEmployees(employeesWithFingerPrintId);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(\"Failed to fetch employees for dropdown\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\nuseEffect(() => {\r\n    const userTypeId = storage?.UserTypeId;\r\n    const userId = storage?.UserId;\r\n    const companyId = storage?.Company_id;\r\n\r\n    fetchLink({\r\n      address: `masters/users/employee/dropDown?Company_id=${companyId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"Autheticate_Id\")}`,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          let filteredEmployees = [];\r\n\r\n          if (\r\n            Number(userTypeId) === 1 ||\r\n            Number(userTypeId) === 0 ||\r\n            Number(Add_Rights) === 1\r\n          ) {\r\n            filteredEmployees = data.data;\r\n            setFilter((prev) => ({ ...prev, EmpId: 0, Name: \"ALL\" }));\r\n            setIsDropdownDisabled(false);\r\n            setDropdownPlaceholder(\"ALL\");\r\n          } else {\r\n      \r\n            filteredEmployees = data.data.filter(\r\n              (employee) => employee.fingerPrintEmpId === storage?.fingerPrintEmpId\r\n            );\r\n            setFilter((prev) => ({\r\n              ...prev,\r\n              EmpId: storage?.fingerPrintEmpId, \r\n              Name: storage?.Name,\r\n            }));\r\n            setIsDropdownDisabled(true);\r\n            setDropdownPlaceholder(storage?.Name);\r\n          }\r\n\r\n        \r\n          const employeesWithFingerPrintId = filteredEmployees.map(emp => ({\r\n            ...emp,\r\n            fingerPrintEmpId: emp.fingerPrintEmpId || emp.UserId \r\n          }));\r\n          \r\n          setEmployees(employeesWithFingerPrintId);\r\n        }\r\n      })\r\n      .catch((e) => console.error(\"Error fetching employees:\", e));\r\n  }, [\r\n    storage?.UserTypeId,\r\n    storage?.UserId,\r\n    storage?.Company_id,\r\n    storage?.Name,\r\n    storage?.fingerPrintEmpId, \r\n    reload,\r\n  ]);\r\n\r\nconst fetchAttendanceData = async (From, EmpId) => {\r\n  try {\r\n    const userTypeId = storage?.UserTypeId;\r\n    const Add_Rights = storage?.Add_Rights;\r\n    \r\n    const [year, month] = From.split(\"-\");\r\n    const startDate = `${year}-${month}-01`;\r\n    const dayCount = getDaysInMonth(`${year}-${month}`);\r\n    const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n  \r\n    let apiUrl = `userModule/employeActivity/trackActivitylogAttendance?FromDate=${startDate}&ToDate=${endDate}&UserTypeId=${userTypeId}`;\r\n\r\n    console.log(\"data\",userTypeId)\r\n\r\n    if (\r\n      Number(userTypeId) === 1 ||\r\n      Number(userTypeId) === 0 \r\n    ) {\r\n   \r\n    \r\n         apiUrl += `&FingerPrintId=${EmpId}`;\r\n    } else if(userTypeId !==1 || userTypeId !==0) {\r\n     \r\n     apiUrl += `&EmpId=${EmpId}`;\r\n    }\r\n\r\n    const response = await fetchLink({\r\n      address: apiUrl,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"Autheticate_Id\")}`,\r\n      },\r\n    });\r\n\r\n    if (response.success) {\r\n      setAttendanceData(response.data);\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error fetching attendance data:\", e);\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    const queryFilters = {\r\n      FromDate:\r\n        query.get(\"FromDate\") && isValidDate(query.get(\"FromDate\"))\r\n          ? query.get(\"FromDate\")\r\n          : defaultFilters.Fromdate,\r\n      ToDate:\r\n        query.get(\"ToDate\") && isValidDate(query.get(\"ToDate\"))\r\n          ? query.get(\"ToDate\")\r\n          : defaultFilters.Todate,\r\n    };\r\n    setFilters((pre) => ({\r\n      ...pre,\r\n      FromDate: queryFilters.FromDate,\r\n      ToDate: queryFilters.ToDate,\r\n    }));\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    const FromDate =\r\n      stateDetails?.FromDate && isValidDate(stateDetails?.FromDate)\r\n        ? ISOString(stateDetails?.FromDate)\r\n        : null;\r\n    const ToDate =\r\n      stateDetails?.ToDate && isValidDate(stateDetails?.ToDate)\r\n        ? ISOString(stateDetails?.ToDate)\r\n        : null;\r\n    if (FromDate && ToDate) {\r\n      updateQueryString({ FromDate, ToDate });\r\n      setFilters((pre) => ({\r\n        ...pre,\r\n        FromDate: ISOString(stateDetails.FromDate),\r\n        ToDate: stateDetails.ToDate,\r\n      }));\r\n      setReload((pre) => !pre);\r\n    }\r\n  }, [stateDetails]);\r\n\r\n  const updateQueryString = (newFilters) => {\r\n    const params = new URLSearchParams(newFilters);\r\n    navigate(`?${params.toString()}`, { replace: true });\r\n  };\r\n\r\n  const handleAddEmployeeClose = () => {\r\n    setAddEmployeeDialogOpen(false);\r\n  };\r\n\r\n  const data = () => setViewMode(\"employee\");\r\n  const dataDepartment = () => setViewMode(\"department\");\r\n  const defaultLeave = () => setViewMode(\"defaultLeave\");\r\n\r\n  const dashboard = () => {\r\n    setFilters((prev) => ({\r\n      ...prev,\r\n      FromDate: prev.FromDate || new Date().toISOString().split(\"T\")[0],\r\n      ToDate: prev.ToDate || new Date().toISOString().split(\"T\")[0],\r\n    }));\r\n    setViewMode(\"default\");\r\n  };\r\n\r\n  const ExpendableComponent = ({ row }) => {\r\n    const departments =\r\n      typeof row.DepartmentWiseCounts === \"string\"\r\n        ? JSON.parse(row.DepartmentWiseCounts)\r\n        : row.DepartmentWiseCounts;\r\n\r\n    return (\r\n      <table\r\n        style={{\r\n          width: \"100%\",\r\n          borderCollapse: \"collapse\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr style={{ backgroundColor: \"#f0f0f0\" }}>\r\n            <th\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: \"8px\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Department Name\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: \"8px\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Total Employees\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: \"8px\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Present Today\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {departments && departments.length > 0 ? (\r\n            departments.map((data, index) => (\r\n              <tr key={index} onClick={() => toggleExpand(data.Department)}>\r\n                <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>\r\n                  {data?.Department || \"-\"}\r\n                </td>\r\n                <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"1.25rem\",\r\n                        fontWeight: \"bold\",\r\n                        marginRight: \"100px\",\r\n                        minWidth: \"60px\",\r\n                      }}\r\n                    >\r\n                      {data?.TotalEmployees || \"-\"}\r\n                    </span>\r\n                    <span style={{ fontSize: \"1rem\" }}>\r\n                      Male / Female: {data?.TotalMaleEmployees || \"0\"} /{\" \"}\r\n                      {data?.TotalFemaleEmployees || \"0\"}\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>\r\n                  <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"1.25rem\",\r\n                        fontWeight: \"bold\",\r\n                        marginRight: \"100px\",\r\n                        minWidth: \"60px\",\r\n                      }}\r\n                    >\r\n                      {data?.TotalPresentToday || \"-\"}\r\n                    </span>\r\n                    <span style={{ fontSize: \"1rem\" }}>\r\n                      Male / Female: {data?.TotalMalePresentToday || \"0\"} /{\" \"}\r\n                      {data?.TotalFemalePresentToday || \"0\"}\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\" style={{ padding: \"8px\" }}>\r\n                No Departments Available\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (loadingOn) loadingOn();\r\n\r\n    const userTypeId = storage?.UserTypeId;\r\n    const userId = storage?.UserId;\r\n    const companyId = storage?.Company_id;\r\n\r\n    fetchLink({\r\n      address: `masters/Employeedetails/dropDown?Company_id=${companyId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"Autheticate_Id\")}`,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          let filteredEmployees = [];\r\n  console.log(\"Data\",data.data)\r\n          if (\r\n            Number(userTypeId) === 1 ||\r\n            Number(userTypeId) === 0 ||\r\n            Number(Add_Rights) === 1\r\n          ) {\r\n            filteredEmployees = data.data;\r\n            setFilter((prev) => ({ ...prev, EmpId: 0, Name: \"ALL\" }));\r\n            setIsDropdownDisabled(false);\r\n            setDropdownPlaceholder(\"ALL\");\r\n          } else {\r\n            filteredEmployees = data.data.filter(\r\n              (employee) => employee.UserId === userId\r\n            );\r\n            setFilter((prev) => ({\r\n              ...prev,\r\n              EmpId: userId,\r\n              Name: storage?.Name,\r\n            }));\r\n            setIsDropdownDisabled(true);\r\n            setDropdownPlaceholder(storage?.Name);\r\n          }\r\n\r\n          const employeesWithFingerPrintId = filteredEmployees.map(emp => ({\r\n            ...emp,\r\n            fingerPrintEmpId: emp.fingerPrintEmpId || emp.UserId \r\n          }));\r\n          \r\n          setEmployees(employeesWithFingerPrintId);\r\n        }\r\n      })\r\n      .catch((e) => console.error(\"Error fetching employees:\", e))\r\n      .finally(() => {\r\n        if (loadingOff) loadingOff();\r\n        setReload((prev) => !prev);\r\n      });\r\n  };\r\n\r\n  const handleRefreshData = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const ExpendableComponent1 = ({ row }) => {\r\n    let departments = [];\r\n    let monthlyAttendance = [];\r\n\r\n    try {\r\n      departments =\r\n        typeof row.Employees === \"string\"\r\n          ? JSON.parse(row.Employees)\r\n          : row.Employees || [];\r\n\r\n      monthlyAttendance =\r\n        typeof row.MonthlyAverageAttendance === \"string\"\r\n          ? JSON.parse(row.MonthlyAverageAttendance)\r\n          : row.MonthlyAverageAttendance || [];\r\n    } catch (err) {\r\n      departments = [];\r\n      monthlyAttendance = [];\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    const monthList = [\r\n      { name: \"January\", number: 1 },\r\n      { name: \"February\", number: 2 },\r\n      { name: \"March\", number: 3 },\r\n      { name: \"April\", number: 4 },\r\n      { name: \"May\", number: 5 },\r\n      { name: \"June\", number: 6 },\r\n      { name: \"July\", number: 7 },\r\n      { name: \"August\", number: 8 },\r\n      { name: \"September\", number: 9 },\r\n      { name: \"October\", number: 10 },\r\n      { name: \"November\", number: 11 },\r\n      { name: \"December\", number: 12 },\r\n    ];\r\n\r\n    const attendanceMap = new Map();\r\n    monthlyAttendance.forEach((item) => {\r\n      const key = `${item.MonthNumber}-${item.YearNumber}`;\r\n      attendanceMap.set(key, item.UniqueEmployeeDays ?? 0);\r\n    });\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n        <div style={{ display: \"flex\", gap: \"20px\" }}>\r\n          <table\r\n            style={{\r\n              width: \"20%\",\r\n              borderCollapse: \"collapse\",\r\n              border: \"1px solid #ccc\",\r\n              height:'10px'\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr style={{ backgroundColor: \"#f0f0f0\" }}>\r\n                <th\r\n                  style={{\r\n                    border: \"1px solid #ccc\",\r\n                    padding: \"2px\",\r\n                    textAlign: \"left\"\r\n\r\n                  }}\r\n                >\r\n                  Emp_Name\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    border: \"1px solid #ccc\",\r\n                    padding: \"2px\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  Sex\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {departments && departments.length > 0 ? (\r\n                departments.map((data, index) => (\r\n                  <tr key={index}>\r\n                    <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>\r\n                      {data?.Emp_Name || \"-\"}\r\n                    </td>\r\n                    <td style={{ border: \"1px solid #ccc\", padding: \"8px\" }}>\r\n                      {data?.Sex || \"-\"}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"2\" style={{ padding: \"8px\" }}>\r\n                    No Employees Available\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div\r\n            style={{\r\n              flex: \"1\",\r\n              border: \"1px solid #ddd\",\r\n              borderRadius: \"5px\",\r\n              padding: \"10px\",\r\n              overflowX: \"auto\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            <h3 style={{ textAlign: \"center\" }}>Months & Attendance</h3>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                gap: \"10px\",\r\n              }}\r\n            >\r\n              {monthList.map((month) => {\r\n                const key = `${month.number}-${currentYear}`;\r\n                const uniqueEmployeeDays = attendanceMap.get(key) ?? 0;\r\n\r\n                return (\r\n                  <div\r\n                    key={month.number}\r\n                    style={{\r\n                      minWidth: \"100px\",\r\n                      padding: \"8px\",\r\n                      backgroundColor: \"#f0f0f0\",\r\n                      color: \"black\",\r\n                      borderRadius: \"4px\",\r\n                      textAlign: \"center\",\r\n                      userSelect: \"none\",\r\n                    }}\r\n                  >\r\n                    <div style={{ fontWeight: \"bold\" }}>\r\n                      {month.name} {currentYear}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        marginTop: \"6px\",\r\n                        fontSize: \"14px\",\r\n                        color: \"#555\",\r\n                      }}\r\n                    >\r\n                      {uniqueEmployeeDays}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nconst handleViewChange = (newView) => {\r\n  setViewMode(newView);\r\n};\r\n  useEffect(() => {\r\n    const userTypeId = storage?.UserTypeId;\r\n    const userId = storage?.UserId;\r\n    const companyId = storage?.Company_id;\r\n\r\n    fetchLink({\r\n      address: `masters/Employeedetails/dropDown?Company_id=${companyId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"Autheticate_Id\")}`,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          let filteredEmployees = [];\r\n\r\n          if (\r\n            Number(userTypeId) === 1 ||\r\n            Number(userTypeId) === 0 ||\r\n            Number(Add_Rights) === 1\r\n          ) {\r\n            filteredEmployees = data.data;\r\n            setFilter((prev) => ({ ...prev, EmpId: 0, Name: \"ALL\" }));\r\n            setIsDropdownDisabled(false);\r\n            setDropdownPlaceholder(\"ALL\");\r\n          } else {\r\n            filteredEmployees = data.data.filter(\r\n              (employee) => employee.UserId === userId\r\n            );\r\n            setFilter((prev) => ({\r\n              ...prev,\r\n              EmpId: userId,\r\n              Name: storage?.Name,\r\n            }));\r\n            setIsDropdownDisabled(true);\r\n            setDropdownPlaceholder(storage?.Name);\r\n          }\r\n\r\n          setEmployees(filteredEmployees);\r\n        }\r\n      })\r\n      .catch((e) => console.error(\"Error fetching employees:\", e));\r\n  }, [\r\n    storage?.UserTypeId,\r\n    storage?.UserId,\r\n    storage?.Company_id,\r\n    storage?.Name,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const companyId = storage?.Company_id;\r\n\r\n    fetchLink({\r\n      address: `empAttendance/department?Company_id=${companyId}`,\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"Autheticate_Id\")}`,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          if (data.others && data.others.department) {\r\n            const deptOptions = data.others.department.map((dept) => ({\r\n              value: dept.value,\r\n              label: dept.label,\r\n            }));\r\n            setDepartments(deptOptions);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => console.error(\"Error fetching departments:\", e));\r\n  }, [storage?.Company_id, reload]);\r\n\r\n  const handleDepartmentChange = (selected) => {\r\n    setSelectedDepartment(selected);\r\n\r\n    setEmployees([]);\r\n    setSelectedEmployee(null);\r\n\r\n    if (selected) {\r\n      fetchLink({\r\n        address: `empAttendance/employeesByDepartment`,\r\n        method: \"POST\",\r\n        bodyData: { department: selected.value },\r\n      })\r\n        .then((data) => {\r\n          if (data.success && data.others?.employees) {\r\n            const employeeOptions = data.others.employees.map((emp) => ({\r\n              value: emp.id || emp.value || emp.Emp_Id,\r\n              label: emp.name || emp.label || emp.Emp_Name,\r\n            }));\r\n\r\n            setEmployees(employeeOptions);\r\n          } else {\r\n            setEmployees([]);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"Error fetching employees:\", e);\r\n          setEmployees([]);\r\n        });\r\n    } else {\r\n      setEmployees([]);\r\n    }\r\n  };\r\n\r\n  const departmentWiseCounts = React.useMemo(() => {\r\n    if (!saleOrders?.[0]?.DepartmentWiseCounts) return [];\r\n    try {\r\n      const parsed = JSON.parse(saleOrders[0].DepartmentWiseCounts);\r\n      return Array.isArray(parsed) ? parsed : [];\r\n    } catch (err) {\r\n      console.error(\"Failed to parse DepartmentWiseCounts JSON:\", err);\r\n      return [];\r\n    }\r\n  }, [saleOrders]);\r\n\r\n  const filteredData = React.useMemo(() => {\r\n    if (!departmentWiseCounts || !departmentWiseCounts.length) return [];\r\n\r\n    const filteredDepartments = departmentWiseCounts.filter((item) => {\r\n      return selectedDepartment\r\n        ? item.Department === selectedDepartment.label\r\n        : true;\r\n    });\r\n\r\n    return filteredDepartments.map((dept) => {\r\n      const employeeList = dept.employees || dept.Employees || [];\r\n\r\n      const filteredEmployees = selectedEmployee\r\n        ? employeeList.filter((emp) => {\r\n            if (!emp.Emp_Name) return false;\r\n            return (\r\n              emp.Emp_Name.trim().toLowerCase() ===\r\n              selectedEmployee.label.trim().toLowerCase()\r\n            );\r\n          })\r\n        : employeeList;\r\n\r\n      return {\r\n        ...dept,\r\n        Employees: filteredEmployees,\r\n      };\r\n    });\r\n  }, [departmentWiseCounts, selectedDepartment, selectedEmployee]);\r\nconst filteredAttendanceData = useMemo(() => {\r\n  if (!selectedLogDate) return attendanceData; // no filter -> return all\r\n  return attendanceData.filter(\r\n    (row) => row.LogDate?.slice(0, 10) === selectedLogDate\r\n  );\r\n}, [attendanceData, selectedLogDate]);\r\n  return (\r\n    <>\r\n      {Number(userTypeId) === 0 || Number(userTypeId) === 1 ? (\r\n        <>\r\n          {viewMode === \"default\" && (\r\n            <FilterableTable\r\n              title={\r\n                <div className=\"d-flex align-items-center\">\r\n                  <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    disabled\r\n                    onClick={() => dashboard()}\r\n                  >\r\n                    Dashboard\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => data()}\r\n                  >\r\n                    Employee\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => dataDepartment()}\r\n                  >\r\n                    Department\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => defaultLeave()}\r\n                  >\r\n                    Defined Leave\r\n                  </Button>\r\n                  <div className=\"d-flex align-items-center justify-content-start gap-3\">\r\n                    <label>From Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      onChange={(e) =>\r\n                        setFilters({ ...filters, FromDate: e.target.value })\r\n                      }\r\n                      value={filters?.FromDate}\r\n                      className=\"cus-inpt w-auto p-1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"d-flex align-items-center justify-content-start gap-3\">\r\n                    <label>To Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      onChange={(e) =>\r\n                        setFilters({ ...filters, ToDate: e.target.value })\r\n                      }\r\n                      value={filters?.ToDate}\r\n                      className=\"cus-inpt w-auto p-1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"p-1\">\r\n                    <IconButton\r\n                      onClick={() => setReload(!reload)}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    >\r\n                      <Search />\r\n                    </IconButton>\r\n                  </div>\r\n                </div>\r\n              }\r\n              dataArray={saleOrders}\r\n              EnableSerialNumber\r\n              columns={[\r\n                {\r\n                  isVisible: 1,\r\n                  ColumnHeader: \"Tot.Emp\",\r\n                  isCustomCell: true,\r\n                  Cell: ({ row }) => {\r\n                    const total = row?.TotalEmployees ?? 0;\r\n                    const male = row?.TotalMaleEmployees ?? 0;\r\n                    const female = row?.TotalFemaleEmployees ?? 0;\r\n                    return (\r\n                      <div style={{ fontSize: \"1.25rem\", fontWeight: \"bold\" }}>\r\n                        <div>{total}</div>\r\n                        <div style={{ fontSize: \"1rem\", fontWeight: \"normal\" }}>\r\n                          Male / Female: {male} / {female}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  },\r\n                },\r\n                {\r\n                  isVisible: 1,\r\n                  ColumnHeader: \"Tot.Pre.Today\",\r\n                  isCustomCell: true,\r\n                  Cell: ({ row }) => {\r\n                    const total = row?.TotalPresentToday ?? 0;\r\n                    const male = row?.TotalMalePresentToday ?? 0;\r\n                    const female = row?.TotalFemalePresentToday ?? 0;\r\n                    return (\r\n                      <div style={{ fontSize: \"1.25rem\", fontWeight: \"bold\" }}>\r\n                        <div>{total}</div>\r\n                        <div style={{ fontSize: \"1rem\", fontWeight: \"normal\" }}>\r\n                          Male / Female: {male} / {female}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  },\r\n                },\r\n              ]}\r\n              isExpendable={true}\r\n              tableMaxHeight={550}\r\n              expandableComp={ExpendableComponent}\r\n            />\r\n          )}\r\n\r\n          {viewMode === \"employee\" && (\r\n            <>\r\n              <Dialog\r\n                open={addEmployeeDialogOpen}\r\n                maxWidth=\"md\"\r\n                PaperProps={{\r\n                  style: { width: \"500px\", height: \"500px\" },\r\n                }}\r\n              >\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                  <Autocomplete\r\n                    multiple\r\n                    options={[\r\n                      { UserId: \"all\", Name: \"ALL\" },\r\n                      ...dropdownEmployees,\r\n                    ]}\r\n                    getOptionLabel={(option) => option.Name}\r\n                    isOptionEqualToValue={(option, value) =>\r\n                      option.UserId === value.UserId\r\n                    }\r\n                    onChange={(event, value) => {\r\n                      if (value.some((selected) => selected.UserId === \"all\")) {\r\n                        setSelectedEmployees(dropdownEmployees);\r\n                      } else {\r\n                        const uniqueValues = value.filter(\r\n                          (val, index, self) =>\r\n                            index ===\r\n                            self.findIndex((t) => t.UserId === val.UserId)\r\n                        );\r\n                        console.log(\"ubiquwe\",uniqueValues)\r\n                        setSelectedEmployees(uniqueValues);\r\n                      }\r\n                    }}\r\n                    value={\r\n                      selectedEmployees.some((user) => user.UserId === \"all\")\r\n                        ? [{ UserId: \"all\", Name: \"ALL\" }]\r\n                        : selectedEmployees\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} placeholder=\"Employees\" />\r\n                    )}\r\n                  />\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex justify-content-between flex-wrap\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => setSelectedEmployees([])}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                  <span>\r\n                    <Button onClick={handleAddEmployeeClose}>Cancel</Button>\r\n                    <Button onClick={handleOverallWithPunch}>Download</Button>\r\n                  </span>\r\n                </DialogActions>\r\n              </Dialog>\r\n              <Card>\r\n                <CardContent sx={{ minHeight: \"50vh\" }}>\r\n                  <div className=\"ps-3 pb-2 pt-0 d-flex align-items-center justify-content-between border-bottom mb-3\">\r\n                    <h6 className=\"fa-18\">\r\n                      <Button\r\n                        size=\"small mx-2\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => dashboard()}\r\n                      >\r\n                        Dashboard\r\n                      </Button>\r\n                      <Button\r\n                        size=\"small mx-2\"\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        onClick={() => data()}\r\n                      >\r\n                        EMPLOYEE\r\n                      </Button>\r\n                      <Button\r\n                        size=\"small mx-2\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => dataDepartment()}\r\n                      >\r\n                        Department\r\n                      </Button>\r\n                       <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => defaultLeave()}\r\n                  >\r\n                        Defined Leave\r\n                  </Button>\r\n                    </h6>\r\n\r\n                    <div className=\"d-flex align-items-center justify-content-start gap-3\">\r\n                      <Button\r\n                        onClick={handleDownload}\r\n                        variant=\"contained\"\r\n                        disabled={filter?.EmpId === 0 || filter?.Name === \"ALL\"}\r\n                      >\r\n                        Individual Report\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          handleOverallDownload(filter?.From, filter?.To);\r\n                        }}\r\n                      >\r\n                        Monthly Report\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setAddEmployeeDialogOpen(true);\r\n                        }}\r\n                      >\r\n                        Cummulative Report\r\n                      </Button>\r\n                      <Button onClick={handleSummaryDownload}>Summary</Button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"px-2 row mb-4\">\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                      <label>Employee</label>\r\n                      <Select\r\n                        value={{ value: filter?.EmpId, label: filter?.Name }}\r\n                        onChange={(e) =>\r\n                          setFilter({\r\n                            ...filter,\r\n                            EmpId: e.value,\r\n                            Name: e.label,\r\n                          })\r\n                        }\r\n                        options={[\r\n                          { value: 0, label: `ALL` },\r\n                          ...employees.map((obj) => ({\r\n                            value: obj?.UserId,\r\n                            label: obj?.Name,\r\n                          })),\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={dropdownPlaceholder}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                      <label>From</label>\r\n                      <input\r\n                        type=\"month\"\r\n                        className=\"cus-inpt\"\r\n                        value={filter?.From?.slice(0, 7)}\r\n                        onChange={handleFromChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n  <label>Log Date</label>\r\n  <input\r\n    type=\"date\"\r\n    className=\"cus-inpt\"\r\n    value={selectedLogDate}\r\n    onChange={(e) => setSelectedLogDate(e.target.value)}\r\n  />\r\n</div>\r\n\r\n                    <div className=\"col-auto p-2 d-flex align-items-center\">\r\n                      <button\r\n                        className=\"btn btn-link ms-2 p-0 mt-3\"\r\n                        onClick={handleRefresh}\r\n                        title=\"Refresh Departments & Employees\"\r\n                      >\r\n                        <Refresh fontSize=\"medium\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-auto p-2 d-flex align-items-center\">\r\n  <button\r\n    className=\"btn btn-success ms-2 p-2 mt-3\"\r\n    disabled={!selectedLogDate || filteredData.length === 0}\r\n    onClick={exportToExcel}\r\n  >\r\n    Download Excel\r\n  </button>\r\n</div>\r\n                  </div>\r\n\r\n                  <FilterableTable\r\n                    // dataArray={attendanceData}\r\n                    dataArray={filteredAttendanceData}\r\n                    columns={[\r\n                      {\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => row.username,\r\n                        ColumnHeader: \"Employee\",\r\n                        isVisible: 1,\r\n                        width: \"20%\",\r\n                        CellProps: {\r\n                          sx: {\r\n                            padding: \"10px\",\r\n                            textAlign: \"left\",\r\n                            fontWeight: \"bold\",\r\n                          },\r\n                        },\r\n                      },\r\n                      {\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) =>\r\n                          formatAttendanceDate(row.LogDate || \"--\"),\r\n                        ColumnHeader: \"Log Date\",\r\n                        isVisible: 1,\r\n                        width: \"20%\",\r\n                        CellProps: {\r\n                          sx: {\r\n                            padding: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"gray\",\r\n                          },\r\n                        },\r\n                      },\r\n                      ...punchColumns,\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={false}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            </>\r\n          )}\r\n\r\n          {viewMode === \"department\" && (\r\n            <FilterableTable\r\n              title={\r\n                <div className=\"d-flex flex-column\">\r\n                  <div className=\"d-flex align-items-center mb-3\">\r\n                    <Button\r\n                      size=\"small mx-2\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => dashboard()}\r\n                    >\r\n                      Dashboard\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small mx-2\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => data()}\r\n                    >\r\n                      Employee\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small mx-2\"\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                      onClick={() => dataDepartment()}\r\n                    >\r\n                      Department\r\n                    </Button>\r\n                     <Button\r\n                    size=\"small mx-2\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => defaultLeave()}\r\n                  >\r\n                      Defined Leave\r\n                  </Button>\r\n                  </div>\r\n\r\n                  <div className=\"row align-items-end\">\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                      <label>Department</label>\r\n                      <Select\r\n                        options={departments}\r\n                        isSearchable\r\n                        placeholder=\"ALL\"\r\n                        value={selectedDepartment}\r\n                        styles={customSelectStyles}\r\n                        onChange={handleDepartmentChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                      <label>Employee</label>\r\n                      <Select\r\n                        options={employees}\r\n                        isSearchable\r\n                        placeholder=\"ALL\"\r\n                        value={selectedEmployee}\r\n                        styles={customSelectStyles}\r\n                        onChange={setSelectedEmployee}\r\n                        isDisabled={!selectedDepartment}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-auto p-2 d-flex align-items-center\">\r\n                      <button\r\n                        className=\"btn btn-link ms-2 p-0 mb-2\"\r\n                        onClick={handleRefreshData}\r\n                        style={{ minWidth: \"24px\" }}\r\n                        title=\"Refresh Departments & Employees\"\r\n                      >\r\n                        <Refresh fontSize=\"small\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n              dataArray={filteredData}\r\n              EnableSerialNumber\r\n              columns={[\r\n                createCol(\"Department\", \"string\", \"Department\"),\r\n                createCol(\r\n                  \"TotalMaleEmployees\",\r\n                  \"number\",\r\n                  \"Total Male Employees\"\r\n                ),\r\n                createCol(\r\n                  \"TotalFemaleEmployees\",\r\n                  \"number\",\r\n                  \"Total Female Employees\"\r\n                ),\r\n                createCol(\"TotalEmployees\", \"number\", \"Total Employees\"),\r\n                createCol(\r\n                  \"TotalMalePresentToday\",\r\n                  \"number\",\r\n                  \"Total Male Present Today\"\r\n                ),\r\n                createCol(\r\n                  \"TotalFemalePresentToday\",\r\n                  \"number\",\r\n                  \"Total Female Present Today\"\r\n                ),\r\n                createCol(\"TotalPresentToday\", \"number\", \"Total Present Today\"),\r\n              ]}\r\n              isExpendable={true}\r\n              tableMaxHeight={550}\r\n              expandableComp={ExpendableComponent1}\r\n            />\r\n          )}\r\n\r\n         {viewMode === \"defaultLeave\" && (\r\n  <DefaultLeave\r\n    currentView={viewMode}\r\n    onViewChange={handleViewChange}\r\n    departments={departments}\r\n    selectedDepartment={selectedDepartment}\r\n    handleDepartmentChange={handleDepartmentChange}\r\n    employees={employees}\r\n    selectedEmployee={selectedEmployee}\r\n    setSelectedEmployee={setSelectedEmployee}\r\n    handleRefreshData={handleRefreshData}\r\n  />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Dialog\r\n            open={addEmployeeDialogOpen}\r\n            maxWidth=\"md\"\r\n            PaperProps={{\r\n              style: { width: \"500px\", height: \"500px\" },\r\n            }}\r\n          >\r\n            <DialogTitle>Add Employee</DialogTitle>\r\n            <DialogContent>\r\n              <Autocomplete\r\n                multiple\r\n                options={[{ UserId: \"all\", Name: \"ALL\" }, ...dropdownEmployees]}\r\n                getOptionLabel={(option) => option.Name}\r\n                isOptionEqualToValue={(option, value) =>\r\n                  option.UserId === value.UserId\r\n                }\r\n                value={\r\n                  selectedEmployees.some((user) => user.UserId === \"all\")\r\n                    ? [{ UserId: \"all\", Name: \"ALL\" }]\r\n                    : selectedEmployees\r\n                }\r\n                onChange={(event, value) => {\r\n                  if (value.some((selected) => selected.UserId === \"all\")) {\r\n                    setSelectedEmployees(dropdownEmployees);\r\n                  } else {\r\n                    const uniqueValues = value.filter(\r\n                      (val, index, self) =>\r\n                        index === self.findIndex((t) => t.UserId === val.UserId)\r\n                    );\r\n                    setSelectedEmployees(uniqueValues);\r\n                  }\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} placeholder=\"Employees\" />\r\n                )}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions className=\"d-flex justify-content-between flex-wrap\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => setSelectedEmployees([])}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <span>\r\n                <Button onClick={handleAddEmployeeClose}>Cancel</Button>\r\n                <Button onClick={handleOverallWithPunch}>Download</Button>\r\n              </span>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Card>\r\n            <CardContent sx={{ minHeight: \"50vh\" }}>\r\n              <div className=\"ps-3 pb-2 pt-0 d-flex align-items-center justify-content-between border-bottom mb-3\">\r\n                <h6 className=\"fa-18\">\r\n                  <Button size=\"small\" variant=\"outlined\" className=\"mx-2\">\r\n                    EMPLOYEE\r\n                  </Button>\r\n                </h6>\r\n\r\n                {(userTypeId === 1 || userTypeId === 0) && (\r\n                  <div className=\"d-flex align-items-center justify-content-start gap-3\">\r\n                    <Button\r\n                      onClick={handleDownload}\r\n                      variant=\"contained\"\r\n                      disabled={filter?.EmpId === 0 || filter?.Name === \"ALL\"}\r\n                    >\r\n                      Individual Report\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() =>\r\n                        handleOverallDownload(filter?.From, filter?.To)\r\n                      }\r\n                    >\r\n                      Monthly Report\r\n                    </Button>\r\n                    <Button onClick={() => setAddEmployeeDialogOpen(true)}>\r\n                      Cumulative Monthly Report\r\n                    </Button>\r\n                    <Button onClick={handleSummaryDownload}>Summary</Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"px-2 row mb-4\">\r\n                <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                  <label>Employee</label>\r\n                  <Select\r\n                    value={{ value: filter?.EmpId, label: filter?.Name }}\r\n                    onChange={(e) =>\r\n                      setFilter({ ...filter, EmpId: e.value, Name: e.label })\r\n                    }\r\n                    options={[\r\n                      { value: 0, label: \"ALL\" },\r\n                      ...employees.map((obj) => ({\r\n                        value: obj.UserId,\r\n                        label: obj.Name,\r\n                      })),\r\n                    ]}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder={dropdownPlaceholder}\r\n                    isDisabled={isDropdownDisabled}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                  <label>From</label>\r\n                  <input\r\n                    type=\"month\"\r\n                    className=\"cus-inpt\"\r\n                    value={filter?.From?.slice(0, 7)}\r\n                    onChange={handleFromChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <FilterableTable\r\n                dataArray={attendanceData}\r\n                columns={[\r\n                  {\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => row.username,\r\n                    ColumnHeader: \"Employee\",\r\n                    isVisible: 1,\r\n                    width: \"20%\",\r\n                    CellProps: {\r\n                      sx: {\r\n                        padding: \"10px\",\r\n                        textAlign: \"left\",\r\n                        fontWeight: \"bold\",\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) =>\r\n                      formatAttendanceDate(row.LogDate || \"--\"),\r\n                    ColumnHeader: \"Log Date\",\r\n                    isVisible: 1,\r\n                    width: \"20%\",\r\n                    CellProps: {\r\n                      sx: {\r\n                        padding: \"10px\",\r\n                        textAlign: \"center\",\r\n                        color: \"gray\",\r\n                      },\r\n                    },\r\n                  },\r\n                  ...punchColumns,\r\n                ]}\r\n                EnableSerialNumber\r\n                CellSize=\"small\"\r\n                disablePagination={false}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AttendanceNewScreen;\r\n"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","Object","defineProperty","exports","value","enumerable","get","_utils","createSvgIcon","require","d","preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","Tooltip","title","IconButton","onClick","event","currentTarget","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","entries","_ref4","console","log","colSpan","Number","Card","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","style","width","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","_interopRequireDefault","_createSvgIcon","_jsxRuntime","default","jsx","validator","reason","componentNameInError","Component","propName","componentName","location","propFullName","unstable_ClassNameGenerator","configure","generator","ClassNameGenerator","currentView","onViewChange","attendanceData","setAttendanceData","monthlyLeaves","setMonthlyLeaves","setFilter","FromDate","Date","toISOString","split","Description","display","Created_By","description","setDesctiption","addDialog","setAddDialog","selectedDate","setSelectedDate","calendarViewDate","setCalendarViewDate","editMode","setEditMode","editIndex","setEditIndex","formatDate","dateStr","day","getDate","padStart","month","getMonth","year","getFullYear","localData","localStorage","getItem","parseData","JSON","parse","fetchLeaves","async","res","fetchLink","success","currentMonth","currentYear","filtered","item","itemDate","useEffect","closeDialg","CardContent","minHeight","view","Button","charAt","toUpperCase","onChange","overflowY","FullCalendar","plugins","timeGridPlugin","listPlugin","dayGridPlugin","interactionPlugin","initialView","initialDate","events","start","objectData","headerToolbar","left","center","right","showNonCurrentDates","editable","selectable","selectMirror","height","eventClick","eventInfo","leave","extendedProps","date","findIndex","dateClick","info","datesSet","viewDate","Dialog","fullWidth","maxWidth","DialogTitle","Close","DialogContent","dateString","formatForInputDate","DialogActions","currentRow","SNo","User_Id","UserId","Modified_By","updatedList","bodyData","Id","method","toast","message","onUpdate","then","catch","onsubmit","_filter$From","_filter$From2","loadingOn","loadingOff","storage","navigate","useNavigate","useLocation","stateDetails","addEmployeeDialogOpen","setAddEmployeeDialogOpen","selectedLogDate","setSelectedLogDate","getCurrentMonthYear","toString","initialValue","From","To","EmpId","Name","query","URLSearchParams","search","defaultFilters","saleOrders","setSaleOrders","viewMode","setViewMode","expandedDepartment","setExpandedDepartment","dropdownEmployees","setDropdownEmployees","reload","setReload","loading","setLoading","isDropdownDisabled","setIsDropdownDisabled","employees","setEmployees","selectedEmployee","setSelectedEmployee","userTypeId","UserTypeId","contextObj","useContext","MyContext","dropdownPlaceholder","setDropdownPlaceholder","debouncedFilter","setDebouncedFilter","timer","setTimeout","clearTimeout","fetchAttendanceData","fetchDropdownEmployees","getDaysInMonth","monthYear","filters","setFilters","ToDate","Cancel_status","departments","setDepartments","selectedDepartment","setSelectedDepartment","selectedEmployees","setSelectedEmployees","Add_Rights","today","fromDate","toDate","finally","handleFromChange","selectedMonth","startDate","dayCount","endDate","handleSummaryDownload","response","overallData","getDateRange","to","allDates","end","sundayCount","push","getDay","setDate","days","totalDays","dateRange","summaryData","punchDetails","isArray","AttendanceDetails","totalPresent","companyHoliday","workingDays","dayRecord","p","startsWith","AttendanceStatus","approvedLeave","ApprovedLeave","pendingLeave","PendingLeave","totalAbsent","TotalPresent","CompanyHoliday","TotalAbsent","NumberOfSundays","ws","sheet_add_aoa","origin","wb","handleDownload","filteredAttendanceData","fingerPrintEmpId","exportData","trim","attendanceStatus","punchColumns","username","Employee","formatAttendanceDate","LogDate","columnsOrder","reorderedData","reduce","acc","col","fileName","_filteredAttendanceDa","_filteredAttendanceDa2","employeeName","_","CellProps","justifyContent","alignItems","punch","rawTime","formattedTime","timeString","hourStr","minuteStr","hour","minute","ampm","formatToAmPm","Chip","label","margin","logDateTime","handleOverallDownload","attendanceRes","leaveRes","defaultLeaveRes","Promise","all","Error","leaveMap","defaultLeaveDates","_leave$Status","Status","userId","current","leaveEnd","defaultLeave","add","dates","emp","attendanceDetails","jsonString","_unused","tryParseJSON","dailyStatus","presentCount","attendanceLookup","record","status","hasPunch","Punch1","_leaveMap$userId","dayKey","isSunday","attendanceRecord","has","EmployeeName","handleOverallWithPunch","_attendanceData$","maxPunches","firstLogDate","dateObj","defaultLeaveResponse","defaultLeaveData","leaveData","_leave$Status2","parseDate","parts","leaveStart","currentDate","groupedData","some","user","keys","userAttendance","_leaveMap$userId2","_row$AttendanceDetail2","logDate","_row$AttendanceDetail","punches","toLocaleString","Company_id","employeesWithFingerPrintId","companyId","Authorization","filteredEmployees","prev","employee","apiUrl","queryFilters","isValidDate","Fromdate","Todate","ISOString","updateQueryString","newFilters","params","handleAddEmployeeClose","dataDepartment","dashboard","handleRefreshData","window","others","department","deptOptions","dept","handleDepartmentChange","selected","_data$others","employeeOptions","Emp_Id","Emp_Name","departmentWiseCounts","_saleOrders$","DepartmentWiseCounts","parsed","err","filteredData","Department","employeeList","Employees","useMemo","_row$LogDate","Search","_ref6","_row$TotalEmployees","_row$TotalMaleEmploye","_row$TotalFemaleEmplo","total","TotalEmployees","male","TotalMaleEmployees","female","TotalFemaleEmployees","_ref7","_row$TotalPresentToda","_row$TotalMalePresent","_row$TotalFemalePrese","TotalPresentToday","TotalMalePresentToday","TotalFemalePresentToday","borderCollapse","marginTop","border","toggleExpand","marginRight","minWidth","PaperProps","Autocomplete","multiple","options","getOptionLabel","isOptionEqualToValue","uniqueValues","self","t","renderInput","TextField","placeholder","Select","obj","isSearchable","handleRefresh","Refresh","alert","ExcelJS","addWorksheet","formattedPunches","match","formatPunch","addRow","toLocaleDateString","punch1","punch2","punch3","punch4","punch5","punch6","getRow","eachCell","cell","font","bold","argb","fill","pattern","fgColor","alignment","buffer","xlsx","writeBuffer","saveAs","Blob","_ref8","_ref9","isDisabled","_ref5","monthlyAttendance","MonthlyAverageAttendance","attendanceMap","Map","_item$UniqueEmployeeD","MonthNumber","YearNumber","set","UniqueEmployeeDays","flexDirection","gap","Sex","flex","borderRadius","overflowX","whiteSpace","number","_attendanceMap$get","uniqueEmployeeDays","userSelect","DefaultLeave","newView","_ref10","_ref11"],"sourceRoot":""}