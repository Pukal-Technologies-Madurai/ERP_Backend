{"version":3,"file":"static/js/1536.74c904e4.chunk.js","mappings":"oTAQA,MAqRA,EArR4BA,IAcrB,IAdsB,cACzBC,EAAgB,CAAEC,MAAO,SAAS,UAClCC,EAAY,CAAEC,SAAU,SAAS,mBACjCC,EAAqB,CAAEC,MAAO,GAAIC,MAAO,IAAI,aAC7CC,EAAe,CAAC,EAAC,gBACjBC,EAAkB,GAAE,mBACpBC,EAAkB,QAClBC,EAAO,SACPC,EAAQ,gBACRC,EAAe,iBACfC,EAAgB,eAChBC,EAAc,YACdC,EAAW,kBACXC,EAAmB,IACtBjB,EAEG,MAAMkB,EAAsBA,CAACC,EAAgBC,KACzCV,GAAmBW,IACf,MAEMC,GAFgBC,EAAAA,EAAAA,IAAQF,GAEYG,QAAOC,MAC7CC,EAAAA,EAAAA,IAAe,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,UAAWR,EAAeQ,aAC3CC,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAAuB,OAAdV,QAAc,IAAdA,OAAc,EAAdA,EAAgBU,YAG9C,IAAIC,EACJ,GAAIV,EACAU,EAAiBR,MACd,CACH,MAAMS,EAAUC,OAAOC,YACnBD,OAAOE,QAAQC,EAAAA,IAA6BC,KAAIC,IAAmB,IAAjBC,EAAKhC,GAAM+B,EACzD,OAAQC,GACJ,IAAK,UAAW,MAAO,CAACA,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,OAC7C,IAAK,YAAa,MAAO,CAACD,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqB,WAC/C,IAAK,cAAe,MAAO,CAACF,GAAKG,EAAAA,EAAAA,IAAuB,OAAdtB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuB,sBAC1D,IAAK,YACL,IAAK,aAAc,MAAO,CAACJ,EAAK,GAChC,IAAK,kBAAmB,MAAO,CAACA,EAAK,iBAErC,IAAK,mBAAoB,MAAO,CAACA,EAAKnB,EAAewB,SACrD,IAAK,kBAAmB,MAAO,CAACL,EAAKnB,EAAeyB,gBACpD,IAAK,gBAAiB,MAAO,CAACN,GAAKO,EAAAA,EAAAA,IACjB,OAAd1B,QAAc,IAAdA,OAAc,EAAdA,EAAgBuB,oBAChBvB,EAAeyB,iBAEnB,QAAS,MAAO,CAACN,EAAKhC,GAC1B,KAGRwB,EAAiB,IAAIR,EAAqBS,EAC9C,CACA,OAAOD,CAAc,GACvB,EA2BN,OACIgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,UAC7BF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,6BAA4BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAA0BC,MAAOlD,EAAc+C,SAAC,uBAC9DC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,WAAUF,UAChCC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHC,KAAK,SACLC,QAAQ,WACRC,SAAgE,KAAtDjC,EAAAA,EAAAA,IAAQX,EAAS6C,0BAA0BC,OACrDC,QAASA,IAAM7C,EAAiB,sBAAsB,GAAMkC,SAC/D,wBAGTC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,kBAAmB,OAAQ,gBAChC,cAEA,iBAAkB,UAAUZ,KACxB,CAACwB,EAAKC,KAAWZ,EAAAA,EAAAA,KAAA,MAAiBC,UAAU,sBAAqBF,SAAEY,GAAzCC,WAI1Cf,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CACKvC,EAAgB2B,KACb,CAAC0B,EAASC,KACNjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKe,EAAa,KAClBd,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAASnC,aACdsB,EAAAA,EAAAA,KAAA,MAAAD,UAAKgB,EAAAA,EAAAA,IAAiB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,qBACxBhB,EAAAA,EAAAA,KAAA,MAAAD,UAAKkB,EAAAA,EAAAA,IAAoB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,gBAC3BlB,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAASM,mBAEdnB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKF,UACfC,EAAAA,EAAAA,KAAA,SACI3C,MAAOwD,EAAQO,YAAc,GAC7BnB,UAAU,qCACVoB,YAAY,eACZhB,KAAK,SACLiB,SAAUC,IACN,MAAMC,GAAY5B,EAAAA,EAAAA,IAAkB,OAAPiB,QAAO,IAAPA,OAAO,EAAPA,EAASK,YAAoB,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASM,iBACtDM,EAjD1BC,EAACC,EAAOC,KAC5B,MAAMC,GAAaC,EAAAA,EAAAA,IAAcH,IAASI,EAAAA,EAAAA,IAAYJ,GAAS,EAC/D,OAAOE,EAAaD,EAAMC,EAAaD,CAAG,EA+CgBF,CAAgBH,EAAES,OAAO3E,MAAOmE,GAnEvES,EAACpB,EAASqB,KAC7BzE,GAAmBW,IACf,MAAM+D,EAAmB,IAAI/D,GAEvBgE,EAAiBD,EAAiBE,WACpCC,IACI7D,EAAAA,EAAAA,IAAcoC,EAAQnC,UAAW4D,EAAI5D,aACrCC,EAAAA,EAAAA,IAAckC,EAAQjC,QAAS0D,EAAI1D,WAO3C,OAHwB,IAApBwD,IACAD,EAAiBC,GAAgBhB,YAAa5B,EAAAA,EAAAA,IAAS0C,IAEpDC,CAAgB,GACzB,EAqDsCF,CAAepB,EAASY,EAAU,OAK9CzB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeF,UACzBC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,KAAK,QACL9B,QAASA,IAAMzC,EAAoB4C,GAAS,GAAMd,UACrDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACxC,UAAU,QAAQyC,MAAM,gBAzBhC5B,MA8BjBjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,mBAAkBF,SAAC,WAC7CC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBF,SAC7BvC,EAAgBmF,QACb,CAACC,EAAK/B,KAAYgC,EAAAA,EAAAA,IAASD,EAAK/B,EAAQK,cAAc,MAG9DlB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBF,SAC7BvC,EAAgBmF,QACb,CAACC,EAAK/B,KAAYgC,EAAAA,EAAAA,IAASD,EAAK/B,EAAQO,aAAa,MAG7DpB,EAAAA,EAAAA,KAAA,qBAOhBH,EAAAA,EAAAA,MAACiD,EAAAA,EAAM,CACHC,KAAMrF,EAAQsF,mBACdC,QAASlF,EAAamF,YAAU,EAAAnD,SAAA,EAEhCF,EAAAA,EAAAA,MAACsD,EAAAA,EAAW,CAAClD,UAAU,oDAAmDF,SAAA,EACtEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,6BACNC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAAC7B,QAAS3C,EAAYgC,UAACC,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACV,MAAM,gBAGnD1C,EAAAA,EAAAA,KAACqD,EAAAA,EAAa,CAAAtD,UACVF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,6BAA4BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAA0BC,MAAOlD,EAAc+C,SAAC,sBAC9DC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,iBAI9BD,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,kBAAmB,SAAU,OAAQ,gBAAiB,cAAe,iBAAkB,KAAKZ,KACjG,CAACwB,EAAKC,KAAWZ,EAAAA,EAAAA,KAAA,MAAAD,SAAkBY,GAATC,WAItCf,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CACKpC,EAAS6C,yBAAyBrB,KAC/B,CAAC0B,EAASC,KACNjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKe,EAAa,KAClBd,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAAStB,aACdS,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAASyC,cACdtD,EAAAA,EAAAA,KAAA,MAAAD,UAAKgB,EAAAA,EAAAA,IAAiB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASnB,YACxBM,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAASpB,uBACdO,EAAAA,EAAAA,KAAA,MAAAD,SAAY,OAAPc,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,eACdvD,EAAAA,EAAAA,KAAA,MAAAD,UAAKH,EAAAA,EAAAA,IAAkB,OAAPiB,QAAO,IAAPA,OAAO,EAAPA,EAASpB,oBAA4B,OAAPoB,QAAO,IAAPA,OAAO,EAAPA,EAASlB,mBACvDK,EAAAA,EAAAA,KAAA,MAAAD,SACK,MACG,MAAMyD,GAEC,IAFWhG,EAAgB6E,WAAU7D,IACxCC,EAAAA,EAAAA,IAAe,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,UAAWmC,EAAQtB,aAGxC,OACIS,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIC,UAAU,uCACVC,MAAO,CAAEuD,QAAS,SAClBpD,KAAK,WACLqD,QAASF,EACTlC,SAAUA,KACFkC,EAAWvF,EAAoB,IAC5B4C,EACHnC,UAAWmC,EAAQtB,UACnBX,QAASiC,EAAQvB,QAClB,GACErB,EAAoB,IAClB4C,EACHnC,UAAWmC,EAAQtB,UACnBX,QAASiC,EAAQvB,OACnB,KAKrB,EA3BA,OATAwB,MAyCjBjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGwD,QAAS,KACzB3D,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,gBAAeF,SACpCpC,EAAS6C,yBAAyBmC,QAC/B,CAACC,EAAK/B,KAAYgC,EAAAA,EAAAA,IAASD,EAAY,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASpB,sBAAsB,SAI3EI,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,uBAAsBF,SAC3CpC,EAAS6C,yBAAyBmC,QAC/B,CAACC,EAAK/B,KAGK,IAFWrD,EAAgB6E,WAAU7D,IACxCG,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAASiC,EAAQvB,UAGhBuD,EAAAA,EAAAA,IAASD,EAAY,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASpB,qBAEtCmD,GACR,SAIf/C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,cAAaF,SAClCpC,EAAS6C,yBAAyBmC,QAC/B,CAACC,EAAK/B,KAGK,IAFcrD,EAAgB6E,WAAU7D,IAC3CG,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAASiC,EAAQvB,UAGbuD,EAAAA,EAAAA,IAASD,EAAY,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASpB,qBAEzCmD,GACR,iBAO3B5C,EAAAA,EAAAA,KAAC4D,EAAAA,EAAa,CAAA7D,UACVC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACM,QAAS3C,EAAYgC,SAAC,iBAGvC,E,2DC7QX,MAoPA,EApP+BhD,IAexB,IAfyB,cAC5BC,EAAgB,CAAEC,MAAO,SAAS,UAClCC,EAAY,CAAEC,SAAU,SAAS,mBACjCC,EAAqB,CAAEC,MAAO,GAAIC,MAAO,IAAI,aAC7CC,EAAe,CAAC,EAAC,gBACjBC,EAAkB,GAAE,QACpBE,EAAO,SACPC,EAAQ,gBACRkG,EAAe,iBACfhG,EAAgB,eAChBC,EAAc,YACdC,EAAW,UACX+F,EAAS,WACTC,EAAU,kBACV/F,EAAmB,IACtBjB,EAEG,MAuBMiH,GAAkBC,EAAAA,EAAAA,UAAQ,KACrB3F,EAAAA,EAAAA,IAAQd,GAAiBmF,QAC5B,CAACC,EAAK/B,KAAYgC,EAAAA,EAAAA,IAASD,EAAK/B,EAAQO,aAAa,IACrD9C,EAAAA,EAAAA,IAAQN,GAAmB2E,QAC3B,CAACC,EAAKsB,KAAQrB,EAAAA,EAAAA,IAASD,EAAQ,OAAHsB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,iBAAiB,IAEvD,CAAC3G,EAAiBQ,IAEfoG,GAAoBH,EAAAA,EAAAA,UAAQ,KACvBrE,EAAAA,EAAAA,IAAWrC,EAAa8G,cAAeL,IAC/C,CAACA,EAAiBzG,EAAa8G,gBAElC,OACIxE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEIC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6BAA4BF,UACzCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAA0BC,MAAOlD,EAAc+C,SAAC,qBAC9DC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,WAAUF,UAChCC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHE,QAAQ,WACRD,KAAK,SACLK,QAASA,IAAM7C,EAAiB,uBAAuB,GAAMkC,SAChE,yBAGTF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,kBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAU6C,SAChBuE,EAAAA,GAAaC,MACVlE,IAAQ1B,EAAAA,EAAAA,IAAc0B,EAAKhD,MAAOE,EAAaiH,qBACjDlH,SAGN0C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,mBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAU6C,SAAExC,EAAakH,qBAEpCzE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,mBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAW+C,UAAU,uBAAsBF,UAAEkB,EAAAA,EAAAA,IAAa1D,EAAa8G,qBAEtFxE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAU6C,SAAExC,EAAamH,sBAEpC1E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,oBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAU6C,SAAExC,EAAaoH,sBAEpC3E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAC,qBAC3BC,EAAAA,EAAAA,KAAA,MAAIE,MAAOhD,EAAW+C,UAAU,sBAAqBF,UAAEkB,EAAAA,EAAAA,IAAamD,cAKhFvE,EAAAA,EAAAA,MAACiD,EAAAA,EAAM,CACHC,KAAMrF,EAAQkH,oBACd3B,QAASlF,EAAamF,YAAU,EAAAnD,SAAA,EAEhCF,EAAAA,EAAAA,MAACsD,EAAAA,EAAW,CAAClD,UAAU,oDAAmDF,SAAA,EACtEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBACNC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAAC7B,QAAS3C,EAAYgC,UAACC,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACV,MAAM,gBAEnD7C,EAAAA,EAAAA,MAACwD,EAAAA,EAAa,CAAAtD,SAAA,EACVF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAGhBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCF,SAAA,EAClDF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,gBAAYC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,QAChC7E,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACHzH,MAAOK,EAAQqH,YACfC,iBAAkBC,SAASC,KAC3B5D,SAAUC,GAAK1D,EAAiB,cAAe0D,GAC/C4D,QAAS,CACL,CAAE9H,MAAO,GAAIC,MAAO,SAAU8H,YAAY,MACvCd,EAAAA,IAEPe,OAAQC,EAAAA,GACRC,cAAc,EACdC,UAAQ,EACRnE,YAAa,4BAKrBxB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCF,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACHzH,MAAOK,EAAQ+H,aACfT,iBAAkBC,SAASC,KAC3B5D,SAAUC,GAAK1D,EAAiB,eAAgB0D,GAChD4D,QAAS,CACL,CAAE9H,MAAO,GAAIC,MAAO,SAAU8H,YAAY,OACvC9G,EAAAA,EAAAA,IAAQX,EAAS+H,UAAUvG,KAC1ByD,IAAG,CACCvF,MAAOuF,EAAI+C,OACXrI,MAAOsF,EAAIgD,kBAIvBP,OAAQC,EAAAA,GACRC,cAAc,EACdC,UAAQ,EACRnE,YAAa,6BAKrBxB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCF,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBACPC,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACHzH,MAAOK,EAAQmI,cACfb,iBAAkBC,SAASC,KAC3B5D,SAAUC,GAAK1D,EAAiB,gBAAiB0D,GACjD4D,QAAS,CACL,CAAE9H,MAAO,GAAIC,MAAO,SAAU8H,YAAY,OACvC9G,EAAAA,EAAAA,IAAQX,EAAS+H,UAAUvG,KAC1ByD,IAAG,CACCvF,MAAOuF,EAAI+C,OACXrI,MAAOsF,EAAIgD,kBAIvBP,OAAQC,EAAAA,GACRC,cAAc,EACdC,UAAQ,EACRnE,YAAa,8BAIrBrB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DF,UACrEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASF,UACpBC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHE,QAAQ,YACRwF,WAAW9F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAM,IAClBrF,QAASA,IA7JlBsF,EAACP,EAAcI,EAAed,KAEjD,KAAKjD,EAAAA,EAAAA,IAAciD,GAAc,OAAOkB,EAAAA,GAAMC,KAAK,qBAEnDC,EAAAA,EAAAA,GAAU,CACNC,QAAU,6CAA4CX,mBAA8BI,uBAAmCd,IACvHjB,YACAC,eACDsC,MAAKC,IACAA,EAAKC,SACLzI,EAAe,8BAA8BQ,EAAAA,EAAAA,IAAQgI,EAAKA,MAC9D,GACF,EAiJyCN,CACXtI,EAAQ+H,aAAapI,MACrBK,EAAQmI,cAAcxI,MACtBK,EAAQqH,YAAY1H,OACtB0C,SACL,mBAQbC,EAAAA,EAAAA,KAACwG,EAAAA,GAAe,CACZC,MAAM,gBACNC,oBAAkB,EAClBC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,IAChBC,UAAWnJ,EAASoJ,2BACpBC,QAAS,EACLC,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,cAC1CA,EAAAA,EAAAA,IAAU,eAAgB,OAAQ,QAClC,CACIC,UAAW,EACXC,aAAc,YACdC,cAAc,EACdC,KAAMC,IAAA,IAAC,IAAEC,GAAKD,EAAA,OACVhD,EAAAA,GAAaC,MAAKlE,IAAQ1B,EAAAA,EAAAA,IAAc0B,EAAKhD,MAAU,OAAHkK,QAAG,IAAHA,OAAG,EAAHA,EAAK/C,qBAAoBlH,KAAK,IAG1F2J,EAAAA,EAAAA,IAAU,oBAAqB,SAAU,cACzCA,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,eAC1CA,EAAAA,EAAAA,IAAU,gBAAiB,SAAU,UACrC,CACIC,UAAW,EACXC,aAAc,qBACdC,cAAc,EACdC,KAAMG,IAAA,IAAC,IAAED,GAAKC,EAAA,OAAK5H,EAAAA,EAAAA,IAAc,OAAH2H,QAAG,IAAHA,OAAG,EAAHA,EAAKlD,cAAkB,OAAHkD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,oBAAoB,IAE/ER,EAAAA,EAAAA,IAAU,gBAAiB,SAAU,IACrC,CACIC,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAMK,IAAA,IAAC,IAAEH,GAAKG,EAAA,OACV1H,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,KAAK,QACL9B,QAASA,KA9LpBxC,QA+L+BqJ,EA9LpD1D,GAAgBzF,GACLW,OAAOC,YACVD,OAAOE,QAAQb,GAAKe,KAAIC,IAAA,IAAEC,EAAKhC,GAAM+B,EAAA,MAAK,CAACC,EAAKnB,EAAemB,IAAQhC,EAAM,OA6LjDU,IACAF,EAAiB,cAAeT,GAChCS,EAAiB,eAAgBT,GACjCS,EAAiB,gBAAiBT,EAAmB,EACvD2C,UACLC,EAAAA,EAAAA,KAAC2H,EAAAA,EAAI,CAAC1H,UAAU,WAAuB,UAO5DD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAa,CAAA7D,UACVC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACM,QAAS3C,EAAYgC,SAAC,iBAGvC,E,0BCpPX,MAoIA,EApI4BhD,IAOrB,IAPsB,UACzB6K,EAAY,GAAE,cACd5K,EAAgB,CAAEC,MAAO,SAAS,UAClCC,EAAY,CAAEC,SAAU,SAAS,mBACjCC,EAAqB,CAAEC,MAAO,GAAIC,MAAO,IAAI,gBAC7CE,EAAkB,GAAE,SACpBqK,GACH9K,EAEG,MAAM+K,EAAY1I,IAAwB,IAAvB,IAAEmI,EAAM,CAAC,EAAC,IAAEQ,GAAK3I,EAChC,MAAO2D,EAAMiF,IAAWC,EAAAA,EAAAA,WAAS,GAC3BC,EAAiC,gBAAf,OAAHX,QAAG,IAAHA,OAAG,EAAHA,EAAKY,UAE1B,OACItI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKgI,KACL/H,EAAAA,EAAAA,KAAA,MAAAD,UAAQ,OAAHwH,QAAG,IAAHA,OAAG,EAAHA,EAAKa,mBAAoB,OAC9BpI,EAAAA,EAAAA,KAAA,MAAAD,SAAQ,OAAHwH,QAAG,IAAHA,GAAAA,EAAKc,aAActH,EAAAA,EAAAA,IAAa,OAAHwG,QAAG,IAAHA,OAAG,EAAHA,EAAKc,aAAe,OACtDrI,EAAAA,EAAAA,KAAA,MAAAD,UAAQ,OAAHwH,QAAG,IAAHA,OAAG,EAAHA,EAAKY,WAAY,OACtBnI,EAAAA,EAAAA,KAAA,MAAAD,UAAQ,OAAHwH,QAAG,IAAHA,OAAG,EAAHA,EAAKe,iBAAkB,OAC5BtI,EAAAA,EAAAA,KAAA,MAAAD,UAAQ,OAAHwH,QAAG,IAAHA,OAAG,EAAHA,EAAKgB,YAAa,OACvBvI,EAAAA,EAAAA,KAAA,MAAAD,SAAQ,OAAHwH,QAAG,IAAHA,OAAG,EAAHA,EAAKiB,cACVxI,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,4BAA2BF,SAAA,CACrC,MACG,MAAMyD,GAEC,IAFWhG,EAAgB6E,WAAU7D,IACxCG,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAAS2I,EAAIkB,aAGlC,OACIzI,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIC,UAAU,uCACVC,MAAO,CAAEuD,QAAS,SAClBpD,KAAK,WACLqD,QAASF,EACTlC,SAAUA,KACFkC,EAAWqE,EAASN,GAAK,GACxBM,EAASN,EAAI,KAKrC,EAnBA,IAqBDvH,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,KAAK,QACLvC,UAAU,OACVS,QAASA,IAAMsH,GAAQ5J,IAAQA,IAAK2B,SAEnCgD,GAAO/C,EAAAA,EAAAA,KAAC0I,EAAAA,EAAe,CAACzI,UAAU,WAAaD,EAAAA,EAAAA,KAAC2I,EAAAA,EAAiB,CAAC1I,UAAU,oBAM5F8C,IACG/C,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,MAAKF,UAE3BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAMF,SAAA,CAEhBmI,IACGlI,EAAAA,EAAAA,KAAA,OAAKC,UAAW,eAAeF,UAC3BC,EAAAA,EAAAA,KAACwG,EAAAA,GAAe,CACZC,MAAM,SACNE,iBAAkB,GAClBC,eAAgB,GAChBF,oBAAkB,EAClBI,UAAc,OAAHS,QAAG,IAAHA,OAAG,EAAHA,EAAKqB,cAChB5B,QAAS,EACLC,EAAAA,EAAAA,IAAU,eAAgB,SAAU,SACpCA,EAAAA,EAAAA,IAAU,cAAe,SAAU,SACnCA,EAAAA,EAAAA,IAAU,WAAY,SAAU,QAEpC4B,mBAAiB,OAK7B7I,EAAAA,EAAAA,KAAA,OAAKC,UAAWiI,EAAe,eAAiB,aAAanI,UACzDC,EAAAA,EAAAA,KAACwG,EAAAA,GAAe,CACZC,MAAOyB,EAAe,cAAgB,QACtCvB,iBAAkB,GAClBC,eAAgB,GAChBF,oBAAkB,EAClBI,UAAc,OAAHS,QAAG,IAAHA,OAAG,EAAHA,EAAKuB,cAChB9B,QAAS,EACLC,EAAAA,EAAAA,IAAU,iBAAkB,SAAU,WACjCiB,EAED,GAFgB,EAChBjB,EAAAA,EAAAA,IAAU,kBAAmB,SAAU,UAE3CA,EAAAA,EAAAA,IAAU,gBAAiB,SAAU,OACrCA,EAAAA,EAAAA,IAAU,WAAY,SAAU,QAChCA,EAAAA,EAAAA,IAAU,gBAAiB,SAAU,YAEzC4B,mBAAiB,eAO1C,EAIX,OACI7I,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,UAC7BF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,6BAA4BF,SAAA,EACzCF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAA0BE,QAAS,EAAEJ,SAAE,mBACrDC,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,iBAE9BD,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,aAAc,OAAQ,eAAgB,UAAW,YAAa,cAAe,KAAKZ,KACvF,CAACwB,EAAKC,KAAWZ,EAAAA,EAAAA,KAAA,MAAAD,SAAkBY,GAATC,WAItCZ,EAAAA,EAAAA,KAAA,SAAAD,SACK6H,EAAUzI,KAAI,CAAC4J,EAASC,KAAWhJ,EAAAA,EAAAA,KAAC8H,EAAS,CAACP,IAAKwB,EAAShB,IAAKiB,EAAS,GAAQA,aAIhG,ECnILxJ,EAAYyJ,GAAQC,OAAOD,IAAQ,EAEnCE,EAAMA,CAACC,EAAGC,IAAM7J,EAAS4J,GAAK5J,EAAS6J,GACvCC,EAAWA,CAACF,EAAGC,IAAM7J,EAAS4J,GAAK5J,EAAS6J,GAG5CE,EAAc,SAACC,GAAG,IAAEC,EAASC,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAKR,OAAO1J,EAASgK,GAAKI,QAAQH,GAAY,EAC/E9K,EAAgBA,CAACyK,EAAGC,IAAM7J,EAAS4J,KAAO5J,EAAS6J,GA2LzD,EAvL2BtM,IAQpB,IARqB,gBACxBS,EAAkB,GAAE,mBACpBqM,EAAqB,GAAE,mBACvBpM,EAAkB,sBAClBqM,EAAqB,gBACrBpI,EAAe,qBACfqI,EAAoB,sBACpBC,GACHjN,EACG,MAAOgG,EAAMiF,IAAWC,EAAAA,EAAAA,WAAS,GAoB3BgC,EAAwB,SAAClB,GAC3B,MAAMmB,EAAc1K,EADsBkK,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAG7CjM,GAAoBW,IAChB,MAAM+L,EAAU,IAAI/L,GACdgM,EAAQD,EAAQ9H,WAAWgH,GAAM1K,EAAc0K,EAAEzK,QAASmK,EAAQnK,WAExE,OADe,IAAXwL,IAAcD,EAAQC,GAAOhJ,WAAa8I,GACvCC,CAAO,IAGlBL,GAAuBO,IACnB,MAAMC,EAAQD,EAAK9L,QAAQgM,GAAS5L,EAAc4L,EAAK3L,QAASmK,EAAQnK,WAMlE4L,EAAWF,EAAM3H,QAAO,CAAC8H,EAAKF,IAASpB,EAAIsB,EAAKF,EAAKG,eAAe,GACpEC,GArDFvB,EAqDoBc,EArDL,KAAZb,EAqD8BmB,GArDdhL,EAAS4J,GAAK5J,EAAS6J,GAAK,GAAhDuB,IAACxB,EAAGC,EAuDP,IAAIwB,EAAc,EAElB,MAAMC,EAAeR,EAAMnL,KAAI,CAACoL,EAAMH,KAClC,MAAMW,EAAWxB,EA3DhByB,EAAC5B,EAAGC,IAAM7J,EAAS4J,GAAK5J,EAAS6J,GA2DL2B,CAAST,EAAKG,aAAcC,IACzD,OAAIP,EAAQE,EAAM7J,OAAS,GACvBoK,EAAc1B,EAAI0B,EAAaE,GACxB,IACAR,EACHU,cAAeF,IAGZ,IACAR,EACHU,cAAe1B,EAAYD,EAASY,EAAaW,IAEzD,IAGJ,OAAOR,EAAKlL,KAAKoL,IACb,GAAI5L,EAAc4L,EAAK3L,QAASmK,EAAQnK,SAAU,CAK9C,OAJgBkM,EAAavG,MAAM2G,GAC/BvM,EAAcuM,EAAEC,QAASZ,EAAKY,UAC9BxM,EAAcuM,EAAEE,OAAQb,EAAKa,WAEfb,CACtB,CACA,OAAOA,CAAI,GACb,GAEV,EAEA,OACIvK,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,SAC5BvC,EAAgB2B,KAAI,CAAC4J,EAASsC,KAC3BxL,SAAAA,EAAAA,MAAA,SAAOI,UAAU,kCAAiCF,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUF,SAAEsL,EAAe,KACzCrL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BF,SAAEgJ,EAAQrK,aACpDmB,EAAAA,EAAAA,MAAA,MAAII,UAAU,WAAUF,SAAA,CAAC,SACdgJ,EAAQuC,kBA5FhCC,EA4F6DxC,EAAQuC,iBA5FzD,IAAIE,KAAKD,GAASE,sBA4F2D,QAE5EzL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUF,SAAEgJ,EAAQ2C,mBAClC7L,EAAAA,EAAAA,MAAA,MAAII,UAAU,WAAUF,SAAA,CAAC,SAAOgJ,EAAQ5H,oBACxCnB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BF,UACtCC,EAAAA,EAAAA,KAAA,SACI3C,MAAO0L,EAAQ3H,YAAc,GAC7BnB,UAAU,iDACVoB,YAAY,eACZhB,KAAK,SACLiB,SAAWC,GAAM0I,EAAsBlB,EAASxH,EAAES,OAAO3E,YAGjE2C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BF,UACtCC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,KAAK,QACL9B,QAASA,IACLqJ,EACI,IACOhB,EACHN,UAAWM,EAAQnK,UAEvB,GAEPmB,UAEDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACxC,UAAU,QAAQyC,MAAM,iBAkB3CK,IACGlD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,SACrBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAOE,QAAS,EAAEJ,SAAC,UAGjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,cACrBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,iBACrBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAOE,QAAS,EAAEJ,UAC5BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oDAAmDF,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBF,UApJ1DyJ,EAqJwChK,EAASuJ,EAAQ3H,aArJjD,IAAIuK,KAAK1K,cAAe2K,OAAOpM,EAASgK,kBA4J7CzG,IACG/C,EAAAA,EAAAA,KAAA,SAAAD,SACK8J,EACItL,QAAQsN,GAAgBlN,EAAckN,EAAYjN,QAASmK,EAAQnK,WACnEO,KAAI,CAACoL,EAAMuB,KACRjM,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAM,GAAEsL,EAAe,KAAKS,EAAY,OACxC9L,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAEJ,SAAEwK,EAAKwB,aACtB/L,EAAAA,EAAAA,KAAA,MAAAD,SAAS,OAAJwK,QAAI,IAAJA,OAAI,EAAJA,EAAMG,gBACX1K,EAAAA,EAAAA,KAAA,MAAAD,SAAS,OAAJwK,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,cACXhM,EAAAA,EAAAA,KAAA,MAAIG,QAAS,EAAGF,UAAU,MAAKF,UAC3BC,EAAAA,EAAAA,KAAA,SACI3C,MAAOkN,EAAKU,eAAiB,GAC7BhL,UAAU,qCACVoB,YAAY,eACZhB,KAAK,SACLiB,SAAWC,IAAMU,OA9JzC4J,EA8JwDtB,EA9J3CrI,EA8JiDX,EAAES,OAAO3E,WA7J3FyM,GAAuB1L,IACnB,MAAM6N,EAAe,IAAI7N,GACnBgE,EAAiB6J,EAAa5J,WAC/BC,GACG3D,EAAckN,EAAYjN,QAAS0D,EAAI1D,UACvCD,EAAckN,EAAYV,QAAS7I,EAAI6I,UACvCxM,EAAckN,EAAYT,OAAQ9I,EAAI8I,UAM9C,OAHwB,IAApBhJ,IACA6J,EAAa7J,GAAgB6I,cAAgBzL,EAAS0C,IAEnD+J,CAAY,IAbJhK,IAAC4J,EAAa3J,CA8JiE,QAXzD4J,SA1E2BT,GAvFtD7B,MACH+B,CAmLF,OAEN,ECwHX,EA/SuBxO,IAkBhB,IAlBiB,cACpBC,EAAgB,CAAEC,MAAO,SAAS,UAClCC,EAAY,CAAEC,SAAU,SAAS,mBACjCC,EAAqB,CAAEC,MAAO,GAAIC,MAAO,IAAI,QAC7CI,EAAO,SACPC,EAAQ,aACRJ,EAAe,CAAC,EAAC,gBACjBC,EAAkB,GAAE,mBACpBqM,EAAqB,GAAE,gBACvBjM,EAAe,mBACfH,EAAkB,sBAClBqM,EAAqB,iBACrBjM,EAAgB,eAChBC,EAAc,YACdC,EAAW,UACX+F,EAAS,WACTC,EAAU,kBACV/F,EAAmB,IACtBjB,EAEG,MAAOmP,EAAcC,IAAmBlE,EAAAA,EAAAA,UAAS,CAC7CmE,SAASC,EAAAA,EAAAA,MACTC,iBAAkBC,EAAAA,GAAkB,GAAGlP,MACvCmP,WAAY,GACZC,eAAgB,CAAEnP,MAAO,MAAOD,MAAO,OAG3CqP,EAAAA,EAAAA,YAAU,MACNvG,EAAAA,EAAAA,GAAU,CACNC,QAAU,8BACXC,MAAKC,IACJ,GAAIA,EAAKC,QAAS,OAAOzI,EAAe,oBAAoBQ,EAAAA,EAAAA,IAAQgI,EAAKA,MAAM,IAChFqG,OAAMpL,GAAKqL,QAAQC,MAAMtL,MAE5B4E,EAAAA,EAAAA,GAAU,CACNC,QAAU,oBACXC,MAAKC,IACJ,GAAIA,EAAKC,QAAS,OAAOzI,EAAe,sBAAsBQ,EAAAA,EAAAA,IAAQgI,EAAKA,MAAM,IAClFqG,OAAMpL,GAAKqL,QAAQC,MAAMtL,IAAG,GAChC,IAEH,MAeMwI,EAAuBA,CAAC7L,EAAgBC,KAE1CV,GAAmBW,IACf,MAEMC,GAFgBC,EAAAA,EAAAA,IAAQF,GAEYG,QAAOC,KAAMG,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAASV,EAAeuK,aAEhG,IAAI5J,EACJ,GAAIV,EACAU,EAAiBR,MACd,CACH,MAAMS,EAAUC,OAAOC,YACnBD,OAAOE,QAAQC,EAAAA,IAA6BC,KAAIC,IAAmB,IAAjBC,EAAKhC,GAAM+B,EACzD,OAAQC,GACJ,IAAK,UAAW,MAAO,CAACA,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuK,WAC7C,IAAK,YAAa,MAAO,CAACpJ,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBkK,kBAC/C,IAAK,kBAAmB,MAAO,CAAC/I,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBiK,UACrD,IAAK,aAAc,MAAO,CAAC9I,EAAK,GAEhC,IAAK,mBAAoB,MAAO,CAACA,EAAKnB,EAAemK,aACrD,IAAK,kBAAmB,MAAO,CAAChJ,EAAKnB,EAAeqF,aACpD,QAAS,MAAO,CAAClE,EAAKhC,GAC1B,KAGRwB,EAAiB,IAAIR,EAAqBS,EAC9C,CACA,OAAOD,CAAc,IAGzBiL,GAAsB1L,IAClB,MAEMC,GAFgBC,EAAAA,EAAAA,IAAQF,GAEYG,QAAOC,KAAMG,EAAAA,EAAAA,IAAe,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,QAASV,EAAeuK,aAEhG,IAAIqE,EACJ,GAAI3O,EACA2O,EAAmBzO,MAChB,CACH,MAAMS,EAAUZ,EAAe4K,cAAc3J,KAAI4N,GAAkBhO,OAAOC,YACtED,OAAOE,QAAQ+N,EAAAA,IAAgC7N,KAAImI,IAAmB,IAAjBjI,EAAKhC,GAAMiK,EAC5D,OAAQjI,GACJ,IAAK,UAAW,MAAO,CAACA,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuK,WAC7C,IAAK,WAAY,MAAO,CAACpJ,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBmK,aAC9C,IAAK,kBAAmB,MAAO,CAAChJ,EAAmB,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBiK,UAErD,IAAK,SAAU,MAAO,CAAC9I,EAAmB,OAAd0N,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAC5C,IAAK,UAAW,MAAO,CAAC5N,EAAmB,OAAd0N,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,WAC7C,IAAK,YAAa,MAAO,CAAC7N,EAAmB,OAAd0N,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,gBAC/C,IAAK,eAAgB,MAAO,CAAC9N,EAAmB,OAAd0N,QAAc,IAAdA,OAAc,EAAdA,EAAgBK,UAClD,IAAK,aAAc,MAAO,CAAC/N,EAAK0N,EAAexJ,aAC/C,QAAS,MAAO,CAAClE,EAAKhC,GAC1B,OAGRyP,EAAmB,IAAIzO,KAAwBS,EACnD,CACA,OAAOgO,CAAgB,GACzB,EAyCN,OACIjN,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAE7BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oFAAmFF,SAAA,EAC9FF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,sBAAoBvC,EAAgBiD,OAAO,QACjDT,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHC,KAAK,SACLC,QAAQ,WACRI,QAASA,IAAM7C,EAAiB,sBAAsB,GAAMkC,SAC/D,sBAGLC,EAAAA,EAAAA,KAACqN,EAAkB,CACf7P,gBAAiBA,EACjBC,mBAAoBA,EACpBoM,mBAAoBA,EACpBC,sBAAuBA,EACvBpI,gBAxCQA,CAACC,EAAOC,KAC5B,MAAMC,GAAaC,EAAAA,EAAAA,IAAcH,IAASI,EAAAA,EAAAA,IAAYJ,GAAS,EAC/D,OAAOE,EAAaD,EAAMC,EAAaD,CAAG,EAuC9BK,eAxDOA,CAACpB,EAASqB,KAC7BzE,GAAmBW,IACf,MAAM+D,EAAmB,IAAI/D,GAEvBgE,EAAiBD,EAAiBE,WACpCC,IAAO3D,EAAAA,EAAAA,IAAckC,EAAQjC,QAAS0D,EAAI1D,WAM9C,OAHwB,IAApBwD,IACAD,EAAiBC,GAAgBhB,YAAa5B,EAAAA,EAAAA,IAAS0C,IAEpDC,CAAgB,GACzB,EA6CU4H,qBAAsBA,QAI9BlK,EAAAA,EAAAA,MAACiD,EAAAA,EAAM,CACHC,KAAMrF,EAAQ4P,mBACdrK,QAASlF,EAAamF,YAAU,EAAAnD,SAAA,EAEhCF,EAAAA,EAAAA,MAACsD,EAAAA,EAAW,CAAClD,UAAU,oDAAmDF,SAAA,EACtEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sCACNC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAAC7B,QAAS3C,EAAYgC,UAACC,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACV,MAAM,gBAGnD7C,EAAAA,EAAAA,MAACwD,EAAAA,EAAa,CAAAtD,SAAA,EACVF,EAAAA,EAAAA,MAAA,QAAM0N,SAAUhM,IApJLiM,IAACC,EAAMC,EAAapD,EAAOqD,EAqJlCpM,EAAEqM,iBArJMH,EAuJJvB,EAAaE,QAvJHsB,EAwJVxB,EAAaI,iBAxJUhC,EAyJvB4B,EAAaM,WAAWrN,KAAKoL,GAASA,EAAKlN,QAzJbsQ,EA0J9BzB,EAAaO,eAAepP,OAzJhD8I,EAAAA,EAAAA,GAAU,CACNC,QAAU,2CACVyH,OAAQ,OACRC,SAAU,CAAE1B,QAASqB,EAAMnB,iBAAkBoB,EAAaK,YAAazD,EAAOqD,QAASA,GACvF7J,YAAWC,eACZsC,MAAKC,IACAA,EAAKA,KACLxI,EAAe,4BAA4BQ,EAAAA,EAAAA,IAAQgI,EAAKA,OAExDxI,EAAe,2BAA4B,GAC/C,IACD6O,OAAMpL,GAAKqL,QAAQC,MAAMtL,IA+IX,EACHxB,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAKF,SAAA,EAEhBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iDAAgDF,SAAA,EAC3DF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,QAAIC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,QACxB7E,EAAAA,EAAAA,KAAA,SACI3C,MAAO6O,EAAaE,QACpB/L,KAAK,OACLJ,UAAU,gBACVqB,SAAUC,GAAK4K,GAAgB/N,IAAG,IAAUA,EAAKgO,QAAS7K,EAAES,OAAO3E,UACnEmI,UAAQ,QAKhB3F,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iDAAgDF,SAAA,EAC3DF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,uBAAmBC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,QACvC7E,EAAAA,EAAAA,KAAA,UACI3C,MAAO6O,EAAaI,iBACpBrM,UAAU,gBACVqB,SAAUC,GAAK4K,GAAgB/N,IAAG,IAC3BA,EACHkO,iBAAkB/K,EAAES,OAAO3E,MAC3BoP,eAAgB,CAAEnP,MAAO,OAAQD,MAAO,QAE5CmI,UAAQ,EAAAzF,SAEPwM,EAAAA,GAAkBpN,KAAI,CAACkB,EAAM2N,KAC1BhO,EAAAA,EAAAA,KAAA,UAAQ3C,MAAOgD,EAAKhD,MAAM0C,SAAkBM,EAAK/C,OAAjB0Q,WAM5CnO,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCF,SAAA,EAClDF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,gBAAYC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,QAChC7E,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACHzH,MAAO6O,EAAaM,WACpBlL,SAAUC,GAAK4K,GAAgB/N,IAAG,IAAUA,EAAKoO,WAAYjL,MAC7DyD,iBAAkBC,SAASC,KAC3BC,QAAS,CACL/H,MACGkB,EAAAA,EAAAA,IAAQX,EAASsQ,kBAAkB9O,KACjCoL,IAAI,CAAQlN,MAAOkN,EAAK2D,WAAY5Q,MAAOiN,EAAK4D,kBAGzD9I,OAAQC,EAAAA,GACRC,cAAc,EACd6I,SAAS,EACTC,mBAAmB,QAK3BxO,EAAAA,EAAAA,MAAA,OAAKI,UAAU,wCAAuCF,SAAA,EAClDF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,oBAAgBC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,QACpC7E,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACHzH,MAAO6O,EAAaO,eACpBnL,SAAUC,GAAK4K,GAAgB/N,IAAG,IAAUA,EAAKqO,eAAgBlL,MACjEyD,iBAAkBC,SAASC,KAC3BC,QAAS,CACL,CAAE9H,MAAO,GAAIC,MAAO,WACjBgB,EAAAA,EAAAA,IAAQX,EAAS2Q,oBAAoB/P,QACpCgQ,IAAO9P,SAAAA,EAAAA,IACH8P,EAAIC,MA3HxBC,EA4HmCvC,EAAaI,iBA3H7D,CACH,CACIhP,MAAO,kBACPD,MAAO,GAEX,CACIC,MAAO,eACPD,MAAO,GAEX,CACIC,MAAO,aACPD,MAAO,IAEbkH,MAAKwE,IAAWpK,EAAAA,EAAAA,IAAcoK,EAAQ1L,MAAOoR,KAASnR,QAdpCmR,KA8HY,IAAEtP,KACGwO,IAAO,CAAQtQ,MAAOsQ,EAAQe,eAAgBpR,MAAOqQ,EAAQgB,kBAGtEtJ,OAAQC,EAAAA,GACRC,cAAc,EACd8I,mBAAmB,WAM/BrO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DF,UACrEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASF,UACpBC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHC,KAAK,SACLC,QAAQ,WACRwF,WAAW9F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAM,IAAIhG,SACzB,mBAMbC,EAAAA,EAAAA,KAAC4O,EAAmB,CAChBhH,WAAWtJ,EAAAA,EAAAA,IAAQX,EAASkR,0BAC5BrR,gBAAiBA,EACjBqK,SAAUkC,QAIlB/J,EAAAA,EAAAA,KAAC4D,EAAAA,EAAa,CAAA7D,UACVC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,KAAK,SAASK,QAAS3C,EAAYgC,SAAC,iBAGrD,E,eCvSX,MAAM3C,EAAqB,CAAEC,MAAO,GAAIC,MAAO,IACzCwR,EAAqB,CACvBC,eAAgB3R,EAChBqI,aAAcrI,EACdyI,cAAezI,EACf2H,YAAa3H,EACbsQ,YAAatQ,EACboP,WAAYpP,EACZiL,YAAa,GACbzD,qBAAqB,EACrB5B,oBAAoB,EACpBsK,oBAAoB,GAqSxB,EAlS4BvQ,IAAqE,IAApE,UAAE+G,EAAS,WAAEC,EAAU,UAAEiL,EAAS,WAAEC,EAAU,aAAEC,GAAcnS,EACvF,MAAMoS,GAAWC,EAAAA,EAAAA,MAEXC,GADWC,EAAAA,EAAAA,MACWC,MACtBrS,EAAY,CAAEC,SAAU,SACxBH,EAAgB,CAAEC,MAAO,UAExBM,EAAcsG,IAAmBoE,EAAAA,EAAAA,UAASuH,EAAAA,KAC1ChS,EAAiBC,IAAsBwK,EAAAA,EAAAA,UAAS,KAChD4B,EAAoBC,IAAyB7B,EAAAA,EAAAA,UAAS,KACtDjK,EAAmByR,IAA4BxH,EAAAA,EAAAA,UAAS,KAExDtK,EAAU+R,IAAezH,EAAAA,EAAAA,UAAS,CACrC0H,aAAc,GACdjK,SAAU,GACVqB,2BAA4B,GAC5B8H,yBAA0B,GAC1BrO,yBAA0B,GAC1ByN,iBAAkB,GAClBK,mBAAoB,MAGjB5Q,EAASkS,IAAc3H,EAAAA,EAAAA,UAAS6G,IAEvCpC,EAAAA,EAAAA,YAAU,KACYmD,WACd,IACI,MACIC,EACAC,SACMC,QAAQC,IAAI,EAClB9J,EAAAA,EAAAA,GAAU,CAAEC,QAAU,0BACtBD,EAAAA,EAAAA,GAAU,CAAEC,QAAU,uBAGpBuJ,GAAerR,EAAAA,EAAAA,IAAQwR,EAAqBvJ,QAAUuJ,EAAqBxJ,KAAO,IAAI4J,MACxF,CAAC9G,EAAGC,IAAM8G,OAAQ,OAAD/G,QAAC,IAADA,OAAC,EAADA,EAAGgH,YAAYC,cAAe,OAADhH,QAAC,IAADA,OAAC,EAADA,EAAG+G,cAE/C1K,GAAWpH,EAAAA,EAAAA,IAAQyR,EAAgBxJ,QAAUwJ,EAAgBzJ,KAAO,IAAI4J,MAC1E,CAAC9G,EAAGC,IAAM8G,OAAQ,OAAD/G,QAAC,IAADA,OAAC,EAADA,EAAGxD,cAAcyK,cAAe,OAADhH,QAAC,IAADA,OAAC,EAADA,EAAGzD,gBAGvD9H,EAAe,eAAgB6R,GAC/B7R,EAAe,WAAY4H,EAE/B,CAAE,MAAOnE,GACLqL,QAAQC,MAAM,uBAAwBtL,EAC1C,GAGJ+O,EAAW,GACZ,KAEH5D,EAAAA,EAAAA,YAAU,MACD/N,EAAAA,EAAAA,IAAcpB,EAAaiH,kBAAmB,IAAOjH,EAAagT,gBAAkBzO,EAAAA,EAAAA,IAAcvE,EAAagT,gBAKpHpK,EAAAA,EAAAA,GAAU,CACNC,QAAU,2DAA0D7I,EAAagT,kBAClFlK,MAAKC,IACAA,EAAKC,SACLzI,EAAe,4BAA4BQ,EAAAA,EAAAA,IAAQgI,EAAKA,MAC5D,IACDqG,OAAMpL,GAAKqL,QAAQC,MAAMtL,KAVxBzD,EAAe,2BAA4B,GAUhB,GAChC,CAACP,EAAagT,cAAehT,EAAaiH,qBAE7CkI,EAAAA,EAAAA,YAAU,MAED5K,EAAAA,EAAAA,IAAcvE,EAAaiT,cACxB1O,EAAAA,EAAAA,IAAcvE,EAAaiH,sBAE1B7F,EAAAA,EAAAA,IAAcpB,EAAaiH,kBAAmB,KAC3C7F,EAAAA,EAAAA,IAAcpB,EAAaiH,kBAAmB,OAM1D2B,EAAAA,EAAAA,GAAU,CACNC,QAAU,+CAA8C7I,EAAaiT,eACtEnK,MAAKC,IACJ,GAAIA,EAAKC,QAAS,CACd,MAAMkK,GAAUnS,EAAAA,EAAAA,IAAQgI,EAAKA,MAAMnH,KAAIuR,IAAI,IACpCA,EACH1P,iBAAkB0P,EAAKC,kBACvBrF,iBAAkBoF,EAAKC,kBACvBxP,gBAAiBuP,EAAKE,gBACtBC,eAAejR,EAAAA,EAAAA,IAAe,OAAJ8Q,QAAI,IAAJA,OAAI,EAAJA,EAAMjR,oBAAqBiR,EAAKE,qBAE9DnT,EAAmBgT,EACvB,KACD9D,OAAMpL,GAAKqL,QAAQC,MAAMtL,MAE5B4E,EAAAA,EAAAA,GAAU,CACNC,QAAU,2DAA0D7I,EAAaiT,eAClFnK,MAAKC,IACAA,EAAKC,SACLuD,GAAsBxL,EAAAA,EAAAA,IAAQgI,EAAKA,MACvC,IACDqG,OAAMpL,GAAKqL,QAAQC,MAAMtL,KAAG,GAEhC,CAAChE,EAAaiT,WAAYjT,EAAaiH,qBAE1CkI,EAAAA,EAAAA,YAAU,KACN,KAAK5K,EAAAA,EAAAA,IAAcvE,EAAaiT,YAAa,OAAOf,EAAyB,KAE7EtJ,EAAAA,EAAAA,GAAU,CACNC,QAAU,+CAA8C7I,EAAaiT,eACtEnK,MAAKC,IACAA,EAAKC,SACLkJ,GAAyBnR,EAAAA,EAAAA,IAAQgI,EAAKA,MAC1C,IACDqG,OAAMpL,GAAKqL,QAAQC,MAAMtL,IAAG,GAChC,CAAChE,EAAaiT,cAEjB9D,EAAAA,EAAAA,YAAU,MACFoE,EAAAA,EAAAA,IAAczB,IACdxL,EACI9E,OAAOC,YACHD,OAAOE,QAAQuQ,EAAAA,IAAgCrQ,KAAIC,IAAmB,IAAD2R,EAAA,IAAhB1R,EAAKhC,GAAM+B,EAC5D,MAAY,iBAARC,EAA+B,CAACA,EAAKgQ,EAAWhQ,IAAOgN,EAAAA,EAAAA,IAAUgD,EAAWhQ,IAAQhC,GACjF,CAACgC,EAAoB,QAAjB0R,EAAE1B,EAAWhQ,UAAI,IAAA0R,EAAAA,EAAI1T,EAAM,KAItD,GACD,CAACgS,IAEJ,MAAMvR,EAAiB,WAA2B,IAA1BuB,EAAGqK,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIrM,EAAKqM,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACtCgG,GAAYtR,IAAG,IAAUA,EAAK,CAACiB,GAAMhC,KACzC,EAEMQ,EAAmB,WAA2B,IAA1BwB,EAAGqK,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIrM,EAAKqM,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACxCkG,GAAWxR,IAAG,IAAUA,EAAK,CAACiB,GAAMhC,KACxC,EAEMU,EAAcA,KAChBF,EAAiB,uBAAuB,GACxCA,EAAiB,sBAAsB,GACvCA,EAAiB,sBAAsB,EAAM,EAa3CmG,GAAkBC,EAAAA,EAAAA,UAAQ,KACrB3F,EAAAA,EAAAA,IAAQd,GAAiBmF,QAC5B,CAACC,EAAK/B,KAAYgC,EAAAA,EAAAA,IAASD,EAAK/B,EAAQO,aAAa,IACrD9C,EAAAA,EAAAA,IAAQN,GAAmB2E,QAC3B,CAACC,EAAKsB,KAAQrB,EAAAA,EAAAA,IAASD,EAAQ,OAAHsB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,iBAAiB,IAEvD,CAAC3G,EAAiBQ,IA6BrB,OACIgC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,EAEnCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAG7BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,qCAAoCF,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,SAAC,gCAEhCC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHC,KAAK,SACLC,QAAQ,YACRL,UAAU,OACVS,QAASA,IAAMyO,EAAS,6BAA8B,CAAEI,MAAOF,IAActP,SAChF,aAILC,EAAAA,EAAAA,KAACgR,EAAsB,CACnBhU,cAAeA,EACfE,UAAWA,EACXK,aAAcA,EACdC,gBAAiBA,EACjBE,QAASA,EACTC,SAAUA,EACVkG,gBAAiBA,EACjBhG,iBAAkBA,EAClBC,eAAgBA,EAChBC,YAAaA,EACb+F,UAAWA,EACXC,WAAYA,EACZ/F,kBAAmBA,KAItBW,EAAAA,EAAAA,IAAcpB,EAAaiH,kBAAmB,KAC3CxE,EAAAA,EAAAA,KAACiR,EAAmB,CAChBjU,cAAeA,EACfE,UAAWA,EACXK,aAAcA,EACdG,QAASA,EACTC,SAAUA,EACVkG,gBAAiBA,EACjBhG,iBAAkBA,EAClBC,eAAgBA,EAChBC,YAAaA,EACbP,gBAAiBA,EACjBC,mBAAoBA,EACpBO,kBAAmBA,KAK1BW,EAAAA,EAAAA,IAAcpB,EAAaiH,kBAAmB,KAC3CxE,EAAAA,EAAAA,KAACkR,EAAc,CACXlU,cAAeA,EACfE,UAAWA,EACXQ,QAASA,EACTC,SAAUA,EACVJ,aAAcA,EACdC,gBAAiBA,EACjBqM,mBAAoBA,EACpBhG,gBAAiBA,EACjBpG,mBAAoBA,EACpBqM,sBAAuBA,EACvBjM,iBAAkBA,EAClBC,eAAgBA,EAChBC,YAAaA,EACb+F,UAAWA,EACXC,WAAYA,EACZ/F,kBAAmBA,IAI1BA,EAAkByC,OAAS,IACxBT,EAAAA,EAAAA,KAACmR,EAAAA,EAAc,CAACC,cAAepT,QAKvCgC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAEdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCF,UAC3CC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACHE,QAAQ,YACRwF,WAAW9F,EAAAA,EAAAA,KAACqR,EAAAA,EAAI,IAChB9Q,WACKuB,EAAAA,EAAAA,IAAcvE,EAAaiT,YAGhC9P,QAtHA4Q,KAChB,GAAItN,EAAkBzG,EAAa8G,cAAe,OAAO4B,EAAAA,GAAMC,KAAK,8BAEpEC,EAAAA,EAAAA,GAAU,CACNC,QAAU,mCACVyH,OAAQ,OACRC,SAAU,CACN0C,WAAYjT,EAAaiT,WACzBe,WAAYhU,EAAamH,mBACzB8M,aAAcjU,EAAaiU,aAC3BhN,kBAAmBjH,EAAaiH,kBAChCiN,cAAcnT,EAAAA,EAAAA,IAAQd,GACtBkU,gBAAgBpT,EAAAA,EAAAA,IAAQuL,GACxB8H,aAAcpU,EAAagT,eAE/BzM,YAAWC,eACZsC,MAAKC,IACAA,EAAKC,SACLN,EAAAA,GAAMM,QAAQD,EAAKsL,SAnC3B/N,EAAgB2L,EAAAA,IAChB/R,EAAmB,IACnBqM,EAAsB,IACtB8F,EAAWd,GACXhR,EAAe,6BAA8B,IAC7CA,EAAe,2BAA4B,IAC3CA,EAAe,2BAA4B,IA+BnCqR,EAAS,6BAA8B,CAAEI,MAAOF,KAEhDpJ,EAAAA,GAAM4G,MAAMvG,EAAKsL,QACrB,IACDjF,OAAMpL,GAAKqL,QAAQC,MAAMtL,IAAG,EA8FMxB,SACxB,eAKV,C,yGC3TX,MAAM8R,GAAcC,EAAAA,EAAAA,MAAiBC,KAExBvC,EAAiC,CAC1CgB,WAAY,GACZwB,QAAS,GACTC,wBAAyB,GACzBC,YAAa,GACbxN,mBAAoB,GAEpB8M,cAAcnF,EAAAA,EAAAA,MACd7H,kBAAmB,EACnB+L,cAAe,GACf5L,mBAAoB,SACpBN,cAAe,EACf8N,aAAc,GACd1N,kBAAmB,SACnB2N,aAAc,EACdC,QAAS,GACTC,OAAQ,EACRC,WAAY,EACZC,gBAAiB,EACjBC,iBAAkB,GAElBC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,UAAW,GAEXC,YAAYhR,EAAAA,EAAAA,IAAyB,OAAX+P,QAAW,IAAXA,OAAW,EAAXA,EAAakB,QAAqB,OAAXlB,QAAW,IAAXA,OAAW,EAAXA,EAAakB,OAAS,GACvEC,YAAYlR,EAAAA,EAAAA,IAAyB,OAAX+P,QAAW,IAAXA,OAAW,EAAXA,EAAakB,QAAqB,OAAXlB,QAAW,IAAXA,OAAW,EAAXA,EAAakB,OAAS,GACvEE,WAAY,GACZC,UAAW,IAGFhU,EAA8B,CACvCiU,QAAS,GAETF,WAAY,GACZzC,WAAY,GACZe,WAAY,GACZC,aAAc,GACdhN,kBAAmB,GACnBmN,aAAc,GAGd/S,QAAS,GACT8M,gBAAiB,GACjBhN,UAAW,GACXwC,YAAa,EACbkS,UAAW,EACXhS,WAAY,EAGZJ,iBAAkB,GAClBsK,iBAAkB,GAClBnK,gBAAiB,EACjB0P,cAAe,GAGN7D,EAAiC,CAE1CmG,QAAS,GACT3C,WAAY,GACZe,WAAY,GACZC,aAAc,GACdhN,kBAAmB,GACnB6O,gBAAiB,GACjBJ,WAAY,GAGZrU,QAAS,GACT8M,gBAAiB,GACjBN,OAAQ,GACRD,QAAS,GACTY,UAAW,GACXd,cAAe,EAGfP,aAAc,EACdsB,WAAY,GAGH1H,EAAe,CACxB,CACIjH,MAAO,EACPC,MAAO,4BAEX,CACID,MAAO,EACPC,MAAO,qBAEX,CACID,MAAO,EACPC,MAAO,eAIFiP,EAAoB,CAC7B,CACIjP,MAAO,kBACPD,MAAO,GAEX,CACIC,MAAO,kBACPD,MAAO,GAEX,CACIC,MAAO,aACPD,MAAO,IAIFiW,EAAgB,CACzB,CACIhW,MAAO,MACPD,MAAO,GAEX,CACIC,MAAO,UACPD,MAAO,GAEX,CACIC,MAAO,YACPD,MAAO,GAEX,CACIC,MAAO,WACPD,MAAO,IAIFkW,EAAmB,CAC5B,CACIjW,MAAO,SACPD,MAAO,IAEX,CACIC,MAAO,MACPD,MAAO,OAEX,CACIC,MAAO,OACPD,MAAO,QAEX,CACIC,MAAO,OACPD,MAAO,QAEX,CACIC,MAAO,YACPD,MAAO,aAEX,CACIC,MAAO,MACPD,MAAO,OAEX,CACIC,MAAO,kBACPD,MAAO,mBAEX,CACIC,MAAO,oBACPD,MAAO,qBAEX,CACIC,MAAO,mBACPD,MAAO,oBAEX,CACIC,MAAO,MACPD,MAAO,OAEX,CACIC,MAAO,SACPD,MAAO,U","sources":["Pages/Receipts/ReceiptMaster/salesReceipt.jsx","Pages/Receipts/ReceiptMaster/chooseReceipt.jsx","Pages/Receipts/ReceiptMaster/displayStockJournal.jsx","Pages/Receipts/ReceiptMaster/listCostingDetail.jsx","Pages/Receipts/ReceiptMaster/expencesReceipt.jsx","Pages/Receipts/ReceiptMaster/addReference.jsx","Pages/Receipts/ReceiptMaster/variable.js"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, LocalDate, NumberFormat, onlynum, RoundNumber, stringCompare, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Delete } from \"@mui/icons-material\";\r\nimport FilterableTable, { ButtonActions, createCol } from \"../../../Components/filterableTable2\";\r\nimport { receiptBillInfoInitialValue } from \"./variable\";\r\n\r\n\r\n\r\nconst SalesInvoiceReceipt = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    setReceiptBillInfo,\r\n    filters,\r\n    baseData,\r\n    setreceiptValue,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    receiptAdjesments= []\r\n}) => {\r\n\r\n    const onClickSalesInvoice = (invoiceDetails, deleteOption) => {\r\n        setReceiptBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !(\r\n                stringCompare(o?.bill_name, invoiceDetails.bill_name) &&\r\n                isEqualNumber(o?.bill_id, invoiceDetails?.bill_id)\r\n            ));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(receiptBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.Do_Id];\r\n                            case 'bill_name': return [key, invoiceDetails?.Do_Inv_No];\r\n                            case 'bill_amount': return [key, toNumber(invoiceDetails?.Total_Invoice_value)];\r\n                            case 'Debit_Amo': return [key, 0];\r\n                            case 'Credit_Amo': return [key, 0];\r\n                            case 'JournalBillType': return [key, 'SALES INVOICE'];\r\n\r\n                            case 'SalesInvoiceDate': return [key, invoiceDetails.Do_Date];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.totalReference];\r\n                            case 'PendingAmount': return [key, Subraction(\r\n                                invoiceDetails?.Total_Invoice_value,\r\n                                invoiceDetails.totalReference\r\n                            )];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setReceiptBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => (\r\n                    stringCompare(invoice.bill_name, inv.bill_name) &&\r\n                    isEqualNumber(invoice.bill_id, inv.bill_id)\r\n                )\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Credit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    disabled={toArray(baseData.salesInvoiceSearchResult).length === 0}\r\n                                    onClick={() => updateFilterData('selectSalesInvoice', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Sales InvoiceNo', 'Date', 'Invoice Value',\r\n                                'Paid Amount',\r\n                                // 'Pending Amount',\r\n                                'Payment Amount', 'Action'].map(\r\n                                    (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                                )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {receiptBillInfo.map(\r\n                            (invoice, invoiceInd) => (\r\n                                <tr key={invoiceInd}>\r\n                                    <td>{invoiceInd + 1}</td>\r\n                                    <td>{invoice?.bill_name}</td>\r\n                                    <td>{LocalDate(invoice?.SalesInvoiceDate)}</td>\r\n                                    <td>{NumberFormat(invoice?.bill_amount)}</td>\r\n                                    <td>{invoice?.TotalPaidAmount}</td>\r\n                                    {/* <td>{Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount)}</td> */}\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={invoice.Credit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(invoice, validated);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onClickSalesInvoice(invoice, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                        <tr>\r\n                            <td colSpan={3} className=\"text-end fw-bold\">Total</td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {receiptBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.bill_amount), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {receiptBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={filters.selectSalesInvoice}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Sales Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <table className=\"table table-bordered fa-13\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Pending Invoices</th>\r\n                                <th colSpan={6} className=\"text-end\">\r\n\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                {['Sno', 'Sales InvoiceNo', 'Source', 'Date', 'Invoice Value', 'Paid Amount', 'Pending Amount', '#'].map(\r\n                                    (col, colInd) => <td key={colInd}>{col}</td>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {baseData.salesInvoiceSearchResult.map(\r\n                                (invoice, invoiceInd) => (\r\n                                    <tr key={invoiceInd}>\r\n                                        <td>{invoiceInd + 1}</td>\r\n                                        <td>{invoice?.Do_Inv_No}</td>\r\n                                        <td>{invoice?.dataSource}</td>\r\n                                        <td>{LocalDate(invoice?.Do_Date)}</td>\r\n                                        <td>{invoice?.Total_Invoice_value}</td>\r\n                                        <td>{invoice?.Paid_Amount}</td>\r\n                                        <td>{Subraction(invoice?.Total_Invoice_value, invoice?.totalReference)}</td>\r\n                                        <td>\r\n                                            {(() => {\r\n                                                const isChecked = receiptBillInfo.findIndex(o =>\r\n                                                    stringCompare(o?.bill_name, invoice.Do_Inv_No)\r\n                                                ) !== -1;\r\n\r\n                                                return (\r\n                                                    <div>\r\n                                                        <input\r\n                                                            className=\"form-check-input shadow-none pointer\"\r\n                                                            style={{ padding: '0.7em' }}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={isChecked}\r\n                                                            onChange={() => {\r\n                                                                if (isChecked) onClickSalesInvoice({\r\n                                                                    ...invoice, \r\n                                                                    bill_name: invoice.Do_Inv_No,\r\n                                                                    bill_id: invoice.Do_Id\r\n                                                                }, true)\r\n                                                                else onClickSalesInvoice({\r\n                                                                    ...invoice, \r\n                                                                    bill_name: invoice.Do_Inv_No,\r\n                                                                    bill_id: invoice.Do_Id\r\n                                                                })\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                )\r\n                                            })()}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                            <tr>\r\n                                <td colSpan={4} rowSpan={3}></td>\r\n                                <td>Total Amount: </td>\r\n                                <td colSpan={2} className=\"fw-bold fa-15\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => Addition(acc, invoice?.Total_Invoice_value), 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Selected Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-primary fw-bold\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isChecked = receiptBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.bill_id, invoice.Do_Id)\r\n                                            ) !== -1;\r\n\r\n                                            if (isChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pending Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-danger\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isNotChecked = receiptBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.bill_id, invoice.Do_Id)\r\n                                            ) === -1;\r\n\r\n                                            if (isNotChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesInvoiceReceipt;","import { Button, Dialog, DialogContent, DialogTitle, DialogActions, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, NumberFormat, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { receiptTypes } from \"./variable\";\r\nimport { Close, Search, Done } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport { useMemo } from \"react\";\r\n\r\nconst ChooseReceiptComponent = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    filters,\r\n    baseData,\r\n    setReceiptValue,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff,\r\n    receiptAdjesments= []\r\n}) => {\r\n\r\n    const searchReceipts = (debitAccount, creditAccount, receiptType) => {\r\n\r\n        if (!checkIsNumber(receiptType)) return toast.warn('Select Bill Type')\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/search?debit_ledger=${debitAccount}&credit_ledger=${creditAccount}&receipt_bill_type=${receiptType}`,\r\n            loadingOn,\r\n            loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('receiptInvoiceSearchResult', toArray(data.data))\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSelectReceipt = (invoiceDetails) => {\r\n        setReceiptValue(pre => {\r\n            return Object.fromEntries(\r\n                Object.entries(pre).map(([key, value]) => [key, invoiceDetails[key] || value])\r\n            )\r\n        })\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return toArray(receiptBillInfo).reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n        ) + toArray(receiptAdjesments).reduce(\r\n            (acc, ref) => Addition(acc, ref?.adjesmentValue), 0\r\n        )\r\n    }, [receiptBillInfo, receiptAdjesments]);\r\n\r\n    const PendingAgainstRef = useMemo(() => {\r\n        return Subraction(receiptValue.credit_amount, TotalAgainstRef)\r\n    }, [TotalAgainstRef, receiptValue.credit_amount])\r\n\r\n    return (\r\n        <>\r\n            {/* choose Receipt */}\r\n            <table className=\"table table-bordered fa-13\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Receipt Details</th>\r\n                        <th colSpan={5} className=\"text-end\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => updateFilterData('selectReceiptDialog', true)}\r\n                            >Choose Receipt</Button>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Receipt Type</th>\r\n                        <td style={cellStyle}>\r\n                            {receiptTypes.find(\r\n                                type => isEqualNumber(type.value, receiptValue.receipt_bill_type)\r\n                            ).label}\r\n                        </td>\r\n\r\n                        <th className=\"text-muted\">Debit Account</th>\r\n                        <td style={cellStyle}>{receiptValue.debit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Receipt Value</th>\r\n                        <td style={cellStyle} className=\"text-primary fw-bold\">{NumberFormat(receiptValue.credit_amount)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Receipt No</th>\r\n                        <td style={cellStyle}>{receiptValue.receipt_invoice_no}</td>\r\n\r\n                        <th className=\"text-muted\">Credit Account</th>\r\n                        <td style={cellStyle}>{receiptValue.credit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Against balance</th>\r\n                        <td style={cellStyle} className=\"text-danger fw-bold\">{NumberFormat(PendingAgainstRef)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <Dialog\r\n                open={filters.selectReceiptDialog}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Choose Receipt </span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n\r\n                        {/* Receipt type */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Receipt Type<RequiredStar /></label>\r\n                            <Select\r\n                                value={filters.receiptType}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('receiptType', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...receiptTypes\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select payment type\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* debit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Debit Account</label>\r\n                            <Select\r\n                                value={filters.debitAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('debitAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Debit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* credit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Credit Account</label>\r\n                            <Select\r\n                                value={filters.creditAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('creditAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Credit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    startIcon={<Search />}\r\n                                    onClick={() => searchReceipts(\r\n                                        filters.debitAccount.value,\r\n                                        filters.creditAccount.value,\r\n                                        filters.receiptType.value,\r\n                                    )}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FilterableTable\r\n                        title=\"Receipts List\"\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={13}\r\n                        bodyFontSizePx={12}\r\n                        tableMaxHeight={450}\r\n                        dataArray={baseData.receiptInvoiceSearchResult}\r\n                        columns={[\r\n                            createCol('receipt_invoice_no', 'string', 'InvoiceNo'),\r\n                            createCol('receipt_date', 'date', 'Date'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Bill Type',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    receiptTypes.find(type => isEqualNumber(type.value, row?.receipt_bill_type)).label\r\n                                )\r\n                            },\r\n                            createCol('debit_ledger_name', 'string', 'Debit Acc'),\r\n                            createCol('credit_ledger_name', 'string', 'Credit Acc'),\r\n                            createCol('credit_amount', 'number', 'Amount'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Pending Ref Amount',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => Subraction(row?.credit_amount, row?.TotalReferenceAdded)\r\n                            },\r\n                            createCol('credit_amount', 'number', ''),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Action',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            onSelectReceipt(row);\r\n                                            closeDialog();\r\n                                            updateFilterData('receiptType', initialSelectValue);\r\n                                            updateFilterData('debitAccount', initialSelectValue);\r\n                                            updateFilterData('creditAccount', initialSelectValue);\r\n                                        }}\r\n                                    ><Done className=\"fa-20\" /></IconButton>\r\n                                )\r\n                            }\r\n                        ]}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChooseReceiptComponent;","import { useState } from \"react\"\r\nimport { isEqualNumber, LocalDate } from \"../../../Components/functions\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Done, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\n\r\n\r\n\r\nconst DisplayStockJournal = ({\r\n    arrayData = [],\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptBillInfo = [],\r\n    onSelect\r\n}) => {\r\n\r\n    const TableRows = ({ row = {}, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const isProcessing = row?.BillType === 'PROCESSING';\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{sno}</td>\r\n                    <td>{row?.journalVoucherNo || '-'}</td>\r\n                    <td>{row?.journalDate ? LocalDate(row?.journalDate) : '-'}</td>\r\n                    <td>{row?.BillType || '-'}</td>\r\n                    <td>{row?.voucherTypeGet || '-'}</td>\r\n                    <td>{row?.narration || '-'}</td>\r\n                    <td>{row?.paidAmount}</td>\r\n                    <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            {(() => {\r\n                                const isChecked = receiptBillInfo.findIndex(o =>\r\n                                    isEqualNumber(o?.bill_id, row.journalId)\r\n                                ) !== -1;\r\n\r\n                                return (\r\n                                    <div>\r\n                                        <input\r\n                                            className=\"form-check-input shadow-none pointer\"\r\n                                            style={{ padding: '0.7em' }}\r\n                                            type=\"checkbox\"\r\n                                            checked={isChecked}\r\n                                            onChange={() => {\r\n                                                if (isChecked) onSelect(row, true)\r\n                                                else onSelect(row)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })()}\r\n\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"mx-1\"\r\n                                onClick={() => setOpen(pre => !pre)}\r\n                            >\r\n                                {open ? <KeyboardArrowUp className=\"fa-20\" /> : <KeyboardArrowDown className=\"fa-20\" />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <tr>\r\n                        <td colSpan={8} className=\"p-4\">\r\n\r\n                            <div className=\"row \">\r\n\r\n                                {isProcessing && (\r\n                                    <div className={\"col-md-6 p-1\"}>\r\n                                        <FilterableTable\r\n                                            title=\"Source\"\r\n                                            headerFontSizePx={11}\r\n                                            bodyFontSizePx={11}\r\n                                            EnableSerialNumber\r\n                                            dataArray={row?.SourceDetails}\r\n                                            columns={[\r\n                                                createCol('Product_Name', 'string', 'Item'),\r\n                                                createCol('Godown_Name', 'string', 'From'),\r\n                                                createCol('Sour_Qty', 'number', 'QTY'),\r\n                                            ]}\r\n                                            disablePagination\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className={isProcessing ? \"col-md-6 p-1\" : 'col-12 p-1'}>\r\n                                    <FilterableTable\r\n                                        title={isProcessing ? \"Destination\" : 'Items'}\r\n                                        headerFontSizePx={11}\r\n                                        bodyFontSizePx={11}\r\n                                        EnableSerialNumber\r\n                                        dataArray={row?.Products_List}\r\n                                        columns={[\r\n                                            createCol('productNameGet', 'string', 'Item'),\r\n                                            ...(!isProcessing ? [\r\n                                                createCol('fromLocationGet', 'string', 'From'),\r\n                                            ] : []),\r\n                                            createCol('toLocationGet', 'string', 'To'),\r\n                                            createCol('quantity', 'number', 'QTY'),\r\n                                            createCol('expence_value', 'number', 'Expence'),\r\n                                        ]}\r\n                                        disablePagination\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" colSpan={3} >Stock Journal</th>\r\n                            <th colSpan={5} className=\"text-end\"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Voucher', 'Narration', 'Paid Amount', '#'].map(\r\n                                (col, colInd) => <td key={colInd}>{col}</td>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {arrayData.map((journal, jouInd) => <TableRows row={journal} sno={jouInd + 1} key={jouInd} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayStockJournal","import { Delete, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Local utility functions\r\nconst toNumber = (val) => Number(val) || 0;\r\n\r\nconst add = (a, b) => toNumber(a) + toNumber(b);\r\nconst subtract = (a, b) => toNumber(a) - toNumber(b);\r\nconst multiply = (a, b) => toNumber(a) * toNumber(b);\r\nconst divide = (a, b) => b !== 0 ? toNumber(a) / toNumber(b) : 0;\r\nconst roundNumber = (num, precision = 2) => Number(toNumber(num).toFixed(precision));\r\nconst isEqualNumber = (a, b) => toNumber(a) === toNumber(b);\r\nconst numberFormat = (num) => new Intl.NumberFormat().format(toNumber(num));\r\nconst localDate = (dateStr) => new Date(dateStr).toLocaleDateString();\r\n\r\nconst ListCostingDetails = ({\r\n    receiptBillInfo = [],\r\n    receiptCostingInfo = [],\r\n    setReceiptBillInfo,\r\n    setReceiptCostingInfo,\r\n    onInputValidate,\r\n    onSelectStockJournal,\r\n    journalAmountOnChange,\r\n}) => {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const onChangeAmount = (itemDetails, amount) => {\r\n        setReceiptCostingInfo((pre) => {\r\n            const selectedItem = [...pre];\r\n            const indexOfInvoice = selectedItem.findIndex(\r\n                (inv) =>\r\n                    isEqualNumber(itemDetails.bill_id, inv.bill_id) &&\r\n                    isEqualNumber(itemDetails.item_id, inv.item_id) &&\r\n                    isEqualNumber(itemDetails.arr_id, inv.arr_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedItem[indexOfInvoice].expence_value = toNumber(amount);\r\n            }\r\n            return selectedItem;\r\n        });\r\n    };\r\n\r\n    // Weighted average distribution when user enters journal amount\r\n    const onChangeJournalAmount = (journal, amount = 0) => {\r\n        const totalAmount = toNumber(amount);\r\n\r\n        setReceiptBillInfo((pre) => {\r\n            const updated = [...pre];\r\n            const index = updated.findIndex((b) => isEqualNumber(b.bill_id, journal.bill_id));\r\n            if (index !== -1) updated[index].Credit_Amo = totalAmount;\r\n            return updated;\r\n        });\r\n\r\n        setReceiptCostingInfo((prev) => {\r\n            const items = prev.filter((item) => isEqualNumber(item.bill_id, journal.bill_id));\r\n\r\n            // const shouldDistribute = items.every((item) => !item.expence_value || Number(item.expence_value) === 0);\r\n\r\n            // if (!shouldDistribute || items.length === 0) return prev;\r\n\r\n            const totalQty = items.reduce((sum, item) => add(sum, item.itemQuantity), 0);\r\n            const unitCost = divide(totalAmount, totalQty);\r\n\r\n            let distributed = 0;\r\n\r\n            const updatedItems = items.map((item, index) => {\r\n                const weighted = roundNumber(multiply(item.itemQuantity, unitCost));\r\n                if (index < items.length - 1) {\r\n                    distributed = add(distributed, weighted);\r\n                    return {\r\n                        ...item,\r\n                        expence_value: weighted,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ...item,\r\n                        expence_value: roundNumber(subtract(totalAmount, distributed)),\r\n                    };\r\n                }\r\n            });\r\n\r\n            return prev.map((item) => {\r\n                if (isEqualNumber(item.bill_id, journal.bill_id)) {\r\n                    const updated = updatedItems.find((i) => (\r\n                        isEqualNumber(i.item_id, item.item_id) &&\r\n                        isEqualNumber(i.arr_id, item.arr_id)\r\n                    ));\r\n                    return updated || item;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                {receiptBillInfo.map((journal, journalIndex) => (\r\n                    <table className=\"table table-bordered fa-12 my-3\" key={journalIndex}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"bg-light\">{journalIndex + 1}</th>\r\n                                <th className=\"bg-light text-primary vctr\">{journal.bill_name}</th>\r\n                                <th className=\"bg-light\">\r\n                                    Date: {journal.StockJournalDate ? localDate(journal.StockJournalDate) : \"-\"}\r\n                                </th>\r\n                                <th className=\"bg-light\">{journal.JournalBillType}</th>\r\n                                <th className=\"bg-light\">Paid: {journal.TotalPaidAmount}</th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <input\r\n                                        value={journal.Credit_Amo || \"\"}\r\n                                        className=\"cus-inpt p-2 border-dark text-primary bg-light\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={(e) => onChangeJournalAmount(journal, e.target.value)}\r\n                                    />\r\n                                </th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            onSelectStockJournal(\r\n                                                {\r\n                                                    ...journal,\r\n                                                    journalId: journal.bill_id,\r\n                                                },\r\n                                                true\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Delete className=\"fa-20\" color=\"error\" />\r\n                                    </IconButton>\r\n                                    {/* \r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className=\"mx-1\"\r\n                                        onClick={() => setOpen((pre) => !pre)}\r\n                                    >\r\n                                        {open ? (\r\n                                            <KeyboardArrowUp className=\"fa-20\" />\r\n                                        ) : (\r\n                                            <KeyboardArrowDown className=\"fa-20\" />\r\n                                        )}\r\n                                    </IconButton> \r\n                                    */}\r\n                                </th>\r\n                            </tr>\r\n\r\n                            {open && (\r\n                                <tr>\r\n                                    <td className=\"vctr\">Sno</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        Item\r\n                                    </td>\r\n                                    <td className=\"vctr\">Quantity</td>\r\n                                    <td className=\"vctr\">Paid Amount</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>Payment Amount</span>\r\n                                            <span className=\"fa-17 text-primary\">\r\n                                                {numberFormat(toNumber(journal.Credit_Amo))}\r\n                                            </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </thead>\r\n                        {open && (\r\n                            <tbody>\r\n                                {receiptCostingInfo\r\n                                    .filter((itemDetails) => isEqualNumber(itemDetails.bill_id, journal.bill_id))\r\n                                    .map((item, itemIndex) => (\r\n                                        <tr key={itemIndex}>\r\n                                            <td>{`${journalIndex + 1}.${itemIndex + 1}`}</td>\r\n                                            <td colSpan={2}>{item.item_name}</td>\r\n                                            <td>{item?.itemQuantity}</td>\r\n                                            <td>{item?.PaidAmount}</td>\r\n                                            <td colSpan={2} className=\"p-0\">\r\n                                                <input\r\n                                                    value={item.expence_value || \"\"}\r\n                                                    className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                                    placeholder=\"Enter Amount\"\r\n                                                    type=\"number\"\r\n                                                    onChange={(e) => onChangeAmount(item, e.target.value)}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        )}\r\n                    </table>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListCostingDetails;\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, RoundNumber, stringCompare, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Search } from \"@mui/icons-material\";\r\nimport { receiptBillInfoInitialValue, receiptCostingInfoInitialValue, stockJournalTypes } from \"./variable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport DisplayStockJournal from \"./displayStockJournal\";\r\nimport ListCostingDetails from \"./listCostingDetail\";\r\n\r\nconst ExpenceReceipt = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    filters,\r\n    baseData,\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    receiptCostingInfo = [],\r\n    setreceiptValue,\r\n    setReceiptBillInfo,\r\n    setReceiptCostingInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff,\r\n    receiptAdjesments= []\r\n}) => {\r\n\r\n    const [searchFilter, setSearchFilter] = useState({\r\n        reqDate: ISOString(),\r\n        stockJournalType: stockJournalTypes[0].value,\r\n        itemFilter: [],\r\n        journalVoucher: { label: 'ALL', value: '' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/products/dropDown`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('itemDropDownData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('journalVoucherData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const searchStockJournal = (date, journalType, items, voucher) => {\r\n        fetchLink({\r\n            address: `payment/paymentMaster/searchStockJournal`,\r\n            method: 'POST',\r\n            bodyData: { reqDate: date, stockJournalType: journalType, filterItems: items, voucher: voucher },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.data) {\r\n                updateBaseData('stockJournalSearchResult', toArray(data.data))\r\n            } else {\r\n                updateBaseData('stockJournalSearchResult', [])\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const onSelectStockJournal = (invoiceDetails, deleteOption) => {\r\n\r\n        setReceiptBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.bill_id, invoiceDetails.journalId));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(receiptBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'bill_name': return [key, invoiceDetails?.journalVoucherNo];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n                            case 'Credit_Amo': return [key, 0];\r\n\r\n                            case 'StockJournalDate': return [key, invoiceDetails.journalDate];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        });\r\n\r\n        setReceiptCostingInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.bill_id, invoiceDetails.journalId));\r\n\r\n            let updateCostinInfo;\r\n            if (deleteOption) {\r\n                updateCostinInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = invoiceDetails.Products_List.map(journalProduct => Object.fromEntries(\r\n                    Object.entries(receiptCostingInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'pur_date': return [key, invoiceDetails?.journalDate];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n\r\n                            case 'arr_id': return [key, journalProduct?.Arr_Id];\r\n                            case 'item_id': return [key, journalProduct?.productId];\r\n                            case 'item_name': return [key, journalProduct?.productNameGet];\r\n                            case 'itemQuantity': return [key, journalProduct?.quantity];\r\n                            case 'PaidAmount': return [key, journalProduct.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                ))\r\n                updateCostinInfo = [...excludeCurrentValue, ...reStruc];\r\n            }\r\n            return updateCostinInfo;\r\n        })\r\n\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setReceiptBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => isEqualNumber(invoice.bill_id, inv.bill_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Credit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n    const getJournalType = (typeId) => {\r\n        return [\r\n            {\r\n                label: 'MATERIAL INWARD',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'OTHER GODOWN',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'PROCESSING',\r\n                value: 3\r\n            },\r\n        ].find(journal => isEqualNumber(journal.value, typeId)).label\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n\r\n                <div className=\"border d-flex align-items-center fw-bold text-primary justify-content-between p-2\">\r\n                    <span>Against Reference ({receiptBillInfo.length})</span>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => updateFilterData('selectStockJournal', true)}\r\n                    >Add reference</Button>\r\n                </div>\r\n\r\n                <ListCostingDetails\r\n                    receiptBillInfo={receiptBillInfo}\r\n                    setReceiptBillInfo={setReceiptBillInfo}\r\n                    receiptCostingInfo={receiptCostingInfo}\r\n                    setReceiptCostingInfo={setReceiptCostingInfo}\r\n                    onInputValidate={onInputValidate}\r\n                    onChangeAmount={onChangeAmount}\r\n                    onSelectStockJournal={onSelectStockJournal}\r\n                />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.selectStockJournal}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Stock Journal Expences</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        searchStockJournal(\r\n                            searchFilter.reqDate,\r\n                            searchFilter.stockJournalType,\r\n                            searchFilter.itemFilter.map((item) => item.value),\r\n                            searchFilter.journalVoucher.value\r\n                        );\r\n                    }}>\r\n                        <div className=\"row\">\r\n                            {/* Date filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Date<RequiredStar /></label>\r\n                                <input\r\n                                    value={searchFilter.reqDate}\r\n                                    type=\"date\"\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            {/* stock jounal type filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Stock Journal Type <RequiredStar /></label>\r\n                                <select\r\n                                    value={searchFilter.stockJournalType}\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({\r\n                                        ...pre,\r\n                                        stockJournalType: e.target.value,\r\n                                        journalVoucher: { label: 'ALL ', value: '' }\r\n                                    }))}\r\n                                    required\r\n                                >\r\n                                    {stockJournalTypes.map((type, typeIndex) => (\r\n                                        <option value={type.value} key={typeIndex}>{type.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* item filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Item Filter <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.itemFilter}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, itemFilter: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        initialSelectValue,\r\n                                        ...toArray(baseData.itemDropDownData).map(\r\n                                            (item) => ({ value: item.Product_Id, label: item.Product_Name })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    isMulti={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* voucher filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Journal Voucher <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.journalVoucher}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, journalVoucher: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        { value: '', label: 'ALL' },\r\n                                        ...toArray(baseData.journalVoucherData).filter(\r\n                                            fil => stringCompare(\r\n                                                fil.Type,\r\n                                                getJournalType(searchFilter.stockJournalType)\r\n                                            )\r\n                                        ).map(\r\n                                            (voucher) => ({ value: voucher.Vocher_Type_Id, label: voucher.Voucher_Type })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* submit search */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<Search />}\r\n                                >Search</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                    <DisplayStockJournal\r\n                        arrayData={toArray(baseData.stockJournalSearchResult)}\r\n                        receiptBillInfo={receiptBillInfo}\r\n                        onSelect={onSelectStockJournal}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"button\" onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenceReceipt;","import { Button } from \"@mui/material\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Save } from \"@mui/icons-material\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, isValidObject, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { receiptValueInitialValue, receiptGeneralInfoInitialValue } from \"./variable\";\r\n\r\nimport SalesInvoiceReceipt from \"./salesReceipt\";\r\nimport ChooseReceiptComponent from \"./chooseReceipt\";\r\nimport ExpenceReceipt from \"./expencesReceipt\";\r\nimport AdjesmentsList from \"./adjesments\";\r\n\r\n\r\nconst initialSelectValue = { value: '', label: '' };\r\nconst filterInitialValue = {\r\n    receiptInvoice: initialSelectValue,\r\n    debitAccount: initialSelectValue,\r\n    creditAccount: initialSelectValue,\r\n    receiptType: initialSelectValue,\r\n    journalType: initialSelectValue,\r\n    itemFilter: initialSelectValue,\r\n    journalDate: '',\r\n    selectReceiptDialog: false,\r\n    selectSalesInvoice: false,\r\n    selectStockJournal: false,\r\n}\r\n\r\nconst AddPaymentReference = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n    const cellStyle = { minWidth: '130px' };\r\n    const cellHeadStype = { width: '150px' };\r\n\r\n    const [receiptValue, setReceiptValue] = useState(receiptGeneralInfoInitialValue);\r\n    const [receiptBillInfo, setReceiptBillInfo] = useState([]);\r\n    const [receiptCostingInfo, setReceiptCostingInfo] = useState([]);\r\n    const [receiptAdjesments, setReceiptAdjesmentsInfo] = useState([]);\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        accountGroup: [],\r\n        accounts: [],\r\n        receiptInvoiceSearchResult: [],\r\n        stockJournalSearchResult: [],\r\n        salesInvoiceSearchResult: [],\r\n        itemDropDownData: [],\r\n        journalVoucherData: [],\r\n    });\r\n\r\n    const [filters, setFilters] = useState(filterInitialValue)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    accountGroupResponse,\r\n                    accountResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `payment/accountGroup` }),\r\n                    fetchLink({ address: `payment/accounts` }),\r\n                ]);\r\n\r\n                const accountGroup = toArray(accountGroupResponse.success ? accountGroupResponse.data : []).sort(\r\n                    (a, b) => String(a?.Group_Name).localeCompare(b?.Group_Name)\r\n                );\r\n                const accounts = toArray(accountResponse.success ? accountResponse.data : []).sort(\r\n                    (a, b) => String(a?.Account_name).localeCompare(b?.Account_name)\r\n                );\r\n\r\n                updateBaseData('accountGroup', accountGroup);\r\n                updateBaseData('accounts', accounts);\r\n\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isEqualNumber(receiptValue.receipt_bill_type, 1) || !receiptValue.credit_ledger || !checkIsNumber(receiptValue.credit_ledger)) {\r\n            updateBaseData('salesInvoiceSearchResult', []);\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/pendingSalesInvoiceReceipt?Acc_Id=${receiptValue.credit_ledger}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('salesInvoiceSearchResult', toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [receiptValue.credit_ledger, receiptValue.receipt_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            !checkIsNumber(receiptValue.receipt_id)\r\n            || !checkIsNumber(receiptValue.receipt_bill_type)\r\n            || (\r\n                !isEqualNumber(receiptValue.receipt_bill_type, 1)\r\n                && !isEqualNumber(receiptValue.receipt_bill_type, 2)\r\n            )\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef?receipt_id=${receiptValue.receipt_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const reSturc = toArray(data.data).map(bill => ({\r\n                    ...bill,\r\n                    SalesInvoiceDate: bill.referenceBillDate,\r\n                    StockJournalDate: bill.referenceBillDate,\r\n                    TotalPaidAmount: bill.totalPaidAmount,\r\n                    PendingAmount: Subraction(bill?.Total_Invoice_value, bill.totalPaidAmount),\r\n                }));\r\n                setReceiptBillInfo(reSturc);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef/costingInfo?receipt_id=${receiptValue.receipt_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReceiptCostingInfo(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [receiptValue.receipt_id, receiptValue.receipt_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(receiptValue.receipt_id)) return setReceiptAdjesmentsInfo([]);\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/adjesments?receipt_id=${receiptValue.receipt_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReceiptAdjesmentsInfo(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [receiptValue.receipt_id])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setReceiptValue(\r\n                Object.fromEntries(\r\n                    Object.entries(receiptGeneralInfoInitialValue).map(([key, value]) => {\r\n                        if (key === 'receipt_date') return [key, editValues[key] ? ISOString(editValues[key]) : value];\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    }, [editValues])\r\n\r\n    const updateBaseData = (key = '', value = []) => {\r\n        setBaseData(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const updateFilterData = (key = '', value = []) => {\r\n        setFilters(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        updateFilterData('selectReceiptDialog', false);\r\n        updateFilterData('selectSalesInvoice', false);\r\n        updateFilterData('selectStockJournal', false);\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setReceiptValue(receiptGeneralInfoInitialValue);\r\n        setReceiptBillInfo([]);\r\n        setReceiptCostingInfo([]);\r\n        setFilters(filterInitialValue);\r\n        updateBaseData('receiptInvoiceSearchResult', []);\r\n        updateBaseData('stockJournalSearchResult', []);\r\n        updateBaseData('salesInvoiceSearchResult', []);\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return toArray(receiptBillInfo).reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n        ) + toArray(receiptAdjesments).reduce(\r\n            (acc, ref) => Addition(acc, ref?.adjesmentValue), 0\r\n        )\r\n    }, [receiptBillInfo, receiptAdjesments]);\r\n\r\n    const SavePayment = () => {\r\n        if (TotalAgainstRef > receiptValue.credit_amount) return toast.warn('Receipt amount is invalid');\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                receipt_id: receiptValue.receipt_id,\r\n                receipt_no: receiptValue.receipt_invoice_no,\r\n                receipt_date: receiptValue.receipt_date,\r\n                receipt_bill_type: receiptValue.receipt_bill_type,\r\n                BillsDetails: toArray(receiptBillInfo),\r\n                CostingDetails: toArray(receiptCostingInfo),\r\n                DR_CR_Acc_Id: receiptValue.credit_ledger\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                resetAll();\r\n                navigate('/erp/receipts/listReceipts', { state: editValues });\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white p-2 rounded-2\">\r\n\r\n                <div className=\"table-responsive\">\r\n\r\n                    {/* payment invoices */}\r\n                    <div className=\"p-2 d-flex align-items-center mb-3\">\r\n                        <h5 className=\"m-0 flex-grow-1\">Receipt Reference Creation</h5>\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant='contained'\r\n                            className=\"mx-1\"\r\n                            onClick={() => navigate('/erp/receipts/listReceipts', { state: editValues })}\r\n                        >back</Button>\r\n                    </div>\r\n\r\n                    {/* choose Payment */}\r\n                    <ChooseReceiptComponent\r\n                        cellHeadStype={cellHeadStype}\r\n                        cellStyle={cellStyle}\r\n                        receiptValue={receiptValue}\r\n                        receiptBillInfo={receiptBillInfo}\r\n                        filters={filters}\r\n                        baseData={baseData}\r\n                        setReceiptValue={setReceiptValue}\r\n                        updateFilterData={updateFilterData}\r\n                        updateBaseData={updateBaseData}\r\n                        closeDialog={closeDialog}\r\n                        loadingOn={loadingOn}\r\n                        loadingOff={loadingOff}\r\n                        receiptAdjesments={receiptAdjesments}\r\n                    />\r\n\r\n                    {/* choose Purchase invoice */}\r\n                    {isEqualNumber(receiptValue.receipt_bill_type, 1) && (\r\n                        <SalesInvoiceReceipt\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            receiptValue={receiptValue}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            setReceiptValue={setReceiptValue}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            receiptBillInfo={receiptBillInfo}\r\n                            setReceiptBillInfo={setReceiptBillInfo}\r\n                            receiptAdjesments={receiptAdjesments}\r\n                        />\r\n                    )}\r\n\r\n                    {/* choose Stock journal */}\r\n                    {isEqualNumber(receiptValue.receipt_bill_type, 2) && (\r\n                        <ExpenceReceipt\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            receiptValue={receiptValue}\r\n                            receiptBillInfo={receiptBillInfo}\r\n                            receiptCostingInfo={receiptCostingInfo}\r\n                            setReceiptValue={setReceiptValue}\r\n                            setReceiptBillInfo={setReceiptBillInfo}\r\n                            setReceiptCostingInfo={setReceiptCostingInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            receiptAdjesments={receiptAdjesments}\r\n                        />\r\n                    )}\r\n\r\n                    {receiptAdjesments.length > 0 && (\r\n                        <AdjesmentsList adjesmentData={receiptAdjesments} />\r\n                    )}\r\n\r\n                </div>\r\n\r\n                <hr className=\"my-2\" />\r\n\r\n                <div className=\"p-2 d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<Save />}\r\n                        disabled={\r\n                            !checkIsNumber(receiptValue.receipt_id)\r\n                            // || receiptBillInfo.length === 0\r\n                        }\r\n                        onClick={SavePayment}\r\n                    >Save</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPaymentReference;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    is_new_ref: 0,\r\n    is_journal_type: 0,\r\n    transaction_type: '',\r\n\r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n\r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n\r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];\r\n\r\nexport const transactionTypes = [\r\n    {\r\n        label: 'Select',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'ATM',\r\n        value: 'ATM'\r\n    },\r\n    {\r\n        label: 'Card',\r\n        value: 'Card'\r\n    },\r\n    {\r\n        label: 'Cash',\r\n        value: 'Cash'\r\n    },\r\n    {\r\n        label: 'Cheque/DD',\r\n        value: 'Cheque/DD'\r\n    },\r\n    {\r\n        label: 'ECS',\r\n        value: 'ECS'\r\n    },\r\n    {\r\n        label: 'e-Fund Transfer',\r\n        value: 'e-Fund Transfer'\r\n    },\r\n    {\r\n        label: 'Electronic Cheque',\r\n        value: 'Electronic Cheque'\r\n    },\r\n    {\r\n        label: 'Electronic DD/PO',\r\n        value: 'Electronic DD/PO'\r\n    },\r\n    {\r\n        label: 'UPI',\r\n        value: 'UPI'\r\n    },\r\n    {\r\n        label: 'Others',\r\n        value: 'Others'\r\n    },\r\n]"],"names":["_ref","cellHeadStype","width","cellStyle","minWidth","initialSelectValue","value","label","receiptValue","receiptBillInfo","setReceiptBillInfo","filters","baseData","setreceiptValue","updateFilterData","updateBaseData","closeDialog","receiptAdjesments","onClickSalesInvoice","invoiceDetails","deleteOption","pre","excludeCurrentValue","toArray","filter","o","stringCompare","bill_name","isEqualNumber","bill_id","updateBillInfo","reStruc","Object","fromEntries","entries","receiptBillInfoInitialValue","map","_ref2","key","Do_Id","Do_Inv_No","toNumber","Total_Invoice_value","Do_Date","totalReference","Subraction","_jsxs","_Fragment","children","_jsx","className","style","colSpan","Button","type","variant","disabled","salesInvoiceSearchResult","length","onClick","col","colInd","invoice","invoiceInd","LocalDate","SalesInvoiceDate","NumberFormat","bill_amount","TotalPaidAmount","Credit_Amo","placeholder","onChange","e","maxAmount","validated","onInputValidate","input","max","inputValue","checkIsNumber","RoundNumber","target","onChangeAmount","amount","selectedInvoices","indexOfInvoice","findIndex","inv","IconButton","size","Delete","color","reduce","acc","Addition","Dialog","open","selectSalesInvoice","onClose","fullScreen","DialogTitle","Close","DialogContent","dataSource","Paid_Amount","isChecked","padding","checked","rowSpan","DialogActions","setReceiptValue","loadingOn","loadingOff","TotalAgainstRef","useMemo","ref","adjesmentValue","PendingAgainstRef","credit_amount","receiptTypes","find","receipt_bill_type","debit_ledger_name","receipt_invoice_no","credit_ledger_name","selectReceiptDialog","RequiredStar","Select","receiptType","menuPortalTarget","document","body","options","isDisabled","styles","customSelectStyles","isSearchable","required","debitAccount","accounts","Acc_Id","Account_name","creditAccount","startIcon","Search","searchReceipts","toast","warn","fetchLink","address","then","data","success","FilterableTable","title","EnableSerialNumber","headerFontSizePx","bodyFontSizePx","tableMaxHeight","dataArray","receiptInvoiceSearchResult","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref3","row","_ref4","TotalReferenceAdded","_ref5","Done","arrayData","onSelect","TableRows","sno","setOpen","useState","isProcessing","BillType","journalVoucherNo","journalDate","voucherTypeGet","narration","paidAmount","journalId","KeyboardArrowUp","KeyboardArrowDown","SourceDetails","disablePagination","Products_List","journal","jouInd","val","Number","add","a","b","subtract","roundNumber","num","precision","arguments","undefined","toFixed","receiptCostingInfo","setReceiptCostingInfo","onSelectStockJournal","journalAmountOnChange","onChangeJournalAmount","totalAmount","updated","index","prev","items","item","totalQty","sum","itemQuantity","unitCost","divide","distributed","updatedItems","weighted","multiply","expence_value","i","item_id","arr_id","journalIndex","StockJournalDate","dateStr","Date","toLocaleDateString","JournalBillType","Intl","format","itemDetails","itemIndex","item_name","PaidAmount","selectedItem","searchFilter","setSearchFilter","reqDate","ISOString","stockJournalType","stockJournalTypes","itemFilter","journalVoucher","useEffect","catch","console","error","updateCostinInfo","journalProduct","receiptCostingInfoInitialValue","Arr_Id","productId","productNameGet","quantity","ListCostingDetails","selectStockJournal","onSubmit","searchStockJournal","date","journalType","voucher","preventDefault","method","bodyData","filterItems","typeIndex","itemDropDownData","Product_Id","Product_Name","isMulti","closeMenuOnSelect","journalVoucherData","fil","Type","typeId","Vocher_Type_Id","Voucher_Type","DisplayStockJournal","stockJournalSearchResult","filterInitialValue","receiptInvoice","AddRights","EditRights","DeleteRights","navigate","useNavigate","editValues","useLocation","state","receiptGeneralInfoInitialValue","setReceiptAdjesmentsInfo","setBaseData","accountGroup","setFilters","async","accountGroupResponse","accountResponse","Promise","all","sort","String","Group_Name","localeCompare","fetchData","credit_ledger","receipt_id","reSturc","bill","referenceBillDate","totalPaidAmount","PendingAmount","isValidObject","_editValues$key","ChooseReceiptComponent","SalesInvoiceReceipt","ExpenceReceipt","AdjesmentsList","adjesmentData","Save","SavePayment","receipt_no","receipt_date","BillsDetails","CostingDetails","DR_CR_Acc_Id","message","userDetails","getSessionUser","user","year_id","receipt_voucher_type_id","receipt_sno","debit_ledger","debit_amount","remarks","status","is_new_ref","is_journal_type","transaction_type","check_no","check_date","bank_name","bank_date","created_by","UserId","altered_by","created_on","alterd_on","auto_id","Debit_Amo","Debit_Ledger_Id","receiptStatus","transactionTypes"],"sourceRoot":""}