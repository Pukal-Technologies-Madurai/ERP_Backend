{"version":3,"file":"static/js/3096.e2bd271a.chunk.js","mappings":"2GACA,Q,SAAoC,C,2CCD7B,MAAMA,EAAkB,CAC3B,CACIC,GAAI,EACJC,MAAO,MACPC,MAAO,wBAEX,CACIF,GAAI,EACJC,MAAO,WACPC,MAAO,2BAEX,CACIF,GAAI,EACJC,MAAO,YACPC,MAAO,2BAEX,CACIF,GAAI,EACJC,MAAO,WACPC,MAAO,2BAIFC,EAAW,CACpB,CACIH,GAAI,EACJC,MAAO,MACPC,MAAO,wBAEX,CACIF,GAAI,EACJC,MAAO,UACPC,MAAO,2BAEX,CACIF,GAAI,EACJC,MAAO,YACPC,MAAO,2BAEX,CACIF,GAAI,EACJC,MAAO,WACPC,MAAO,0B,8FCtCf,MAAME,EAAqB,eAAAC,EAAA,IAAWC,EAASC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAA8D,QAA9DJ,GAAhBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAsBG,KAAKC,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,WAAYP,WAAW,IAAAD,EAAAA,EAAI,CAAC,CAAE,EA2JpH,EAzJ+BS,IASxB,IATyB,gBAC5BC,EAAkB,GAAE,gBACpBC,EAAkB,GAAE,iBACpBC,EAAgB,YAChBC,EAAW,QACXC,EAAO,SACPC,EAAW,GAAE,YACbC,EAAc,CAAC,EAAC,eAChBC,GACHR,EAEG,MAAMS,GAAmBC,EAAAA,EAAAA,SAAQ,KACtBC,EAAAA,EAAAA,IAAQT,GAAiBU,OAAO,CAACC,EAAKC,KAAQC,EAAAA,EAAAA,IAASF,EAAQ,OAAHC,QAAG,IAAHA,OAAG,EAAHA,EAAKE,eAAgB,GACzF,CAACd,IAEEe,GAAsBP,EAAAA,EAAAA,SAAQ,KAChC,MAAMQ,EAAWjB,EAAgBW,OAAO,CAACC,EAAKM,KAC1C,MAAMC,GAASC,EAAAA,EAAAA,IAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMC,QAEjC,GAAIjB,EAAkB,OAAOY,EAAAA,EAAAA,IAASF,EAAKO,GAE3C,MAAME,EAAUhC,EAAmBgB,EAAUa,EAAKI,SAC5CC,EAAgBnB,EAAUiB,EAAQG,OAASH,EAAQI,MAEzD,OAAItB,GACOW,EAAAA,EAAAA,IAASF,GAAKc,EAAAA,EAAAA,GAAoBP,EAAQI,EAAe,UAAUI,WAEnEb,EAAAA,EAAAA,IAASF,GAAKc,EAAAA,EAAAA,GAAoBP,EAAQI,EAAe,OAAOI,WAE5E,GAEH,OAAOb,EAAAA,EAAAA,IAASG,EAAUT,IAC3B,CAACR,EAAiBE,EAAkBG,EAAUD,EAASD,EAAaK,IAEjEoB,GAAanB,EAAAA,EAAAA,SAAQ,KACvB,IAAKT,GAA8C,IAA3BA,EAAgBP,OAAc,MAAO,CAAC,EAE9D,IAAIoC,EAAe,EACfC,EAAW,EAEf9B,EAAgB+B,QAAQb,IACpB,MAAMC,GAASC,EAAAA,EAAAA,KAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAU,GAE3C,GAAIjB,EAEA,YADA2B,GAAef,EAAAA,EAAAA,IAASe,EAAcV,IAI1C,MAAME,EAAUhC,EAAmBgB,EAAUa,EAAKI,SAC5CC,GAAgB1B,EAAAA,EAAAA,IAAcO,EAAS,GAAKiB,EAAQG,OAASH,EAAQI,MAErEO,GAAUN,EAAAA,EAAAA,GAAoBP,EAAQI,EAAepB,EAAc,SAAW,OAEpF0B,GAAef,EAAAA,EAAAA,IAASe,EAAcI,WAAWD,EAAQE,cACzDJ,GAAWhB,EAAAA,EAAAA,IAASgB,EAAUG,WAAWD,EAAQG,eAGrD,MAAMC,GAAetB,EAAAA,EAAAA,IAASe,EAAcC,GACtCO,GAAoBvB,EAAAA,EAAAA,IAASsB,EAAc5B,GAC3C8B,EAAeC,KAAKC,MAAMH,GAC1BI,GAAWrB,EAAAA,EAAAA,IAAYkB,EAAeD,GAEtCK,GAAO7C,EAAAA,EAAAA,IAAcO,EAAS,GAAK,GAAIgB,EAAAA,EAAAA,IAAYU,EAAW,GAC9Da,GAAO9C,EAAAA,EAAAA,IAAcO,EAAS,GAAK,GAAIgB,EAAAA,EAAAA,IAAYU,EAAW,GAC9Dc,GAAO/C,EAAAA,EAAAA,IAAcO,EAAS,IAAKgB,EAAAA,EAAAA,IAAYU,GAAY,EAEjE,MAAO,CACHD,cAAcT,EAAAA,EAAAA,IAAYS,GAC1BC,UAAUV,EAAAA,EAAAA,IAAYU,GACtBY,OACAC,OACAC,OACAH,WACAI,aAAcP,IAGnB,CAACtC,EAAiBK,EAAUD,EAASF,EAAkBC,EAAaK,IASvE,OANAC,EAAAA,EAAAA,SAAQ,UACwBf,IAAxBkC,EAAWa,UAA0Bb,EAAWa,WAAanC,EAAYwC,WACzEvC,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAED,UAAWlB,EAAWa,aAE5D,CAACb,EAAWa,YAGXQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,UACpBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIE,EAAAA,EAAAA,MAAA,MAAID,UAAU,aAAaE,QAASlD,EAAU,EAAI,EAAE+C,SAAA,CAAC,oBAChCI,EAAAA,EAAAA,IAAcC,SAASxC,QAE5CiC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,0BAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SACrBvB,EAAWC,kBAGlBzB,GAgBEiD,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,UAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SACrBvB,EAAWgB,WAlBpBS,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,UAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SACrBvB,EAAWc,WAGpBW,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,UAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SACrBvB,EAAWe,cAY5BU,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,oBAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,UACrB/B,EAAAA,EAAAA,IAAYZ,SAGrB6C,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,eAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,UACtBF,EAAAA,EAAAA,KAAA,SACIQ,MAAOnD,EAAYwC,WAAalB,EAAWa,UAAY,EACvDW,UAAU,4BACVM,QAASC,EAAAA,GACTC,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC1BD,GAAG,IACND,UAAWb,WAAW4B,EAAEC,OAAOL,QAAU,aAKzDJ,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,SAAC,WAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,aAAYD,UACrBY,EAAAA,EAAAA,IAAaxB,KAAKC,MAAMxB,gB,6DClJrD,SAAegD,EAAAA,EAAAA,IAA4Bf,EAAAA,EAAAA,KAAK,OAAQ,CACtDgB,EAAG,0GACD,Q,sLCIJ,MAqKA,EArK+BlE,IAMxB,IANyB,gBAC5BE,EAAkB,GAAE,mBACpBiE,EAAkB,cAClBC,EAAgB,GAAE,QAClB/D,EAAO,QACPgE,GACHrE,EA0EG,OACIkD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIE,EAAAA,EAAAA,MAACgB,EAAAA,EAAI,CAAAlB,SAAA,EACDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wEAAuED,SAAA,EAClFF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,MAAKD,SAAC,cACpBF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACC,QAAQ,WAAWC,KAAK,SAASC,QAbvCC,KACdR,EAAmBS,GAAQ,IAAIA,GAAI3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO4B,EAAAA,IAAwB,IAAEC,IAAKF,EAAKlF,YAYN0D,SAAC,YAEjEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC7BE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SACK,CACG,OAAQ,UACR,gBAAiB,UAAU2B,IACvB,CAACC,EAAGC,KAAM/B,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAgBD,SAAU4B,GAAJC,SAI9D3B,EAAAA,EAAAA,MAAA,SAAO4B,MAAO,CAAEC,SAAU,QAAS/B,SAAA,CAC9BlD,EAAgB6E,IAAI,CAACK,EAAKC,KAAW,IAADC,EAEjC,MAAMC,GAEL,QAF0BD,EAAAlB,EAAcxE,KACrCkB,IAAOhB,EAAAA,EAAAA,IAAcgB,EAAI0E,GAAO,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,oBACrC,IAAAH,OAAA,EAF0BA,EAExBI,eAAgB,GAEnB,OACIpC,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKiC,EAAQ,KACbnC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,WAAW6B,MAAO,CAAES,SAAU,SAAUvC,UAClDF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAU,OAAH0B,QAAG,IAAHA,OAAG,EAAHA,EAAKK,WACZtG,MAAOoG,GAEX1B,SAAUC,GAxD3B+B,EAACR,EAAOS,KAC/B,MAAMC,EAAW3B,EAAcxE,KAAKkB,IAAOhB,EAAAA,EAAAA,IAAcgB,EAAI0E,GAAIM,EAAepC,SAAW,CAAC,EAC5FS,EAAmBS,GACfA,EAAKG,IAAI,CAAC5D,EAAM8D,IACRA,IAAMI,EAAclE,GACxB8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO9B,GAAI,IACPsE,WAAYM,EAASP,GACrBxE,cAAe,OAgD4B6E,CAAmBR,EAAOvB,GACzCkC,QAAS5B,EAEJ6B,OAAOnF,MAEAhB,EAAAA,EAAAA,IAAcgB,EAAI0E,GAAO,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,cAGvBvF,EAAgBgG,KACpB,CAACC,EAAKC,IAAQA,IAAQf,IAASvF,EAAAA,EAAAA,IAAcqG,EAAIV,WAAY3E,EAAI0E,MAGxET,IAAIjE,IAAG,CAAO4C,MAAO5C,EAAI0E,GAAIrG,MAAO2B,EAAI4E,gBAE7CW,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAY,iBACZC,aAAcC,EAAAA,QAGtB3D,EAAAA,EAAAA,KAAA,MAAIG,UAAU,WAAUD,UACpBF,EAAAA,EAAAA,KAAA,SACIS,QAASC,EAAAA,GACTP,UAAU,wBACVK,MAAO0B,EAAIpE,eAAiB,GAC5B8F,WAAWC,EAAAA,EAAAA,IAAc3B,EAAIK,YAC7B5B,SAAUC,IArI5BkD,EAAC3B,EAAO4B,EAAOvD,KAErCS,EAAmBS,GACfA,EAAKG,IAAI,CAAC5D,EAAM8D,KACZ,GAAIA,IAAMI,EAAO,OAAOlE,EAExB,MAAM+F,GAAOjE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ9B,GAAI,IAAE,CAAC8F,GAAQvD,IAEpC,GAAc,kBAAVuD,EAA2B,CAC3B,MACIE,EAAOhG,EAAKgG,MAAOC,EAAAA,EAAAA,IAASjG,EAAKgG,MAAQ,EACzCE,EAAOlG,EAAKkG,MAAOD,EAAAA,EAAAA,IAASjG,EAAKkG,MAAQ,EACzCC,EAAOnG,EAAKmG,MAAOF,EAAAA,EAAAA,IAASjG,EAAKmG,MAAQ,EACzCC,GAASH,EAAAA,EAAAA,IAAS1D,GAClB8D,EAAgBnH,EAAUiH,GAAOvG,EAAAA,EAAAA,IAASoG,EAAME,GAE9CI,GAAY9F,EAAAA,EAAAA,GAAoB4F,EAAQC,EAAenD,GAE7D6C,EAAQQ,SAAYP,EAAO,IAAM9G,EAC3BoH,EAAUE,YACV,EACNT,EAAQU,SAAYP,EAAO,IAAMhH,EAC3BoH,EAAUI,YACV,EACNX,EAAQY,SAAYR,EAAO,GAAKjH,EAC1BoH,EAAUM,YACV,CACV,CAEA,GAAc,SAAVd,EAAkB,CAClB,MACIK,EAAOjH,GAAU+G,EAAAA,EAAAA,IAAS1D,GAAS,EACnCyD,EAAQ9G,EAAyC,GAA/B2H,EAAAA,EAAAA,KAASZ,EAAAA,EAAAA,IAAS1D,GAAQ,GAC5C2D,EAAQhH,EAAyC,GAA/B2H,EAAAA,EAAAA,KAASZ,EAAAA,EAAAA,IAAS1D,GAAQ,GAE1C6D,GAASH,EAAAA,EAAAA,IAASjG,EAAKH,eAAgBwG,EAAgBnH,EAAUiH,GAAOvG,EAAAA,EAAAA,IAASoG,EAAME,GACvFI,GAAY9F,EAAAA,EAAAA,GAAoB4F,EAAQC,EAAenD,GAE7D6C,EAAQC,KAAOA,EACfD,EAAQG,KAAOA,EACfH,EAAQQ,SAAWP,EAAO,EAAIM,EAAUE,YAAc,EACtDT,EAAQU,SAAWP,EAAO,EAAII,EAAUI,YAAc,EACtDX,EAAQY,SAAWR,EAAO,EAAIG,EAAUM,YAAc,CAC1D,CAEA,OAAOb,MAyF6BF,CAAkB3B,EAAO,gBAAiBvB,EAAEC,OAAOL,aAI/DR,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,UAClCF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACvD,QAASA,IAvE3CW,KACdlB,EAAmBS,GAAQA,EAAKqB,OAAO,CAACiC,EAAGjD,IAAMA,IAAMI,KAsEQ8C,CAAU9C,GAAQ+C,KAAK,QAAOhF,UACrDF,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,CAACjJ,MAAM,QAAQ+F,SAAS,gBA1ClCE,KAgDW,IAA3BnF,EAAgBR,SACbwD,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,cAAciF,QAAS,EAAElF,SAAC,2B,oHC/J5E,MAyLA,EAzLsCpD,IAQ/B,IAADuI,EAAA,IARiC,YACnChI,EAAc,CAAC,EAAC,eAChBC,EAAc,UACdgI,EAAY,GAAE,YACdC,EAAc,GAAE,SAChBC,EAAW,GAAE,iBACbC,EAAgB,oBAChBC,EAAsB,IACzB5I,EAEG,MACM6I,EAAa,eAEnB,OACIvF,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAGhBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,gBACzBF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAkB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAauI,YACpB3J,MAAkB,OAAXoB,QAAW,IAAXA,OAAW,EAAXA,EAAawI,eAExBlF,SAAUC,IACNtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAG,IACN8F,YAAahF,EAAEJ,MACfqF,cAAejF,EAAE3E,UAKzB6G,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,OACvCrI,EAAAA,EAAAA,IAAQ6H,GAAWzD,IAAIlF,IAAG,CACzB6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKiJ,YACZ3J,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKkJ,kBAGpB1C,OAAQC,EAAAA,GACRI,cAAc,EACdC,YAAa,gBACbsC,cAAe,IACfrC,aAAcC,EAAAA,SAKtBvD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,kBACzBF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAOnD,EAAY2I,aACnB/J,MAAgG,QAA3FoJ,GAAE5H,EAAAA,EAAAA,IAAQ8H,GAAa7I,KAAKuJ,IAAKrJ,EAAAA,EAAAA,IAAcqJ,EAAEC,eAAgB7I,EAAY2I,sBAAc,IAAAX,OAAA,EAAzFA,EAA2FW,cAEtGrF,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEkG,aAAcpF,EAAEJ,SAChEsC,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,OACvCrI,EAAAA,EAAAA,IAAQ8H,GAAaxC,OACpBoD,GAAqB,WAAX,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,OACdvE,IAAIlF,IAAG,CACL6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKuJ,eACZjK,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKqJ,iBAGpB7C,OAAQC,EAAAA,GACRI,cAAc,EACd6C,UAAU,EACV5C,YAAa,sBACbsC,cAAe,IACfrC,aAAcC,EAAAA,SAKtBvD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,QAAOD,SAAA,CAAC,eAAWF,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,QACjDtG,EAAAA,EAAAA,KAAA,SACIQ,OAAkB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAakJ,UAAW,GAC/BhF,KAAK,OACL8E,UAAQ,EACRlG,UAAWwF,EACXhF,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEyG,QAAS3F,EAAEC,OAAOL,eAK1EJ,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,QAAOD,SAAA,CAAC,WAAOF,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,QAC7ClG,EAAAA,EAAAA,MAAA,UACID,UAAWwF,EACXnF,MAAkB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAamJ,UACpBH,UAAQ,EACR1F,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE0G,UAAW5F,EAAEC,OAAOL,SAAUN,SAAA,EAE9EF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,GAAEN,SAAC,WAChBsF,EAAS3D,IAAI,CAACC,EAAGC,KACd/B,EAAAA,EAAAA,KAAA,UAAQQ,MAAQ,OAADsB,QAAC,IAADA,OAAC,EAADA,EAAG2E,SAASvG,SAAW,OAAD4B,QAAC,IAADA,OAAC,EAADA,EAAG4E,YAAP3E,WAM7C3B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,QAAOD,SAAA,CAAC,aAASF,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,QAC/ClG,EAAAA,EAAAA,MAAA,UACID,UAAWwF,EACXhF,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE6G,cAAeC,OAAOhG,EAAEC,OAAOL,UAC/EA,MAAOnD,EAAYsJ,cACnBN,UAAQ,EAAAnG,SAAA,EAERF,EAAAA,EAAAA,KAAA,UAAQQ,MAAO,EAAEN,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAO,EAAEN,SAAC,mBAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAO,EAAEN,SAAC,uBAK1BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,cACzBE,EAAAA,EAAAA,MAAA,UACID,UAAWwF,EACXhF,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE3C,QAASyJ,OAAOhG,EAAEC,OAAOL,UACzEA,MAAOnD,EAAYF,QAAQ+C,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,SAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,gBAK1BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,4BACzBF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CAAEA,MAAOnD,EAAYwJ,uBAAwB5K,MAAOoB,EAAYwJ,wBACvElG,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE+G,uBAAwBjG,EAAEJ,SAC1EsC,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,MACvCJ,EAAoB7D,IAAIlF,IAAG,CAC1B6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKkK,uBACZ5K,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKkK,2BAGpB1D,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3B8C,UAAU,EACV7C,cAAc,EACdC,YAAa,SACbsC,cAAe,IACfrC,aAAcC,EAAAA,SAKtBvD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iCAAgCD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,YACzBE,EAAAA,EAAAA,MAAA,UACII,MAAkB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAayJ,cACpB3G,UAAWwF,EACXhF,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEgH,cAAelG,EAAEC,OAAOL,SAAUN,SAAA,EAElFF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,GAAGoD,UAAQ,EAAA1D,SAAC,YAC1BF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,SAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,aAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,eAClBF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,IAAGN,SAAC,uBAM9BF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,QAAOD,SAAC,eACzBF,EAAAA,EAAAA,KAAA,YACIG,UAAU,iBACV4G,KAAM,EACNvG,MAAOnD,EAAY2J,UACnBrG,SAAUC,GAAKtD,EAAewC,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEkH,UAAWpG,EAAEC,OAAOL,c,kBCrLpFyG,OAAOC,eAAeC,EAAS,aAAc,CAC3C3G,OAAO,IAETyG,OAAOC,eAAeC,EAAS,UAAW,CACxCC,YAAY,EACZC,IAAK,WACH,OAAOC,EAAOvG,aAChB,IAEF,IAAIuG,EAASC,EAAQ,M,sBCTjBC,EAAyBD,EAAQ,OAIrCJ,EAAQ,OAAU,EAClB,IAAIM,EAAiBD,EAAuBD,EAAQ,QAChDG,EAAcH,EAAQ,OACXJ,EAAQ,GAAU,EAAIM,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtG5G,EAAG,gDACD,e,0TCgBJ,MAAM6G,GAAUC,EAAAA,EAAAA,MAAiBC,KAsqBjC,EAjqB+BjL,IAAmG,IAAlG,UAAEkL,EAAS,WAAEC,EAAU,KAAEC,EAAI,QAAEC,EAAO,WAAEC,EAAU,cAACC,EAAa,gBAACC,EAAe,UAACC,GAAWzL,EAExH,MAAO0L,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCtL,SAAU,GACVuL,OAAQ,GACRrD,UAAW,GACXC,YAAa,GACbqD,IAAK,GACLC,MAAO,GACPC,UAAW,GACXC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,cAAe,GACfxD,oBAAqB,MAGlByD,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,CACjCW,kBAAkB,EAClBC,qBAAqB,KAMlBjM,EAAaC,IAAkBoL,EAAAA,EAAAA,UAASa,EAAAA,KACxCxM,EAAiByM,IAAqBd,EAAAA,EAAAA,UAAS,KAC9C1L,EAAiBiE,IAAsByH,EAAAA,EAAAA,UAAS,KACjDe,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAS,KAEtCiB,EAAuBC,IAA4BlB,EAAAA,EAAAA,UAAS,MAE7DxL,GAAcN,EAAAA,EAAAA,IAAcS,EAAYsJ,cAAe,GACvD1J,GAAmBL,EAAAA,EAAAA,IAAcS,EAAYsJ,cAAe,GAC5DxJ,GAAUP,EAAAA,EAAAA,IAAcS,EAAYF,QAAS,GAC7CgE,EAAUlE,EAAmB,UAAYC,EAAc,SAAW,MAElE2M,EADc,EACgB9M,EAAgBP,QAKpDsN,EAAAA,EAAAA,WAAU,KACN,IAAK5B,EAAM,OAEO6B,WACd,IACQ/B,GAAWA,IAEf,MACIgC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,SACMC,QAAQC,IAAI,EAClBC,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,6BACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,sBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,yCAADC,OAAkD,OAAPlD,QAAO,IAAPA,OAAO,EAAPA,EAASmD,eACvEH,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,kCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,iBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,0BACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,mCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,oCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,kCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,yBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,8CAGlBG,GAAcjB,EAAekB,QAAUlB,EAAemB,KAAO,IAAIC,KACnE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG3E,YAAY8E,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG5E,aAE/C+E,GAAgBxB,EAAiBiB,QAAUjB,EAAiBkB,KAAO,IAAIC,KACzE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGK,cAAcF,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGI,eAEjDC,GAAiBzB,EAAiBgB,QAAUhB,EAAiBiB,KAAO,IAAIC,KAC1E,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGxF,eAAe2F,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGzF,gBAElDN,GAAe4E,EAAoBe,QAAUf,EAAoBgB,KAAO,IAAIC,KAC9E,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGrF,cAAcwF,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGtF,eAEjD4F,GAAWxB,EAAYc,QAAUd,EAAYe,KAAO,IAAIC,KAC1D,CAACC,EAAGC,IAAMC,OAAOF,EAAEQ,OAAOL,cAAcF,EAAEO,QAExCC,GAAazB,EAAca,QAAUb,EAAcc,KAAO,IAAIC,KAChE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGU,kBAAkBP,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGS,mBAErDC,GAAqB1B,EAAcY,QAAUZ,EAAca,KAAO,IAAIC,KACxE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGY,eAAeT,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGW,gBAElDC,GAAmB3B,EAAwBW,QAAUX,EAAwBY,KAAO,IAAIC,KAC1F,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGc,aAAaX,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGa,cAEhDC,GAAkB5B,EAAgBU,SAAUzN,EAAAA,EAAAA,IAAQ+M,EAAgBW,MAAQ,IAAIC,KAClF,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGgB,cAAcb,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGe,eAEjDC,GAAkB7B,EAAgBS,QAAUT,EAAgBU,KAAO,IAAIC,KACzE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGkB,iBAAiBf,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGiB,kBAEpD7G,GAAuBgF,EAA4BQ,QAAUR,EAA4BS,KAAO,IAAIC,KACtG,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGxE,wBAAwB2E,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGzE,yBAGjE4B,EAAa3I,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAG,IACN1C,SAAUqO,EACV9C,OAAQsC,EACR3F,UAAWqG,EACXpG,YAAaA,EACbqD,IAAKgD,EACL/C,MAAOiD,EACPhD,UAAWkD,EACXhD,OAAQkD,EACRnD,OAAOyD,EAAAA,EAAAA,IAAcf,EAAc,QAAS,CAAC,eAC7CxC,QAASmD,EAAerJ,OACpBnF,KAAQ6O,EAAAA,EAAAA,IAAc7O,EAAIwI,KAAM,YAClCvE,IAAIjE,IAAG,CAAO0E,GAAI1E,EAAI8O,OAAQlK,aAAc5E,EAAIyO,gBAClDnD,cAAeoD,EACf5G,oBAAqBA,IAE7B,CAAE,MAAO9E,GACL+L,QAAQC,MAAM,uBAAwBhM,EAC1C,CAAC,QACOqH,GAAYA,GACpB,GAGJ4E,IAED,CAAQ,OAAPhF,QAAO,IAAPA,OAAO,EAAPA,EAASmD,WAAY9C,KAezB4B,EAAAA,EAAAA,WAAU,KACNN,EAAkB1J,GACA,IAAIA,GAEL+B,IAAI5D,GACNgJ,OAAO6F,YACV7F,OAAO8F,QAAQ9O,GAAM4D,IAAImL,IAAmB,IAAjBC,EAAKzM,GAAMwM,EAClC,MAAME,EAhKH,eAAA7Q,EAAA,IAAWC,EAASC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAA8D,QAA9DJ,GAAhBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAsBG,KAAKC,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,WAAYP,WAAW,IAAAD,EAAAA,EAAI,CAAC,CAAE,CAgKtED,CAAmBoM,EAASpL,SAAc,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMI,SAC5DC,EAAgBnB,EAAU+P,EAAc3O,OAAS2O,EAAc1O,MAC/D2O,EAAY7O,EAAgB,GAE5B,SAAE8O,EAAQ,UAAEC,EAAS,OAAEnP,GAAWD,EAElCqP,GAAc7O,EAAAA,EAAAA,GAAoB4O,EAAW/O,EAAe6C,GAC5DoM,GAAU9O,EAAAA,EAAAA,GAAoBP,EAAQI,EAAe6C,GAErDqM,EAAWrQ,EAA6B,EAAnBoQ,EAAQE,SAC7BC,EAAUvQ,EAAUoQ,EAAQI,SAAW,EACvCnJ,EAAYrH,EAAgC,EAAtBoQ,EAAQ9I,YAC9BG,EAAWzH,EAAUoQ,EAAQ1I,YAAc,EAEjD,OAAQoI,GACJ,IAAK,eAAgB,MAAO,CAACA,EAAKK,EAAYM,aAC9C,IAAK,YAAa,MAAO,CAACX,EAAKG,GAC/B,IAAK,SAAU,MAAO,CAACH,EAAKE,EAAY,EAAI,GAC5C,IAAK,iBAAkB,MAAO,CAACF,EAAKM,EAAQK,aAC5C,IAAK,WAAY,MAAO,CAACX,EAAK3O,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAAC2O,EAAY,OAAPO,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAACP,EAAKhQ,EAAmB,EAAIuH,GACrD,IAAK,OAAQ,MAAO,CAACyI,EAAY,OAAPS,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAACT,EAAKhQ,EAAmB,EAAI2H,GACrD,IAAK,YAAa,MAAO,CAACqI,EAAKM,EAAQ7O,UAEvC,QAAS,MAAO,CAACuO,EAAKhP,EAAKgP,IAAQzM,UAMxD,CACCgI,EAASpL,SACTD,EACAgE,KAGJ2I,EAAAA,EAAAA,WAAU,KACN7I,EAAmBnB,GACD,IAAIA,GAEL+B,IAAI5D,IACb,MACImG,EAAOjH,GAAU+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,MAAQ,EACxCH,EAAQ9G,EAAiC,GAAvB+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMgG,MACjCE,EAAQhH,EAAiC,GAAvB+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMkG,MACjCrG,GAAgBoG,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMH,eAC/BwG,EAAgBnH,EAAUiH,GAAOvG,EAAAA,EAAAA,IAASoG,EAAME,GAE9CI,GAAY9F,EAAAA,EAAAA,GAAoBX,EAAewG,EAAenD,GAEpE,OAAApB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO9B,GAAI,IACPgG,OAAME,OAAMC,OACZtG,gBACA0G,SAAUP,EAAO,EAAIM,EAAUE,YAAc,EAC7CC,SAAUP,EAAO,EAAII,EAAUI,YAAc,EAC7CC,SAAUR,EAAO,EAAIG,EAAUM,YAAc,QAI1D,CACC2D,EAASS,QACT9L,EACAgE,KAGR2I,EAAAA,EAAAA,WAAU,KACN,IACI+D,EAAAA,EAAAA,IAAczF,IACd0F,MAAMC,QAAkB,OAAV3F,QAAU,IAAVA,OAAU,EAAVA,EAAY4F,cAC1BxF,EAASK,MAAMrM,OAAS,GACxBgM,EAASM,UAAUtM,OAAS,EAC9B,CACE,MAAM,YACFwR,EAAW,aACXC,EAAY,UACZC,EAAS,YACTC,EAAW,cACXC,EAAa,eACbC,EAAc,iBACdC,GACAlG,EAUGmG,GAJcnG,EAAWgG,eAAiBhG,EAAWoG,cACxCpG,EAAWqG,UAAYrG,EAAWsG,UAClCtG,EAAWuG,aAAevG,EAAWwG,YAErCxG,EAAWxC,aAAewC,EAAWyG,YAAc,GACrEC,EAActG,EAASlD,UAAU5I,KAAKqS,IACxCnS,EAAAA,EAAAA,IAAcmS,EAAEnJ,YAAa2I,IAEnCtN,GACcxD,EAAAA,EAAAA,IAAQ2Q,GAAevM,IAAI5D,GAAQgJ,OAAO6F,YACtC7F,OAAO8F,QAAQpL,EAAAA,IAA0BE,IAAImN,IAAmB,IAADC,EAAA,IAAhBhC,EAAKzM,GAAMwO,EACtD,MAAO,CAAC/B,EAAc,QAAXgC,EAAEhR,EAAKgP,UAAI,IAAAgC,EAAAA,EAAIzO,QAI1ClD,EAAeoE,IAAI3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ2B,GAAI,IACPwN,MAAO9G,EAAW+G,QAAU,GAC5BC,MAAOhH,EAAW+G,QAAU,GAC5BE,QAASjH,EAAWkH,UAAWC,EAAAA,EAAAA,IAAUnH,EAAWkH,UAAY,GAChE1J,YAAawC,EAAWyG,aAAwB,OAAVzG,QAAU,IAAVA,OAAU,EAAVA,EAAYxC,cAAe,GACjEC,eAA0B,OAAXiJ,QAAW,IAAXA,OAAW,EAAXA,EAAajJ,gBAAiB,GAC7CqI,UAAW9F,EAAW8F,WAAa,GACnCC,YAAa/F,EAAW+F,aAAe,GACvCE,eAAgBjG,EAAWiG,gBAAkB,GAC7CC,iBAAkBlG,EAAWkG,kBAAoB,GACjDkB,cAAepH,EAAWoH,eAAiB,EAC3CxJ,aAAcoC,EAAWI,UAAY,EACrCiH,OAAQrH,EAAWqH,QAAU,GAC7BC,YAAatH,EAAWsH,aAAe,EACvC3R,oBAAqBqK,EAAWrK,qBAAuB,KAG3DyL,EACIwE,EAAYnM,IAAI5D,IAAI8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb4P,EAAAA,IAAuB,IAC1BtR,QAASJ,EAAKI,SAAW,GACzBuR,UAAW3R,EAAKyN,cAAgB,GAChCmE,SAAU5R,EAAK4R,UAAY,GAC3BzC,SAAUnP,EAAKmP,UAAY,EAC3B0C,QAAS7R,EAAKmP,UAAY,EAC1BC,UAAWpP,EAAKoP,WAAa,EAC7BnP,OAAQD,EAAKC,QAAU,EACvB6R,UAAW9R,EAAK+R,WAAa,GAC7BC,SAAUhS,EAAKgS,UAAY,EAC3BhM,KAAMhG,EAAKgG,MAAQ,EACnBiM,IAAIjS,EAAKkS,SAAW,EACpBtE,MAAM5N,EAAKmS,WAAa,GACxBjM,KAAMlG,EAAKkG,MAAQ,EACnBC,KAAMnG,EAAKmG,MAAQ,EACnBI,SAAUvG,EAAKuG,UAAY,EAC3BE,SAAUzG,EAAKyG,UAAY,EAC3BE,SAAU3G,EAAK2G,UAAY,EAC3ByL,eAAgBpS,EAAKoS,gBAAkB,EACvCC,UAAWrS,EAAKqS,WAAa,MAIrC,IAAIC,EAAY,GAEhB,MAAMC,EAAyBC,IAC3B,MAAMC,EAAWlI,EAASM,UAAUpM,KAAKiU,IACrClE,EAAAA,EAAAA,IAAckE,EAAI1E,cAAewE,IAErC,OAAe,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUE,mBAAoB,IAGzC,GAAI1C,KAActR,EAAAA,EAAAA,IAAcsR,EAAW,GAAI,CAC3C,MAAM2C,EAAcrI,EAASK,MAAMnM,KAAKoU,IACpClU,EAAAA,EAAAA,IAAckU,EAAEC,eAAgB7C,IAE9B8C,EAAmBR,EAAsB,UAE3CK,GACAN,EAAUU,KAAK,CACXC,gBAAiBL,EAAYE,eAC7BI,QAASN,EAAY9E,iBACrBqF,oBAAqBJ,EACrBK,iBAAkB,UAG9B,CAEA,GAAIhD,KAAmBzR,EAAAA,EAAAA,IAAcyR,EAAgB,GAAI,CACrD,MAAMiD,EAAmB9I,EAASK,MAAMnM,KAAKoU,IACzClU,EAAAA,EAAAA,IAAckU,EAAEC,eAAgB1C,IAE9BkD,EAAwBf,EAAsB,aAEhDc,GACAf,EAAUU,KAAK,CACXC,gBAAiBI,EAAiBP,eAClCI,QAASG,EAAiBvF,iBAC1BqF,oBAAqBG,EACrBF,iBAAkB,eAG9B,EAEA5T,EAAAA,EAAAA,IAAQwQ,GAAcnP,QAAQ,CAACb,EAAMiF,KACjC,MAAMsO,EAAWhJ,EAASK,MAAMnM,KAAKoU,IACjClU,EAAAA,EAAAA,IAAckU,EAAEC,eAAgB9S,EAAKwT,WAGzC,IAAIC,EAAazT,EAAK0T,YAClBlB,EAAexS,EAAK2T,eAEnBF,GAAcjB,IACfiB,EAAalB,EAAsBC,IAGnCe,GACAjB,EAAUU,KAAK,CACXC,gBAAiBM,EAAST,eAC1BI,QAASK,EAASzF,iBAClBqF,oBAAqBM,GAAc,GACnCL,iBAAkBZ,GAAgB,OAM9C/G,EAAc6G,EAIlB,GACD,CAACnI,EAAYI,EAASK,MAAOL,EAASM,UAAWN,EAASlD,aACvDwE,EAAAA,EAAAA,WAAU,KACL7I,EAAmBnB,GACD,IAAIA,GAEL+B,IAAI5D,IACb,MACImG,EAAOjH,GAAU+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMmG,MAAQ,EACxCH,EAAQ9G,EAAiC,GAAvB+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMgG,MACjCE,EAAQhH,EAAiC,GAAvB+G,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMkG,MACjCrG,GAAgBoG,EAAAA,EAAAA,IAAa,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMH,eAC/BwG,EAAgBnH,EAAUiH,GAAOvG,EAAAA,EAAAA,IAASoG,EAAME,GAE9CI,GAAY9F,EAAAA,EAAAA,GAAoBX,EAAewG,EAAenD,GAEpE,OAAApB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO9B,GAAI,IACPgG,OAAME,OAAMC,OACZtG,gBACA0G,SAAUP,EAAO,EAAIM,EAAUE,YAAc,EAC7CC,SAAUP,EAAO,EAAII,EAAUI,YAAc,EAC7CC,SAAUR,EAAO,EAAIG,EAAUM,YAAc,QAI1D,CACC2D,EAASS,QACT9L,EACAgE,IAEX,MAAM0Q,EAAmBA,KACjB7J,GAAWA,IAEf,MAAM8J,EAAsBrI,EAAW5H,IAAIgH,IAAK,CAC5CqI,gBAAiBrI,EAAMqI,gBACvBE,oBAAqBvI,EAAMuI,uBAG3BW,EAAmBhV,EAAgBgG,OACnC9E,KAAoC,IAA1B2I,OAAO3I,EAAKmP,WAA4C,IAAzBxG,OAAO3I,EAAK6R,YAGzDjF,EAAAA,EAAAA,GAAU,CACNC,QAAQ,+BAERkH,OAAO,OACPC,UAAQlS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDsI,GACAhL,GAAW,IACd8R,OAAO9R,EAAY6R,MACnBgD,cAAeH,EACfD,oBAAqBA,EACrB1D,cAAepR,EACfsL,gBAAgBA,MAErB6J,KAAKhH,IAEDA,EAAKD,SAtSR5N,EAAeiM,EAAAA,IACfC,EAAkB,IAClBvI,EAAmB,IACnByI,EAAc,IAqSpB0I,EAAAA,GAAMlH,QAAQC,EAAKkH,SACf9J,GAAWA,IACfJ,GAAQ,IAEEiK,EAAAA,GAAME,KAAKnH,EAAKkH,WAErBE,MAAM3R,GAAK+L,QAAQC,MAAMhM,IAAI4R,QAAQ,KAChCvK,GAAYA,OAIpB,OAAKC,GAGDlI,EAAAA,EAAAA,KAACyS,EAAAA,EAAM,CAACvK,KAAMA,EAAMC,QAASA,IAAMA,GAAQ,GAAQuK,SAAS,KAAKC,WAAS,EAAAzS,UACtEE,EAAAA,EAAAA,MAAA,OAAK4B,MAAO,CAAE4Q,UAAW,OAAQC,SAAU,QAAS3S,SAAA,EAEhDF,EAAAA,EAAAA,KAAC8S,EAAAA,EAAsB,CACnBC,cAAehW,EACfiW,iBAAkBxJ,EAClBtB,KAAMiB,EAAOE,iBACblB,QAASA,KACLiB,EAAUtJ,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEuJ,kBAAkB,KAC9CO,EAAyB,OAE7BxM,SAAUoL,EAASpL,SACnB6V,OAAQzK,EAASO,MACjBH,IAAKJ,EAASI,IACdsK,QAAS1K,EAASQ,OAClBrC,cAAetJ,EAAYsJ,cAC3BxJ,QAASA,EACTiL,WAAYuB,EACZwJ,cAAYpT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO4P,EAAAA,IAAuB,IAAER,OAAQ9R,EAAY+R,QAChElG,cAAeV,EAASU,iBAG5B9I,EAAAA,EAAAA,MAACgB,EAAAA,EAAI,CAAAlB,SAAA,EACDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8DAA6DD,SAAA,EACxEF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,4BAA2BD,SAAC,mBAC5CE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CAACvD,QAASA,IAAM2G,GAAQ,GAAOjI,UACtCF,EAAAA,EAAAA,KAACoT,EAAAA,EAAK,OAEVpT,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACG,QAASA,IAAMqQ,IAAoBvQ,QAAQ,YAAWpB,SAAC,kBAGvEE,EAAAA,EAAAA,MAACiT,EAAAA,EAAW,CAAAnT,SAAA,EACRE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,UAASD,SAAA,EAEpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAiCD,UAC5CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAa6B,MAAO,CAAEsR,UAAW,OAAQC,OAAQ,QAASrT,UACrEF,EAAAA,EAAAA,KAACwT,EAAc,CACXC,WAAYhK,EACZC,cAtVJgK,IAC5BhK,EAAcgK,IAsVkBC,WAAYnL,EAASK,MACrB+K,aAAcpL,EAASM,iBAMnC9I,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wCAAuCD,UAClDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAmB6B,MAAO,CAAEsR,UAAW,OAAQC,OAAQ,QAASrT,UAC3EF,EAAAA,EAAAA,KAAC6T,EAAAA,EAA6B,CAC1BxW,YAAaA,EACbC,eAAgBA,EAChBgI,UAAWkD,EAASlD,UACpBE,SAAUgD,EAASG,OACnBpD,YAAaiD,EAASjD,YACtBG,oBAAqB8C,EAAS9C,8BAW9C1F,EAAAA,EAAAA,KAAC8T,EAAAA,GAAe,CACZC,MAAM,QACNC,iBAAkB,GAClBC,eAAgB,GAChBC,oBAAkB,EAClBC,mBAAiB,EACjBC,YACIhU,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACHG,QAASA,KACLoI,EAAyB,MACzBR,EAAUtJ,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEuJ,kBAAkB,MAElDgL,GAAI,CAAEC,GAAI,GACVhT,QAAQ,WACRC,KAAK,SACLgT,WAAWvU,EAAAA,EAAAA,KAACwU,EAAAA,EAAG,IACf5Q,WACKC,EAAAA,EAAAA,IAAcxG,EAAYuI,cACvB7I,EAAgBP,OAAS,IACtBqH,EAAAA,EAAAA,IAAcxG,EAAY+R,OACpClP,SACJ,iBAEDF,EAAAA,EAAAA,KAACyU,EAAAA,EAAyB,CACtBzM,UAAWA,EACXC,WAAYA,EACZC,KAAMiB,EAAOG,oBACbnB,QAASA,IAAMiB,EAAUtJ,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEwJ,qBAAqB,KAChEoL,SAAqB,OAAXrX,QAAW,IAAXA,OAAW,EAAXA,EAAauI,YACvB+O,cAAe5X,EACf6X,iBAAkBpL,EAClBC,WAAYA,EACZC,cAAeA,EACftM,SAAUoL,EAASpL,SACnBuJ,cAAetJ,EAAYsJ,cAC3BxJ,QAASA,EACTE,YAAaA,EACbC,eAAgBA,EAChB4V,QAAS1K,EAASQ,OAClBE,cAAeV,EAASU,mBAoBxC2L,UAAW,IAC5B,IAAI9X,KACA+Q,MAAMgH,KAAK,CAAEtY,OAAQqN,EAAgB,EAAIA,EAAgB,IAAKhI,IAAIb,GAAK2O,EAAAA,KAC5E5M,OAAO9E,KAAoC,IAA1B2I,OAAO3I,EAAKmP,WAA4C,IAAzBxG,OAAO3I,EAAK6R,YAGtCiF,QAAS,EACLC,EAAAA,EAAAA,IAAU,YAAa,WACvBA,EAAAA,EAAAA,IAAU,WAAY,WACtBA,EAAAA,EAAAA,IAAU,WAAY,WACtBA,EAAAA,EAAAA,IAAU,UAAW,WACrBA,EAAAA,EAAAA,IAAU,YAAa,UACvB,CACIC,UAAW,EACXC,aAAc,MACdC,cAAc,EACdC,KAAMC,IAAc,IAAb,IAAEnT,GAAKmT,EACV,MAAM,KAAEpR,EAAO,EAAC,KAAEE,EAAO,EAAC,KAAEC,EAAO,EAAC,SAAEI,EAAW,EAAC,SAAEE,EAAW,EAAC,SAAEE,EAAW,GAAM1C,EAC7EoC,EAAgBnH,EAAUiH,GAAOvG,EAAAA,EAAAA,IAASoG,EAAME,GAChDI,EAAYpH,EAAUyH,GAAW/G,EAAAA,EAAAA,IAAS2G,EAAUE,GAE1D,OAAQb,EAAAA,EAAAA,IAAiB,OAAH3B,QAAG,IAAHA,OAAG,EAAHA,EAAK7D,SAAa,GAAA0M,OAAMxG,EAAS,QAAAwG,OAAOzG,EAAa,OAArC,KAG9C,CACI2Q,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAME,IAAA,IAAAC,EAAAC,EAAA,IAAC,IAAEtT,GAAKoT,EAAA,OAEA,QAFAC,EAEb,QAFaC,EAAKhN,EAASQ,OAAOtM,KAC/BsM,IAAUpM,EAAAA,EAAAA,IAAcoM,EAAOgH,UAAc,OAAH9N,QAAG,IAAHA,OAAG,EAAHA,EAAK6N,mBAClD,IAAAyF,OAAA,EAFkBA,EAEhBrJ,mBAAW,IAAAoJ,EAAAA,EAAI,MAEtBP,EAAAA,EAAAA,IAAU,SAAU,UACpB,CACIG,cAAc,EACdC,KAAMK,IAAc,IAAb,IAAEvT,GAAKuT,EACV,OACIrV,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CACPvD,QAASA,KACLoI,EAAyB1H,GACzBkH,EAAUtJ,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEuJ,kBAAkB,MAElDnE,KAAK,QACL3D,KAAK,SACLqC,WAAWC,EAAAA,EAAAA,IAAiB,OAAH3B,QAAG,IAAHA,OAAG,EAAHA,EAAK7D,SAAS6B,UAEvCF,EAAAA,EAAAA,KAAC0V,EAAAA,EAAI,OAET1V,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CACPG,KAAK,QACL3D,KAAK,SACLC,QAASA,IAAMgI,EACX1J,GAAOA,EAAIiD,OAAOpG,KAAQC,EAAAA,EAAAA,IAAcD,EAAI0B,QAAS6D,EAAI7D,WAE7DnC,MAAM,QACN0H,WAAWC,EAAAA,EAAAA,IAAiB,OAAH3B,QAAG,IAAHA,OAAG,EAAHA,EAAK7D,SAAS6B,UAEvCF,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,UAKvB+P,aAAc,SACdD,UAAW,OAKvBjV,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAC2V,EAAAA,EAAsB,CACnB3Y,gBAAiBA,EACjBiE,mBAAoBA,EACpBC,cAAesH,EAASS,QACxB9L,QAASA,EACTgE,QAASA,KAGbnB,EAAAA,EAAAA,KAAA,UAEDA,EAAAA,EAAAA,KAAC4V,EAAAA,EAAsB,CACtB7Y,gBAAiBA,EACjBC,gBAAiBA,EACjBC,iBAAkBA,EAClBC,YAAaA,EACbC,QAASA,EACTC,SAAUoL,EAASpL,SACnBC,YAAaA,EACbC,eAAgBA,eA1NlB,MAwOhBkW,EAAiBqC,IAA6E,IAA5E,WAAEpC,EAAa,GAAE,cAAE/J,EAAa,WAAEiK,EAAa,GAAE,aAAEC,EAAe,IAAIiC,EAgB1F,OACIzV,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8DAA6DD,SAAA,EACxEF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kBAAiBD,SAAC,oBAChCF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACHC,QAAQ,WACRpF,MAAM,UACNqF,KAAK,SACLC,QAASA,IAAMkI,EAAc5J,GAAO,IAAIA,EAAK,CACzCoR,gBAAiB,GACjBC,QAAS,GACTC,oBAAqB,GACrBC,iBAAkB,MAClBnR,SACP,YAGLE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,QAAOD,SAAC,SACtBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,QAAOD,SAAC,gBACtBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,QAAOD,SAAC,cACtBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,QAAOD,SAAC,YAG9BF,EAAAA,EAAAA,KAAA,SAAAE,UACKzC,EAAAA,EAAAA,IAAQgW,GAAY5R,IAAI,CAACK,EAAKC,KAE3B,MAAM2T,EAAmB5T,EAAIkP,qBA3ClBX,KAC3B,MAAMC,EAAWkD,EAAalX,KAAKiU,IAC/BlE,EAAAA,EAAAA,IAAckE,EAAI1E,cAAewE,IAErC,OAAe,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUE,mBAAoB,IAuC+BJ,CAAsBtO,EAAImP,kBAE9E,OACIjR,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,SAAEiC,EAAQ,KAChDnC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kBAAiBD,UAC3BF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAO0B,EAAIgP,gBACXjV,MAAOiG,EAAIiP,SAAW,gBAE1BxQ,SAAUC,IACgB+S,EAAWjX,KAAKqZ,IAClCnZ,EAAAA,EAAAA,IAAcmZ,EAAEhF,eAAgBnQ,EAAEJ,QADtC,MAGMwV,EAAWvC,EAAW5R,IAAI,CAACgH,EAAO9G,IACpCA,IAAMI,GAAKpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ8I,GAAK,IACRqI,gBAAiBtK,OAAOhG,EAAEJ,OAC1B2Q,QAASvQ,EAAE3E,QACX4M,GAERa,EAAcsM,IAElBlT,QAAS6Q,EACJ5Q,OAAO8F,IACH4K,EAAWzQ,KAAK,CAACiT,EAAIlU,IAClBA,IAAMI,IAASvF,EAAAA,EAAAA,IAAcqZ,EAAG/E,gBAAiBrI,EAAMkI,kBAG9DlP,IAAIoU,IAAE,CACHzV,MAAOyV,EAAGlF,eACV9U,MAAOga,EAAGlK,oBAGlB5I,OAAQC,EAAAA,GACRI,cAAc,EACdC,YAAY,oBAGpBzD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAiB6B,MAAO,CAAE0Q,SAAU,QAASjQ,SAAU,SAAUvC,UAC3EE,EAAAA,EAAAA,MAAA,UACII,MAAOsV,EACPnV,SAAUC,IACN,MAAMsV,EAAmBtC,EAAalX,KAAKqZ,IACvCnZ,EAAAA,EAAAA,IAAcmZ,EAAEnF,iBAAkBhQ,EAAEC,OAAOL,QAEzCwV,EAAWvC,EAAW5R,IAAI,CAACgH,EAAO9G,IACpCA,IAAMI,GAAKpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ8I,GAAK,IACRuI,oBAAqBxQ,EAAEC,OAAOL,MAC9B6Q,kBAAkC,OAAhB6E,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBjK,gBAAiB,KACrDpD,GAERa,EAAcsM,IAElB7V,UAAU,wBAAuBD,SAAA,EAEjCF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,GAAEN,SAAC,WAChB0T,EAAa/R,IAAI,CAACoU,EAAIE,KACnBnW,EAAAA,EAAAA,KAAA,UAAQQ,MAAOyV,EAAGrF,iBAAiB1Q,SAC9B+V,EAAGhK,eADiCkK,UAMrDnW,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAgBD,UAC1BF,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,CACPvD,QAASA,KACL,MAAMwU,EAAWvC,EAAW1Q,OAAO,CAACiC,EAAGjD,IAAMA,IAAMI,GACnDuH,EAAcsM,IAElB9Q,KAAK,QAAOhF,UAEZF,EAAAA,EAAAA,KAACmF,EAAAA,EAAM,CAACjJ,MAAM,gBAvEjBiG,a,uNC3uBrC,MAkaA,EAla+BrF,IAexB,IAADsZ,EAAAC,EAAA,IAf0B,SAC5BnW,EAAQ,cACR6S,EAAgB,GAAE,iBAClBC,EAAgB,KAChB9K,GAAO,EAAK,QACZC,EAAO,SACP/K,EAAW,GAAE,OACb6V,EAAS,GAAE,IACXrK,EAAM,GAAE,QACRsK,EAAU,GAAE,cACZvM,EAAa,QACbxJ,EAAO,WACPiL,EAAa,KAAI,aACjB+K,EAAe,CAAC,EAAC,cACjBjK,EAAgB,IACnBpM,EAEG,MAAOwZ,EAAgBC,IAAqB7N,EAAAA,EAAAA,UAASyK,GAE/CjW,GAAcN,EAAAA,EAAAA,IAAc+J,EAAe,GAC3C1J,GAAmBL,EAAAA,EAAAA,IAAc+J,EAAe,IAEtDmD,EAAAA,EAAAA,WAAU,MACF+D,EAAAA,EAAAA,IAAczF,IAAeF,GAC7BqO,EAAkBzW,GACdmH,OAAO6F,YACH7F,OAAO8F,QAAQjN,GAAK+B,IAAImL,IAAA,IAAEC,EAAKzM,GAAMwM,EAAA,MAAK,CAACC,EAAK7E,EAAW6E,GAAO7E,EAAW6E,GAAOzM,QAIjG,CAAC4H,IAEJ,MAAMhM,EAAsBE,IAAS,IAAAka,EAAA,OAAqE,QAArEA,EAAa,OAARpZ,QAAQ,IAARA,OAAQ,EAARA,EAAUV,KAAKC,IAAOC,EAAAA,EAAAA,IAAiB,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,WAAYP,WAAW,IAAAka,EAAAA,EAAI,CAAC,GAEzGC,EAAcA,KAChBF,EAAkBpD,GAClBhL,KAmDJ,OACI/H,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,CACKA,GAEDE,EAAAA,EAAAA,MAACqS,EAAAA,EAAM,CACHvK,KAAMA,EACNC,QAASsO,EACT/D,SAAS,KAAKC,WAAS,EAAAzS,SAAA,EAEvBF,EAAAA,EAAAA,KAAC0W,EAAAA,EAAW,CAACvW,UAAU,gBAAeD,UAClCF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAEVE,EAAAA,EAAAA,MAAA,QAAMuW,SAAU/V,IACZA,EAAEgW,iBACEN,EAAejY,SA5D/B2U,EAAiBlT,GAwCN,IAvCkBA,EAAIiD,OAAO8T,KAAYja,EAAAA,EAAAA,IAAcia,EAAQxY,QAASiY,EAAejY,UAEhE4I,OAAO6F,YACjC7F,OAAO8F,QAAQoG,GAActR,IAAImN,IAAmB,IAAjB/B,EAAKzM,GAAMwO,EAC1C,MAAM9B,EAAgB9Q,EAAmBka,EAAejY,SAClDC,EAAgBnB,EAAU+P,EAAc3O,OAAS2O,EAAc1O,MAC/D2O,EAAY7O,EAAgB,GAE5B,SAAE8O,EAAQ,UAAEC,EAAS,OAAEnP,GAAWoY,EAElCnV,EAAUlE,EAAmB,UAAYC,EAAc,SAAW,MAClEoQ,GAAc7O,EAAAA,EAAAA,GAAoB4O,EAAW/O,EAAe6C,GAC5DoM,GAAU9O,EAAAA,EAAAA,GAAoBP,EAAQI,EAAe6C,GAErDqM,EAAWrQ,EAA6B,EAAnBoQ,EAAQE,SAC7BC,EAAUvQ,EAAUoQ,EAAQI,SAAW,EACvCnJ,EAAYrH,EAAgC,EAAtBoQ,EAAQ9I,YAC9BG,EAAWzH,EAAUoQ,EAAQ1I,YAAc,EAEjD,OAAQoI,GACJ,IAAK,YAAa,MAAO,CAACA,EAAKC,EAAcxB,cAC7C,IAAK,eAAgB,MAAO,CAACuB,EAAKK,EAAYM,aAC9C,IAAK,YAAa,MAAO,CAACX,EAAKG,GAC/B,IAAK,SAAU,MAAO,CAACH,EAAKE,EAAY,EAAI,GAC5C,IAAK,iBAAkB,MAAO,CAACF,EAAKM,EAAQK,aAC5C,IAAK,WAAY,MAAO,CAACX,EAAK3O,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAAC2O,EAAY,OAAPO,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAACP,EAAKhQ,EAAmB,EAAIuH,GACrD,IAAK,OAAQ,MAAO,CAACyI,EAAY,OAAPS,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAACT,EAAKhQ,EAAmB,EAAI2H,GACrD,IAAK,YAAa,MAAO,CAACqI,EAAKM,EAAQ7O,UAEvC,QAAS,MAAO,CAACuO,EAAKqJ,EAAerJ,IAAQzM,SAQ7DiW,KAoBgBrE,EAAAA,GAAME,KAAK,mBAEjBpS,SAAA,EACEF,EAAAA,EAAAA,KAAC8W,EAAAA,EAAa,CAAA5W,UACVE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EAGrBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,WACPF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CAAEA,MAAO8V,EAAeS,QAAS9a,MAAOqa,EAAeU,OAC9DrW,SAAWC,GAAM2V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEiX,QAASnW,EAAEJ,MAAOwW,MAAOpW,EAAE3E,SAChF6G,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,MACvCmN,EAAOpR,IAAIlF,IAAG,CAAO6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKqa,MAAO/a,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKsa,eAE3D9T,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbsC,cAAe,IACfrC,aAAcC,EAAAA,SAKtBvD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,WACPF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CAAEA,MAAO8V,EAAeY,QAASjb,MAAOqa,EAAea,OAC9DxW,SAAWC,GACP2V,EAAmBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAG,IAAEoX,QAAStW,EAAEJ,MAAO2W,MAAOvW,EAAE3E,SAErE6G,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,MACvC1I,EACE2F,OACIqU,IACGd,EAAeS,UACTna,EAAAA,EAAAA,IAAcwa,EAAIJ,MAAOV,EAAeS,UAGrDrZ,OAAO,CAACC,EAAKyZ,KAELzZ,EAAIqF,KAAMqU,GAAQA,EAAI7W,QAAU4W,EAAIE,gBAErC3Z,EAAIsT,KAAK,CACLzQ,MAAO4W,EAAIE,cACXrb,MAAOmb,EAAIG,YAGZ5Z,GACR,KAEXwF,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbsC,cAAe,IACfrC,aAAcC,EAAAA,SAKtBvD,EAAAA,EAAAA,MAAA,OAAKD,UACD8G,OAAOuQ,OAAOlB,EAAgB,aAAe,eAAiB,aACjEpW,SAAA,EACGE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,cAAUF,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,QAC9BtG,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAO8V,EAAejY,QACtBpC,MAC8C,QADzCma,EACDha,EAAmBka,EAAejY,gBAAQ,IAAA+X,OAAA,EAA1CA,EAA4C1K,cAGpD5F,YAAYjC,EAAAA,EAAAA,IAAcyS,EAAenH,QACzC9L,iBAAkBC,SAASC,KAC3B5C,SAAUC,IACN,MAAM6W,EAAcrb,EAAmBwE,EAAEJ,OACzC+V,EAAkBzW,IAAG,IAAA4X,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAG,IAENqX,MAA4B,QAAvBO,EAAED,EAAYF,iBAAS,IAAAG,EAAAA,EAAI5X,EAAIqX,MACpCD,QAAkC,QAA3BS,EAAEF,EAAYH,qBAAa,IAAAK,EAAAA,EAAI7X,EAAIoX,QAC1CF,MAA6B,QAAxBY,EAAEH,EAAYR,kBAAU,IAAAW,EAAAA,EAAI9X,EAAIkX,MACrCD,QAA0B,QAAnBc,EAAEJ,EAAYT,aAAK,IAAAa,EAAAA,EAAI/X,EAAIiX,QAElC1Y,QAASuC,EAAEJ,MACX6M,UAAgC,QAAvByK,EAAEL,EAAYpK,iBAAS,IAAAyK,EAAAA,EAAI,EACpC1K,SAAU,EACVlP,OAAQ,EACRiS,QAA2B,QAApB4H,EAAEN,EAAYQ,cAAM,IAAAF,EAAAA,EAAIjY,EAAIqQ,QACnCC,UAA4B,QAAnB4H,EAAEP,EAAY5L,aAAK,IAAAmM,EAAAA,EAAIlY,EAAIsQ,UACpCP,SAAqB,OAAX4H,QAAW,IAAXA,OAAW,EAAXA,EAAa5H,cAG/B/M,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,MACvC,IACI1I,EACE2F,OAAOqU,IAAOd,EAAeS,UAAUna,EAAAA,EAAAA,IAAcwa,EAAIJ,MAAOV,EAAeS,UAC/EhU,OAAOqU,IAAOd,EAAeY,UAAUta,EAAAA,EAAAA,IAAcwa,EAAIE,cAAehB,EAAeY,WAC9FrV,IAAIlF,IAAG,CACL6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKE,WACZZ,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAK+O,aACZ5F,YAIO,IAHHiN,EAAcmF,UAAUC,IAAOvb,EAAAA,EAAAA,IACxB,OAAHub,QAAG,IAAHA,OAAG,EAAHA,EAAK9Z,QAAY,OAAH1B,QAAG,IAAHA,OAAG,EAAHA,EAAKE,iBAKnCsG,OAAQC,EAAAA,GACRI,cAAc,EACd6C,UAAQ,EACR5C,YAAa,iBACbsC,cAAe,IACfrC,aAAcC,EAAAA,QAKrBsD,OAAOuQ,OAAOlB,EAAgB,eAC3BlW,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,YACPF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CACHlC,MAAO,CACHA,MAAqB,OAAd8V,QAAc,IAAdA,OAAc,EAAdA,EAAgBvG,UACvB9T,OAA+E,QAAxEoa,EAAAnD,EAAQxW,KAAK0b,IAAKxb,EAAAA,EAAAA,IAAcwb,EAAEpI,UAAyB,OAAdsG,QAAc,IAAdA,OAAc,EAAdA,EAAgBvG,mBAAW,IAAAsG,OAAA,EAAxEA,EAA0ElK,cAAe,IAEpGxL,SAAWC,GAAM2V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEiQ,UAAWnP,EAAEJ,SAClEsC,QAAS,CACL,CAAEtC,MAAO,GAAIvE,MAAO,SAAU6J,YAAY,GAC1C,CACI7J,MAAO,0BACP6G,SAASrF,EAAAA,EAAAA,IAAQyV,GAASnQ,OAAOoD,IAC7B,MAAMkS,GAAY5a,EAAAA,EAAAA,IAAQyL,GAE1B,OAAyB,IAArBmP,EAAU7b,QAEP6b,EAAUrV,KACbsV,IACI1b,EAAAA,EAAAA,IAAiB,OAAH0b,QAAG,IAAHA,OAAG,EAAHA,EAAKtI,UAAc,OAAH7J,QAAG,IAAHA,OAAG,EAAHA,EAAK6J,aAChCpT,EAAAA,EAAAA,IAA4B,OAAd0Z,QAAc,IAAdA,OAAc,EAAdA,EAAgBjY,QAAY,OAAHia,QAAG,IAAHA,OAAG,EAAHA,EAAKzb,eAGxDgF,IAAIlF,IAAG,CACN6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKqT,UACZ/T,OAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKwP,aACN,WACAoM,EAAAA,EAAAA,GAA8B,OAAdjC,QAAc,IAAdA,OAAc,EAAdA,EAAgBjY,QAAY,OAAH1B,QAAG,IAAHA,OAAG,EAAHA,EAAKqT,UAAW9G,GACzD,QAGd,CACIjN,MAAO,gBACP6G,SAASrF,EAAAA,EAAAA,IAAQyV,GAASnQ,OAAOoD,IAC7B,MAAMkS,GAAY5a,EAAAA,EAAAA,IAAQyL,GAE1B,OAAyB,IAArBmP,EAAU7b,SAEN6b,EAAUrV,KAAKsV,IACnB1b,EAAAA,EAAAA,IAAiB,OAAH0b,QAAG,IAAHA,OAAG,EAAHA,EAAKtI,UAAc,OAAH7J,QAAG,IAAHA,OAAG,EAAHA,EAAK6J,aACnCpT,EAAAA,EAAAA,IAA4B,OAAd0Z,QAAc,IAAdA,OAAc,EAAdA,EAAgBjY,QAAY,OAAHia,QAAG,IAAHA,OAAG,EAAHA,EAAKzb,eAEjDgF,IAAIlF,IAAG,CACN6D,MAAU,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAKqT,UACZ/T,MAAU,OAAHU,QAAG,IAAHA,OAAG,EAAHA,EAAKwP,iBAIxBhJ,OAAQC,EAAAA,GACR0C,aAAajC,EAAAA,EAAAA,IAA4B,OAAdyS,QAAc,IAAdA,OAAc,EAAdA,EAAgBjY,SAC3CgF,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,gBACbC,aAAcC,EAAAA,SAO1BvD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wBAAuBD,SAAA,EAClCE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,aAASF,EAAAA,EAAAA,KAACsG,EAAAA,EAAY,QAC7BtG,EAAAA,EAAAA,KAAA,SACIqG,UAAQ,EACR7F,MAAO8V,EAAelJ,SAAWkJ,EAAelJ,SAAW,GAC3D3M,QAAS+X,EAAAA,GACT5U,WAAWC,EAAAA,EAAAA,IAAcyS,EAAejY,SACxCsC,SAAUC,IACF0V,EAAejJ,UACfkJ,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAG,IACN5B,QAAQua,EAAAA,EAAAA,IAAenC,EAAejJ,UAAWzM,EAAEC,OAAOL,OAC1D4M,SAAUxM,EAAEC,OAAOL,SAEhB8V,EAAepY,OACtBqY,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAG,IACNuN,WAAWvI,EAAAA,EAAAA,IAAShF,EAAI5B,OAAQ0C,EAAEC,OAAOL,OACzC4M,SAAUxM,EAAEC,OAAOL,SAGvB+V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAG,IACNsN,SAAUxM,EAAEC,OAAOL,UAI/BL,UAAU,WACVuY,IAAK,OAIZzR,OAAOuQ,OAAOlB,EAAgB,aAC3BlW,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wBAAuBD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,sBACPF,EAAAA,EAAAA,KAAA,SACIQ,MAAO8V,EAAexG,QAAUwG,EAAexG,QAAU,GACzDrP,QAAS+X,EAAAA,GACT5U,WAAWC,EAAAA,EAAAA,IAAcyS,EAAejY,SACxCsC,SAAUC,GAAK2V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BD,GAAG,IACNgQ,QAASlP,EAAEC,OAAOL,SAEtB6F,UAAQ,EACRlG,UAAU,iBAMtBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wBAAuBD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,WACPF,EAAAA,EAAAA,KAAA,SACIQ,MAAO8V,EAAejJ,UAAYiJ,EAAejJ,UAAY,GAC7D5M,QAAS+X,EAAAA,GACT5U,WAAWC,EAAAA,EAAAA,IAAcyS,EAAejY,SACxCsC,SAAUC,GAAK2V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BD,GAAG,IACNuN,UAAWzM,EAAEC,OAAOL,MACpBtC,OAAQ4B,EAAIsN,UAAWqL,EAAAA,EAAAA,IAAe7X,EAAEC,OAAOL,MAAOV,EAAIsN,UAAYtN,EAAI5B,UAE9EmI,UAAQ,EACRlG,UAAU,iBAKlBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wBAAuBD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,SACPE,EAAAA,EAAAA,MAAA,UACII,MACIyG,OAAOuQ,OAAOlB,EAAgB,OAASA,EAAepG,IAClDjJ,OAAOuQ,OAAOlB,EAAgB,WAAaA,EAAenG,QAAU,GAE5ExP,SAAUC,IACN,MAAM+X,EAAgB/X,EAAEC,OAAO8X,cACzB1c,EAAQ2E,EAAEC,OAAOiC,QAAQ6V,GAAeC,KACxCpY,EAAQI,EAAEC,OAAOL,MACvB+V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdD,GAAG,IACNoQ,IAAK1P,EACL2P,QAAS3P,EACTqL,MAAO5P,EACPmU,UAAWnU,MAGnBkE,UAAU,WACVyD,WAAWC,EAAAA,EAAAA,IAAcyS,EAAejY,SAAS6B,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,GAAGoD,UAAQ,EAAA1D,SAAC,WACzB0I,EAAI/G,IAAI,CAACC,EAAGC,KACT/B,EAAAA,EAAAA,KAAA,UAAQQ,MAAOsB,EAAEqO,QAAQjQ,SAAW4B,EAAE+J,OAAP9J,WAM3C3B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,YACPF,EAAAA,EAAAA,KAAA,SACIqG,UAAQ,EACR7F,MAAO8V,EAAepY,OAASoY,EAAepY,OAAS,GACvDuC,QAAS+X,EAAAA,GACT5U,WAAWC,EAAAA,EAAAA,IAAcyS,EAAejY,SACxCsC,SAAUC,GAAK2V,EAAkBzW,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BD,GAAG,IACN5B,OAAQ0C,EAAEC,OAAOL,MACjB6M,UAAWvN,EAAIsN,UAAWtI,EAAAA,EAAAA,IAASlE,EAAEC,OAAOL,MAAOV,EAAIsN,UAAYtN,EAAIuN,aAE3ElN,UAAU,WACVuY,IAAK,aAQrBtY,EAAAA,EAAAA,MAACyY,EAAAA,EAAa,CAAC1Y,UAAU,oDAAmDD,SAAA,EACxEF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACG,QAASA,IAAM+U,EAAkBpD,GAAe5R,KAAK,SAASgT,WAAWvU,EAAAA,EAAAA,KAAC8Y,EAAAA,EAAQ,IAAI5Y,SAAC,WAC/FE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACIF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACE,KAAK,SAASC,QAASiV,EAAYvW,SAAC,YAC5CF,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACE,KAAK,SAASD,QAAQ,WAAUpB,SAAC,uB,+fCnarE,QCDe,SAA4B6Y,EAAWC,GAElD,MAAO,IAAM,IAUjB,E,qCCXA,QCAe,SAA4BC,EAAsBC,GAE7D,MAAO,IAAM,IAoBjB,ECtBA,Q,SAAqB,E,0BCArB,QCDe,SAAyBC,EAAOC,EAAUC,EAAeC,EAAUC,GAE9E,OAAO,IAOX,E,gDCaO,MAAMC,EAA8B,CACzCC,UAAWC,IAITC,EAAAA,EAAmBF,UAAUC,I,kDC1BjC,QCAe,SAAsBE,EAASC,GAC5C,IAAIC,EAAUC,EACd,OAAoBC,EAAAA,eAAqBJ,KAGiM,IAHrLC,EAASI,QAGzB,OAApCH,EAAWF,EAAQrY,KAAK2Y,SAAmBJ,EAA6C,OAAjCC,EAAgBH,EAAQrY,OAA6D,OAA3CwY,EAAgBA,EAAcI,WAA8D,OAAxCJ,EAAgBA,EAAcvZ,YAAiB,EAASuZ,EAAcG,QAC9N,C","sources":["../node_modules/@mui/material/utils/createChainedFunction.js","Pages/Sales/convertedStatus.js","Pages/Sales/SalesInvoice/taxDetails.jsx","../node_modules/@mui/icons-material/esm/Close.js","Pages/Sales/SalesInvoice/manageExpences.jsx","Pages/Sales/SalesInvoice/manageGeneralInfo.jsx","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/icons-material/ArrowOutward.js","Pages/Sales/SalesInvoice/directSaleInvoiceFromPos.jsx","Pages/Sales/SaleOrder/addItemToCart.jsx","../node_modules/@mui/material/utils/deprecatedPropType.js","../node_modules/@mui/utils/deprecatedPropType/deprecatedPropType.js","../node_modules/@mui/material/utils/requirePropFactory.js","../node_modules/@mui/utils/requirePropFactory/requirePropFactory.js","../node_modules/@mui/material/utils/setRef.js","../node_modules/@mui/material/utils/unsupportedProp.js","../node_modules/@mui/utils/unsupportedProp/unsupportedProp.js","../node_modules/@mui/material/utils/index.js","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/isMuiElement/isMuiElement.js"],"sourcesContent":["import createChainedFunction from '@mui/utils/createChainedFunction';\nexport default createChainedFunction;","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]\r\n\r\nexport const dbStatus = [\r\n    {\r\n        id: 1,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Progess',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Completed',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]","import { useMemo } from \"react\";\r\nimport { Addition, isEqualNumber, NumberFormat, numberToWords, onlynumAndNegative, RoundNumber, toArray } from \"../../../Components/functions\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst SalesInvoiceTaxDetails = ({\r\n    invoiceProducts = [],\r\n    invoiceExpences = [],\r\n    isNotTaxableBill,\r\n    isInclusive,\r\n    IS_IGST,\r\n    products = [],\r\n    invoiceInfo = {},\r\n    setInvoiceInfo\r\n}) => {\r\n\r\n    const invExpencesTotal = useMemo(() => {\r\n        return toArray(invoiceExpences).reduce((acc, exp) => Addition(acc, exp?.Expence_Value), 0)\r\n    }, [invoiceExpences]);\r\n\r\n    const Total_Invoice_value = useMemo(() => {\r\n        const invValue = invoiceProducts.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return Addition(acc, Amount);\r\n\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n            if (isInclusive) {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'remove').with_tax);\r\n            } else {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'add').with_tax);\r\n            }\r\n        }, 0);\r\n\r\n        return Addition(invValue, invExpencesTotal);\r\n    }, [invoiceProducts, isNotTaxableBill, products, IS_IGST, isInclusive, invExpencesTotal])\r\n\r\n    const taxSplitUp = useMemo(() => {\r\n        if (!invoiceProducts || invoiceProducts.length === 0) return {};\r\n\r\n        let totalTaxable = 0;\r\n        let totalTax = 0;\r\n\r\n        invoiceProducts.forEach(item => {\r\n            const Amount = RoundNumber(item?.Amount || 0);\r\n\r\n            if (isNotTaxableBill) {\r\n                totalTaxable = Addition(totalTaxable, Amount);\r\n                return;\r\n            }\r\n\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            const taxInfo = calculateGSTDetails(Amount, gstPercentage, isInclusive ? 'remove' : 'add');\r\n\r\n            totalTaxable = Addition(totalTaxable, parseFloat(taxInfo.without_tax));\r\n            totalTax = Addition(totalTax, parseFloat(taxInfo.tax_amount));\r\n        });\r\n\r\n        const totalWithTax = Addition(totalTaxable, totalTax);\r\n        const totalWithExpenses = Addition(totalWithTax, invExpencesTotal);\r\n        const roundedTotal = Math.round(totalWithExpenses);\r\n        const roundOff = RoundNumber(roundedTotal - totalWithExpenses);\r\n\r\n        const cgst = isEqualNumber(IS_IGST, 1) ? 0 : RoundNumber(totalTax / 2);\r\n        const sgst = isEqualNumber(IS_IGST, 1) ? 0 : RoundNumber(totalTax / 2);\r\n        const igst = isEqualNumber(IS_IGST, 1) ? RoundNumber(totalTax) : 0;\r\n\r\n        return {\r\n            totalTaxable: RoundNumber(totalTaxable),\r\n            totalTax: RoundNumber(totalTax),\r\n            cgst,\r\n            sgst,\r\n            igst,\r\n            roundOff,\r\n            invoiceTotal: roundedTotal\r\n        };\r\n\r\n    }, [invoiceProducts, products, IS_IGST, isNotTaxableBill, isInclusive, invExpencesTotal]);\r\n\r\n    // Update invoiceInfo when roundOff changes\r\n    useMemo(() => {\r\n        if (taxSplitUp.roundOff !== undefined && taxSplitUp.roundOff !== invoiceInfo.Round_off) {\r\n            setInvoiceInfo(pre => ({ ...pre, Round_off: taxSplitUp.roundOff }));\r\n        }\r\n    }, [taxSplitUp.roundOff]);\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"border p-2\" rowSpan={IS_IGST ? 5 : 6}>\r\n                            Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                        </td>\r\n                        <td className=\"border p-2\">Total Taxable Amount</td>\r\n                        <td className=\"border p-2\">\r\n                            {taxSplitUp.totalTaxable}\r\n                        </td>\r\n                    </tr>\r\n                    {!IS_IGST ? (\r\n                        <>\r\n                            <tr>\r\n                                <td className=\"border p-2\">CGST</td>\r\n                                <td className=\"border p-2\">\r\n                                    {taxSplitUp.cgst}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border p-2\">SGST</td>\r\n                                <td className=\"border p-2\">\r\n                                    {taxSplitUp.sgst}\r\n                                </td>\r\n                            </tr>\r\n                        </>\r\n                    ) : (\r\n                        <tr>\r\n                            <td className=\"border p-2\">IGST</td>\r\n                            <td className=\"border p-2\">\r\n                                {taxSplitUp.igst}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    <tr>\r\n                        <td className=\"border p-2\">Total Expences</td>\r\n                        <td className=\"border p-2\">\r\n                            {RoundNumber(invExpencesTotal)}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"border p-2\">Round Off</td>\r\n                        <td className=\"border p-0\">\r\n                            <input\r\n                                value={invoiceInfo.Round_off || taxSplitUp.roundOff || 0}\r\n                                className=\"cus-inpt p-2 m-0 border-0\"\r\n                                onInput={onlynumAndNegative}\r\n                                onChange={e => setInvoiceInfo(pre => ({ \r\n                                    ...pre, \r\n                                    Round_off: parseFloat(e.target.value) || 0 \r\n                                }))}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"border p-2\">Total</td>\r\n                        <td className=\"border p-2\">\r\n                            {NumberFormat(Math.round(Total_Invoice_value))}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesInvoiceTaxDetails;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { Addition, checkIsNumber, Division, isEqualNumber, NumberFormat, onlynum, onlynumAndNegative, reactSelectFilterLogic, RoundNumber, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { salesInvoiceExpencesInfo } from \"./variable\";\r\nimport { useState } from \"react\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\nconst ExpencesOfSalesInvoice = ({\r\n    invoiceExpences = [],\r\n    setInvoiceExpences,\r\n    expenceMaster = [],\r\n    IS_IGST,\r\n    taxType,\r\n}) => {\r\n\r\n    const handleInputChange = (index, field, value) => {\r\n\r\n        setInvoiceExpences(prev =>\r\n            prev.map((item, i) => {\r\n                if (i !== index) return item;\r\n\r\n                const updated = { ...item, [field]: value };\r\n\r\n                if (field === 'Expence_Value') {\r\n                    const\r\n                        Cgst = item.Cgst ? toNumber(item.Cgst) : 0,\r\n                        Sgst = item.Sgst ? toNumber(item.Sgst) : 0,\r\n                        Igst = item.Igst ? toNumber(item.Igst) : 0,\r\n                        expVal = toNumber(value),\r\n                        taxPercentage = IS_IGST ? Igst : Addition(Cgst, Sgst);\r\n\r\n                    const taxAmount = calculateGSTDetails(expVal, taxPercentage, taxType);\r\n\r\n                    updated.Cgst_Amo = (Cgst > 0 && !IS_IGST)\r\n                        ? taxAmount.cgst_amount\r\n                        : 0;\r\n                    updated.Sgst_Amo = (Sgst > 0 && !IS_IGST)\r\n                        ? taxAmount.sgst_amount\r\n                        : 0;\r\n                    updated.Igst_Amo = (Igst > 0 && IS_IGST)\r\n                        ? taxAmount.igst_amount\r\n                        : 0;\r\n                }\r\n\r\n                if (field === 'Igst') {\r\n                    const\r\n                        Igst = IS_IGST ? toNumber(value) : 0,\r\n                        Cgst = !IS_IGST ? Division(toNumber(value), 2) : 0,\r\n                        Sgst = !IS_IGST ? Division(toNumber(value), 2) : 0;\r\n\r\n                    const expVal = toNumber(item.Expence_Value), taxPercentage = IS_IGST ? Igst : Addition(Cgst, Sgst);\r\n                    const taxAmount = calculateGSTDetails(expVal, taxPercentage, taxType);\r\n\r\n                    updated.Cgst = Cgst;\r\n                    updated.Sgst = Sgst;\r\n                    updated.Cgst_Amo = Cgst > 0 ? taxAmount.cgst_amount : 0;\r\n                    updated.Sgst_Amo = Sgst > 0 ? taxAmount.sgst_amount : 0;\r\n                    updated.Igst_Amo = Igst > 0 ? taxAmount.igst_amount : 0;\r\n                }\r\n\r\n                return updated;\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleSelectChange = (index, selectedOption) => {\r\n        const selected = expenceMaster.find(exp => isEqualNumber(exp.Id, selectedOption.value)) || {};\r\n        setInvoiceExpences(prev =>\r\n            prev.map((item, i) => {\r\n                if (i !== index) return item;\r\n                return {\r\n                    ...item,\r\n                    Expense_Id: selected.Id,\r\n                    Expence_Value: 0\r\n                };\r\n            })\r\n        );\r\n    };\r\n\r\n    const addNewRow = () => {\r\n        setInvoiceExpences(prev => [...prev, { ...salesInvoiceExpencesInfo, Sno: prev.length }]);\r\n    };\r\n\r\n    const removeRow = index => {\r\n        setInvoiceExpences(prev => prev.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card >\r\n                <div className=\"d-flex align-items-center justify-content-between flex-wrap px-3 py-2\">\r\n                    <h5 className=\"m-0\">Expenses</h5>\r\n                    <Button variant=\"outlined\" type=\"button\" onClick={addNewRow}>Add</Button>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered m-0\">\r\n                        <thead className=\"table-light\">\r\n                            <tr>\r\n                                {[\r\n                                    'S.No', 'Expense',\r\n                                    'Expense Value', 'Action'].map(\r\n                                        (o, i) => <th className=\"fa-13 bg-light\" key={i}>{o}</th>\r\n                                    )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{ fontSize: '13px' }}>\r\n                            {invoiceExpences.map((row, index) => {\r\n                                // Get the current expense name for display\r\n                                const currentExpenseName = expenceMaster.find(\r\n                                    exp => isEqualNumber(exp.Id, row?.Expense_Id)\r\n                                )?.Expence_Name || '';\r\n\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td className=\"p-0 vctr\" style={{ minWidth: '180px' }}>\r\n                                            <Select\r\n                                                value={{\r\n                                                    value: row?.Expense_Id,\r\n                                                    label: currentExpenseName,\r\n                                                }}\r\n                                                onChange={e => handleSelectChange(index, e)}\r\n                                                options={expenceMaster\r\n                                                    // Fix the filtering logic\r\n                                                    .filter(exp => {\r\n                                                        // Always include the currently selected expense\r\n                                                        if (isEqualNumber(exp.Id, row?.Expense_Id)) return true;\r\n\r\n                                                        // Exclude expenses that are already selected in other rows\r\n                                                        return !invoiceExpences.some(\r\n                                                            (inv, idx) => idx !== index && isEqualNumber(inv.Expense_Id, exp.Id)\r\n                                                        );\r\n                                                    })\r\n                                                    .map(exp => ({ value: exp.Id, label: exp.Expence_Name }))\r\n                                                }\r\n                                                styles={customSelectStyles}\r\n                                                menuPortalTarget={document.body}\r\n                                                isSearchable={true}\r\n                                                placeholder=\"Select Expense\"\r\n                                                filterOption={reactSelectFilterLogic}\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"p-0 vctr\">\r\n                                            <input\r\n                                                onInput={onlynumAndNegative}\r\n                                                className=\"cus-inpt p-2 border-0\"\r\n                                                value={row.Expence_Value || ''}\r\n                                                disabled={!checkIsNumber(row.Expense_Id)}\r\n                                                onChange={e => {\r\n                                                    handleInputChange(index, 'Expence_Value', e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"p-0 vctr  text-center \">\r\n                                            <IconButton onClick={() => removeRow(index)} size=\"small\">\r\n                                                <Delete color=\"error\" fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                            {invoiceExpences.length === 0 && (\r\n                                <tr><td className=\"text-center\" colSpan={6}>No rows</td></tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpencesOfSalesInvoice;","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\"\r\nimport { checkIsNumber, isEqualNumber, reactSelectFilterLogic, toArray } from \"../../../Components/functions\";\r\nimport RequiredStar from '../../../Components/requiredStar';\r\n\r\nconst ManageSalesInvoiceGeneralInfo = ({\r\n    invoiceInfo = {},\r\n    setInvoiceInfo,\r\n    retailers = [],\r\n    voucherType = [],\r\n    branches = [],\r\n    onChangeRetailer,\r\n    stockItemLedgerName = []\r\n}) => {\r\n\r\n    const tdStyle = 'border fa-14 vctr';\r\n    const inputStyle = 'cus-inpt p-2';\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n\r\n                {/* customer name */}\r\n                <div className=\"col-sm-8 p-2\">\r\n                    <label className='fa-13'>Party Name</label>\r\n                    <Select\r\n                        value={{\r\n                            value: invoiceInfo?.Retailer_Id,\r\n                            label: invoiceInfo?.Retailer_Name\r\n                        }}\r\n                        onChange={e => {\r\n                            setInvoiceInfo(pre => ({\r\n                                ...pre,\r\n                                Retailer_Id: e.value,\r\n                                Retailer_Name: e.label\r\n                            }));\r\n\r\n                            // if (onChangeRetailer) onChangeRetailer();\r\n                        }}\r\n                        options={[\r\n                            { value: '', label: 'Search', isDisabled: true },\r\n                            ...toArray(retailers).map(obj => ({\r\n                                value: obj?.Retailer_Id,\r\n                                label: obj?.Retailer_Name\r\n                            }))\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Select Vendor\"}\r\n                        maxMenuHeight={300}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                {/* voucher type */}\r\n                <div className=\"col-sm-4 p-2\">\r\n                    <label className='fa-13'>Voucher Type</label>\r\n                    <Select\r\n                        value={{\r\n                            value: invoiceInfo.Voucher_Type,\r\n                            label: toArray(voucherType).find(v => isEqualNumber(v.Vocher_Type_Id, invoiceInfo.Voucher_Type))?.Voucher_Type\r\n                        }}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, Voucher_Type: e.value }))}\r\n                        options={[\r\n                            { value: '', label: 'Search', isDisabled: true },\r\n                            ...toArray(voucherType).filter(\r\n                                fil => fil?.Type === 'SALES'\r\n                            ).map(obj => ({\r\n                                value: obj?.Vocher_Type_Id,\r\n                                label: obj?.Voucher_Type\r\n                            }))\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        required={true}\r\n                        placeholder={\"Select Voucher Type\"}\r\n                        maxMenuHeight={300}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                {/* Date */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>Entry Date <RequiredStar /></label>\r\n                    <input\r\n                        value={invoiceInfo?.Do_Date || \"\"}\r\n                        type=\"date\"\r\n                        required\r\n                        className={inputStyle}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, Do_Date: e.target.value }))}\r\n                    />\r\n                </div>\r\n\r\n                {/* branch */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>Branch <RequiredStar /></label>\r\n                    <select\r\n                        className={inputStyle}\r\n                        value={invoiceInfo?.Branch_Id}\r\n                        required\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, Branch_Id: e.target.value }))}\r\n                    >\r\n                        <option value=\"\">select</option>\r\n                        {branches.map((o, i) => (\r\n                            <option value={o?.BranchId} key={i}>{o?.BranchName}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* GST TYPE */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>GST Type <RequiredStar /></label>\r\n                    <select\r\n                        className={inputStyle}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, GST_Inclusive: Number(e.target.value) }))}\r\n                        value={invoiceInfo.GST_Inclusive}\r\n                        required\r\n                    >\r\n                        <option value={1}>Inclusive Tax</option>\r\n                        <option value={0}>Exclusive Tax</option>\r\n                        <option value={2}>Not Taxable</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* TAX TYPE */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>Tax Type</label>\r\n                    <select\r\n                        className={inputStyle}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, IS_IGST: Number(e.target.value) }))}\r\n                        value={invoiceInfo.IS_IGST}\r\n                    >\r\n                        <option value='0'>GST</option>\r\n                        <option value='1'>IGST</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* stock item ledger name */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>Stock Item Ledger Name</label>\r\n                    <Select\r\n                        value={{ value: invoiceInfo.Stock_Item_Ledger_Name, label: invoiceInfo.Stock_Item_Ledger_Name }}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, Stock_Item_Ledger_Name: e.value }))}\r\n                        options={[\r\n                            { value: '', label: 'Search', isDisabled: true },\r\n                            ...stockItemLedgerName.map(obj => ({\r\n                                value: obj?.Stock_Item_Ledger_Name,\r\n                                label: obj?.Stock_Item_Ledger_Name\r\n                            }))\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        menuPortalTarget={document.body}\r\n                        required={true}\r\n                        isSearchable={true}\r\n                        placeholder={\"Select\"}\r\n                        maxMenuHeight={300}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                {/* STATUS */}\r\n                <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                    <label className='fa-13'>Status</label>\r\n                    <select\r\n                        value={invoiceInfo?.Cancel_status}\r\n                        className={inputStyle}\r\n                        onChange={e => setInvoiceInfo(pre => ({ ...pre, Cancel_status: e.target.value }))}\r\n                    >\r\n                        <option value=\"\" disabled>Select</option>\r\n                        <option value=\"1\">New</option>\r\n                        <option value=\"2\">Progess</option>\r\n                        <option value=\"3\">Completed</option>\r\n                        <option value=\"0\">Canceled</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <label className='fa-13'>Narration</label>\r\n            <textarea\r\n                className=\"cus-inpt fa-14\"\r\n                rows={2}\r\n                value={invoiceInfo.Narration}\r\n                onChange={e => setInvoiceInfo(pre => ({ ...pre, Narration: e.target.value }))}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageSalesInvoiceGeneralInfo;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 6v2h8.59L5 17.59 6.41 19 16 9.41V18h2V6z\"\n}), 'ArrowOutward');","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Button, IconButton, CardContent, Card, Dialog } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    NumberFormat, numberToWords,\r\n    RoundNumber, Addition,\r\n    getSessionUser,\r\n    checkIsNumber,\r\n    toNumber,\r\n    toArray,\r\n    stringCompare\r\n} from \"../../../Components/functions\";\r\nimport { Add, ArrowLeft, Clear, Delete, Download, Edit, ReceiptLong, Save, Close } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { calculateGSTDetails } from '../../../Components/taxCalculator';\r\nimport { salesInvoiceGeneralInfo, salesInvoiceDetailsInfo, salesInvoiceExpencesInfo, salesInvoiceStaffInfo } from './variable';\r\n\r\nimport ManageSalesInvoiceGeneralInfo from \"./manageGeneralInfo\";\r\nimport SalesInvoiceTaxDetails from \"./taxDetails\";\r\n\r\nimport AddItemToSaleOrderCart from \"../SaleOrder/addItemToCart\";\r\nimport AddProductsInSalesInvoice from \"./importFromSaleOrder\";\r\nimport ExpencesOfSalesInvoice from \"./manageExpences\";\r\n// import InvolvedStaffs from \"./manageInvolvedStaff\";\r\nconst storage = getSessionUser().user;\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\n\r\nconst DirectSaleInvoiceModal = ({ loadingOn, loadingOff, open, onClose, editValues,defaultValues,transactionType,onSuccess }) => {\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        brand: [],\r\n        godown: [],\r\n        expence: [],\r\n        stockInGodown: [],\r\n        stockItemLedgerName: [],\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        addProductDialog: false,\r\n        importFromSaleOrder: false,\r\n    })\r\n\r\n\r\n\r\n\r\n    const [invoiceInfo, setInvoiceInfo] = useState(salesInvoiceGeneralInfo)\r\n    const [invoiceProducts, setInvoiceProduct] = useState([]);\r\n     const [invoiceExpences, setInvoiceExpences] = useState([]);\r\n    const [staffArray, setStaffArray] = useState([]);\r\n\r\n    const [selectedProductToEdit, setSelectedProductToEdit] = useState(null);\r\n\r\n    const isInclusive = isEqualNumber(invoiceInfo.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(invoiceInfo.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(invoiceInfo.IS_IGST, 1);\r\n    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n    const minimumRows = 3;\r\n    const dummyRowCount = minimumRows - invoiceProducts.length\r\n\r\n\r\n    \r\n     \r\n    useEffect(() => {\r\n        if (!open) return;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                if (loadingOn) loadingOn();\r\n\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    retailerResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                    godownLocationsResponse,\r\n                    expenceResponse,\r\n                    godownWiseStock,\r\n                    stockItemLedgerNameResponse\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}` }),\r\n                    fetchLink({ address: `masters/voucher?module=SALES` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `masters/defaultAccountMaster` }),\r\n                    fetchLink({ address: `sales/stockInGodown` }),\r\n                    fetchLink({ address: `purchase/stockItemLedgerName?type=SALES` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const retailersData = (retailerResponse.success ? retailerResponse.data : []).sort(\r\n                    (a, b) => String(a?.Retailer_Name).localeCompare(b?.Retailer_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const expencesMaster = (expenceResponse.success ? toArray(expenceResponse.data) : []).sort(\r\n                    (a, b) => String(a?.Account_Name).localeCompare(b?.Account_Name)\r\n                );\r\n                const stockInGodowns = (godownWiseStock.success ? godownWiseStock.data : []).sort(\r\n                    (a, b) => String(a?.stock_item_name).localeCompare(b?.stock_item_name)\r\n                );\r\n                const stockItemLedgerName = (stockItemLedgerNameResponse.success ? stockItemLedgerNameResponse.data : []).sort(\r\n                    (a, b) => String(a?.Stock_Item_Ledger_Name).localeCompare(b?.Stock_Item_Ledger_Name)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    retailers: retailersData,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                    godown: godownLocations,\r\n                    brand: getUniqueData(productsData, 'Brand', ['Brand_Name']),\r\n                    expence: expencesMaster.filter(\r\n                        exp => !stringCompare(exp.Type, 'DEFAULT')\r\n                    ).map(exp => ({ Id: exp.Acc_Id, Expence_Name: exp.Account_Name })),\r\n                    stockInGodown: stockInGodowns,\r\n                    stockItemLedgerName: stockItemLedgerName\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            } finally {\r\n                if (loadingOff) loadingOff();\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, [storage?.Company_id, open])\r\n\r\n    const clearValues = () => {\r\n        setInvoiceInfo(salesInvoiceGeneralInfo);\r\n        setInvoiceProduct([]);\r\n        setInvoiceExpences([]);\r\n        setStaffArray([]);\r\n    }\r\n\r\n\r\n    const handleStaffArrayChange = (updatedStaffArray) => {\r\n        setStaffArray(updatedStaffArray);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setInvoiceProduct(pre => {\r\n            const exist = [...pre];\r\n\r\n            return exist.map(item => {\r\n                return Object.fromEntries(\r\n                    Object.entries(item).map(([key, value]) => {\r\n                        const productMaster = findProductDetails(baseData.products, item?.Item_Id);\r\n                        const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                        const isTaxable = gstPercentage > 0;\r\n\r\n                        const { Bill_Qty, Item_Rate, Amount } = item;\r\n\r\n                        const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                        const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                        const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                        const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                        const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                        const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                        switch (key) {\r\n                            case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                            case 'Total_Qty': return [key, Bill_Qty]\r\n                            case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                            case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                            case 'Tax_Rate': return [key, gstPercentage]\r\n                            case 'Cgst':\r\n                            case 'Sgst': return [key, cgstPer ?? 0]\r\n                            case 'Cgst_Amo':\r\n                            case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                            case 'Igst': return [key, igstPer ?? 0]\r\n                            case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                            case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                            default: return [key, item[key] || value]\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        });\r\n    }, [\r\n        baseData.products,\r\n        IS_IGST,\r\n        taxType,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setInvoiceExpences(pre => {\r\n            const exist = [...pre];\r\n\r\n            return exist.map(item => {\r\n                const\r\n                    Igst = IS_IGST ? toNumber(item?.Igst) : 0,\r\n                    Cgst = !IS_IGST ? toNumber(item?.Cgst) : 0,\r\n                    Sgst = !IS_IGST ? toNumber(item?.Sgst) : 0,\r\n                    Expence_Value = toNumber(item?.Expence_Value),\r\n                    taxPercentage = IS_IGST ? Igst : Addition(Cgst, Sgst);\r\n\r\n                const taxAmount = calculateGSTDetails(Expence_Value, taxPercentage, taxType);\r\n\r\n                return {\r\n                    ...item,\r\n                    Cgst, Sgst, Igst,\r\n                    Expence_Value,\r\n                    Cgst_Amo: Cgst > 0 ? taxAmount.cgst_amount : 0,\r\n                    Sgst_Amo: Sgst > 0 ? taxAmount.sgst_amount : 0,\r\n                    Igst_Amo: Igst > 0 ? taxAmount.igst_amount : 0,\r\n                }\r\n            })\r\n        })\r\n    }, [\r\n        baseData.expence,\r\n        IS_IGST,\r\n        taxType,\r\n    ]);\r\n\r\nuseEffect(() => {\r\n    if (\r\n        isValidObject(editValues) &&\r\n        Array.isArray(editValues?.ProductList) &&\r\n        baseData.staff.length > 0 &&\r\n        baseData.staffType.length > 0\r\n    ) {\r\n        const {\r\n            ProductList,\r\n            Staffs_Array,\r\n            Broker_Id,\r\n            Broker_Name,\r\n            Expence_Array,\r\n            Transporter_Id,\r\n            Transporter_Name,\r\n        } = editValues;\r\n\r\n      \r\n     \r\n        \r\n      \r\n        const expenseArray = editValues.Expence_Array || editValues.expenceArray || \r\n                            editValues.Expenses || editValues.expenses || \r\n                            editValues.ExpenceList || editValues.expenceList || [];\r\n\r\n         const retailerId = editValues.Retailer_Id || editValues.Custome_Id || 0;\r\n    const retailerObj = baseData.retailers.find(r =>\r\n        isEqualNumber(r.Retailer_Id, retailerId)\r\n    );\r\n  setInvoiceExpences(\r\n                toArray(Expence_Array).map(item => Object.fromEntries(\r\n                    Object.entries(salesInvoiceExpencesInfo).map(([key, value]) => {\r\n                        return [key, item[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        setInvoiceInfo(prev => ({\r\n            ...prev,\r\n            Do_Id: editValues.Pre_Id || '',\r\n            So_No: editValues.Pre_Id || '',\r\n            So_Date: editValues.Pre_Date ? ISOString(editValues.Pre_Date) : '',\r\n            Retailer_Id: editValues.Custome_Id || editValues?.Retailer_Id || '',\r\n            Retailer_Name: retailerObj?.Retailer_Name || '',\r\n            Broker_Id: editValues.Broker_Id || '',\r\n            Broker_Name: editValues.Broker_Name || '',\r\n            Transporter_Id: editValues.Transporter_Id || '',\r\n            Transporter_Name: editValues.Transporter_Name || '',\r\n            TrasnportType: editValues.TrasnportType || 2,\r\n            Voucher_Type: editValues.baseData || 0,\r\n            Status: editValues.Status || '',\r\n            isConverted: editValues.isConverted || 0,\r\n            Total_Invoice_value: editValues.Total_Invoice_value || 0,\r\n        }));\r\n\r\n        setInvoiceProduct(\r\n            ProductList.map(item => ({\r\n                ...salesInvoiceDetailsInfo,\r\n                Item_Id: item.Item_Id || '',\r\n                Item_Name: item.Product_Name || '',\r\n                HSN_Code: item.HSN_Code || '',\r\n                Bill_Qty: item.Bill_Qty || 0,\r\n                Act_Qty: item.Bill_Qty || 0,\r\n                Item_Rate: item.Item_Rate || 0,\r\n                Amount: item.Amount || 0,\r\n                GoDown_Id: item.Godown_Id || '',\r\n                Tax_Rate: item.Tax_Rate || 0,\r\n                Cgst: item.Cgst || 0,\r\n                UOM:item.Unit_Id || 0,\r\n                Units:item.Unit_Name || '',\r\n                Sgst: item.Sgst || 0,\r\n                Igst: item.Igst || 0,\r\n                Cgst_Amo: item.Cgst_Amo || 0,\r\n                Sgst_Amo: item.Sgst_Amo || 0,\r\n                Igst_Amo: item.Igst_Amo || 0,\r\n                Taxable_Amount: item.Taxable_Amount || 0,\r\n                Final_Amo: item.Final_Amo || 0,\r\n            }))\r\n        );\r\n\r\n        let staffTemp = [];\r\n\r\n        const getCategoryIdFromName = (categoryName) => {\r\n            const category = baseData.staffType.find(cat => \r\n                stringCompare(cat.Cost_Category, categoryName)\r\n            );\r\n            return category?.Cost_Category_Id || '';\r\n        };\r\n\r\n        if (Broker_Id && !isEqualNumber(Broker_Id, 0)) {\r\n            const brokerStaff = baseData.staff.find(s => \r\n                isEqualNumber(s.Cost_Center_Id, Broker_Id)\r\n            );\r\n            const brokerCategoryId = getCategoryIdFromName('Broker');\r\n\r\n            if (brokerStaff) {\r\n                staffTemp.push({\r\n                    Involved_Emp_Id: brokerStaff.Cost_Center_Id,\r\n                    EmpName: brokerStaff.Cost_Center_Name,\r\n                    Cost_Center_Type_Id: brokerCategoryId,\r\n                    Cost_Center_Type: 'Broker',\r\n                });\r\n            }\r\n        }\r\n\r\n        if (Transporter_Id && !isEqualNumber(Transporter_Id, 0)) {\r\n            const transporterStaff = baseData.staff.find(s => \r\n                isEqualNumber(s.Cost_Center_Id, Transporter_Id)\r\n            );\r\n            const transporterCategoryId = getCategoryIdFromName('Transport');\r\n\r\n            if (transporterStaff) {\r\n                staffTemp.push({\r\n                    Involved_Emp_Id: transporterStaff.Cost_Center_Id,\r\n                    EmpName: transporterStaff.Cost_Center_Name,\r\n                    Cost_Center_Type_Id: transporterCategoryId,\r\n                    Cost_Center_Type: 'Transporter',\r\n                });\r\n            }\r\n        }\r\n\r\n        toArray(Staffs_Array).forEach((item, idx) => {\r\n            const staffObj = baseData.staff.find(s =>\r\n                isEqualNumber(s.Cost_Center_Id, item.Staff_Id)\r\n            );\r\n            \r\n            let categoryId = item.Cost_Cat_Id;\r\n            let categoryName = item.Cost_Cat_Name;\r\n            \r\n            if (!categoryId && categoryName) {\r\n                categoryId = getCategoryIdFromName(categoryName);\r\n            }\r\n\r\n            if (staffObj) {\r\n                staffTemp.push({\r\n                    Involved_Emp_Id: staffObj.Cost_Center_Id,\r\n                    EmpName: staffObj.Cost_Center_Name,\r\n                    Cost_Center_Type_Id: categoryId || '',\r\n                    Cost_Center_Type: categoryName || '',\r\n                });\r\n            }\r\n        });\r\n\r\n      \r\n        setStaffArray(staffTemp);\r\n\r\n    \r\n    \r\n    }\r\n}, [editValues, baseData.staff, baseData.staffType, baseData.retailers]);\r\n      useEffect(() => {\r\n           setInvoiceExpences(pre => {\r\n               const exist = [...pre];\r\n   \r\n               return exist.map(item => {\r\n                   const\r\n                       Igst = IS_IGST ? toNumber(item?.Igst) : 0,\r\n                       Cgst = !IS_IGST ? toNumber(item?.Cgst) : 0,\r\n                       Sgst = !IS_IGST ? toNumber(item?.Sgst) : 0,\r\n                       Expence_Value = toNumber(item?.Expence_Value),\r\n                       taxPercentage = IS_IGST ? Igst : Addition(Cgst, Sgst);\r\n   \r\n                   const taxAmount = calculateGSTDetails(Expence_Value, taxPercentage, taxType);\r\n   \r\n                   return {\r\n                       ...item,\r\n                       Cgst, Sgst, Igst,\r\n                       Expence_Value,\r\n                       Cgst_Amo: Cgst > 0 ? taxAmount.cgst_amount : 0,\r\n                       Sgst_Amo: Sgst > 0 ? taxAmount.sgst_amount : 0,\r\n                       Igst_Amo: Igst > 0 ? taxAmount.igst_amount : 0,\r\n                   }\r\n               })\r\n           })\r\n       }, [\r\n           baseData.expence,\r\n           IS_IGST,\r\n           taxType,\r\n       ])\r\nconst saveSalesInvoice = () => {\r\n    if (loadingOn) loadingOn();\r\n\r\n    const staff_Involved_List = staffArray.map(staff => ({\r\n        Involved_Emp_Id: staff.Involved_Emp_Id,\r\n        Cost_Center_Type_Id: staff.Cost_Center_Type_Id\r\n    }));\r\n   \r\n  const filteredProducts = invoiceProducts.filter(\r\n        item => !(Number(item.Bill_Qty) === 0 && Number(item.Act_Qty) === 0)\r\n    );\r\n\r\n    fetchLink({\r\n        address: `sales/salesOrderSalesInvoice`,\r\n        // method: checkIsNumber(invoiceInfo?.Do_Id) ? 'PUT' : 'POST',\r\n        method:'POST',\r\n        bodyData: {\r\n            ...defaultValues,\r\n            ...invoiceInfo,\r\n            Pre_Id:invoiceInfo.Do_Id,\r\n            Product_Array: filteredProducts,\r\n            staff_Involved_List: staff_Involved_List, \r\n            Expence_Array: invoiceExpences,\r\n            transactionType:transactionType\r\n        }\r\n    }).then(data => {\r\n     \r\n       if (data.success) {\r\n  clearValues();\r\n  toast.success(data.message);\r\n  if (onSuccess) onSuccess();   \r\n  onClose(true);\r\n}else {\r\n            toast.warn(data.message)\r\n        }\r\n    }).catch(e => console.error(e)).finally(() => {\r\n        if (loadingOff) loadingOff();\r\n    })\r\n}\r\n\r\n    if (!open) return null;\r\n\r\n    return (\r\n        <Dialog open={open} onClose={() => onClose(false)} maxWidth=\"xl\" fullWidth>\r\n            <div style={{ maxHeight: '90vh', overflow: 'auto' }}>\r\n                \r\n                <AddItemToSaleOrderCart\r\n                    orderProducts={invoiceProducts}\r\n                    setOrderProducts={setInvoiceProduct}\r\n                    open={dialog.addProductDialog}\r\n                    onClose={() => {\r\n                        setDialog(pre => ({ ...pre, addProductDialog: false }))\r\n                        setSelectedProductToEdit(null);\r\n                    }}\r\n                    products={baseData.products}\r\n                    brands={baseData.brand}\r\n                    uom={baseData.uom}\r\n                    godowns={baseData.godown}\r\n                    GST_Inclusive={invoiceInfo.GST_Inclusive}\r\n                    IS_IGST={IS_IGST}\r\n                    editValues={selectedProductToEdit}\r\n                    initialValue={{ ...salesInvoiceDetailsInfo, Pre_Id: invoiceInfo.So_No }}\r\n                    stockInGodown={baseData.stockInGodown}\r\n                />\r\n\r\n                <Card>\r\n                    <div className='d-flex flex-wrap align-items-center border-bottom py-2 px-3'>\r\n                        <span className=\"flex-grow-1 fa-16 fw-bold\">Sales Invoice</span>\r\n                        <span>\r\n                            <IconButton onClick={() => onClose(false)}>\r\n                                <Close />\r\n                            </IconButton>\r\n                            <Button onClick={() => saveSalesInvoice()} variant=\"contained\">Submit</Button>\r\n                        </span>\r\n                    </div>\r\n                    <CardContent>\r\n                        <div className=\"row p-0\">\r\n                           \r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <InvolvedStaffs\r\n                                        StaffArray={staffArray}\r\n                                        setStaffArray={handleStaffArrayChange}\r\n                                        costCenter={baseData.staff}\r\n                                        costCategory={baseData.staffType}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                 \r\n                            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0\">\r\n                                <div className=\"border px-3 py-1\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <ManageSalesInvoiceGeneralInfo\r\n                                        invoiceInfo={invoiceInfo}\r\n                                        setInvoiceInfo={setInvoiceInfo}\r\n                                        retailers={baseData.retailers}\r\n                                        branches={baseData.branch}\r\n                                        voucherType={baseData.voucherType}\r\n                                        stockItemLedgerName={baseData.stockItemLedgerName}\r\n                                        // onChangeRetailer={() => {\r\n                                        //     // setInvoiceProduct([]);\r\n                                        //     // setInvoiceExpences([]);\r\n                                        // }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                     \r\n                        <FilterableTable\r\n                            title=\"Items\"\r\n                            headerFontSizePx={13}\r\n                            bodyFontSizePx={13}\r\n                            EnableSerialNumber\r\n                            disablePagination\r\n                            ButtonArea={\r\n                                <>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setSelectedProductToEdit(null);\r\n                                            setDialog(pre => ({ ...pre, addProductDialog: true }));\r\n                                        }}\r\n                                        sx={{ ml: 1 }}\r\n                                        variant='outlined'\r\n                                        type=\"button\"\r\n                                        startIcon={<Add />}\r\n                                        disabled={\r\n                                            !checkIsNumber(invoiceInfo.Retailer_Id)\r\n                                            || (invoiceProducts.length > 0\r\n                                                && checkIsNumber(invoiceInfo.So_No))\r\n                                        }\r\n                                    >Add Product</Button>\r\n\r\n                                    <AddProductsInSalesInvoice\r\n                                        loadingOn={loadingOn}\r\n                                        loadingOff={loadingOff}\r\n                                        open={dialog.importFromSaleOrder}\r\n                                        onClose={() => setDialog(pre => ({ ...pre, importFromSaleOrder: false }))}\r\n                                        retailer={invoiceInfo?.Retailer_Id}\r\n                                        selectedItems={invoiceProducts}\r\n                                        setSelectedItems={setInvoiceProduct}\r\n                                        staffArray={staffArray}\r\n                                        setStaffArray={setStaffArray}\r\n                                        products={baseData.products}\r\n                                        GST_Inclusive={invoiceInfo.GST_Inclusive}\r\n                                        IS_IGST={IS_IGST}\r\n                                        invoiceInfo={invoiceInfo}\r\n                                        setInvoiceInfo={setInvoiceInfo}\r\n                                        godowns={baseData.godown}\r\n                                        stockInGodown={baseData.stockInGodown}\r\n                                    >\r\n                                        {/* <Button\r\n                                            onClick={() => setDialog(pre => ({ ...pre, importFromSaleOrder: true }))}\r\n                                            disabled={\r\n                                                !checkIsNumber(invoiceInfo.Retailer_Id)\r\n                                                || (\r\n                                                    invoiceProducts.length > 0\r\n                                                    && !checkIsNumber(invoiceInfo.So_No)\r\n                                                )\r\n                                            }\r\n                                            sx={{ ml: 1 }}\r\n                                            type=\"button\"\r\n                                            variant='outlined'\r\n                                            startIcon={<ReceiptLong />}\r\n                                        >\r\n                                            Choose Sale Order</Button> */}\r\n                                    </AddProductsInSalesInvoice>\r\n                                </>\r\n                            }\r\n                        dataArray={[\r\n    ...[...invoiceProducts,\r\n        ...Array.from({ length: dummyRowCount > 0 ? dummyRowCount : 0 }).map(d => salesInvoiceDetailsInfo)\r\n    ].filter(item => !(Number(item.Bill_Qty) === 0 && Number(item.Act_Qty) === 0)) \r\n]}\r\n\r\n                            columns={[\r\n                                createCol('Item_Name', 'string'),\r\n                                createCol('HSN_Code', 'string'),\r\n                                createCol('Bill_Qty', 'number'),\r\n                                createCol('Act_Qty', 'number'),\r\n                                createCol('Item_Rate', 'number'),\r\n                                {\r\n                                    isVisible: 1,\r\n                                    ColumnHeader: 'Tax',\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        const { Cgst = 0, Sgst = 0, Igst = 0, Cgst_Amo = 0, Sgst_Amo = 0, Igst_Amo = 0 } = row;\r\n                                        const taxPercentage = IS_IGST ? Igst : Addition(Cgst, Sgst);\r\n                                        const taxAmount = IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo);\r\n\r\n                                        return !checkIsNumber(row?.Item_Id) ? '' : `${taxAmount} - (${taxPercentage} %)`\r\n                                    }\r\n                                },\r\n                                {\r\n                                    isVisible: 1,\r\n                                    ColumnHeader: 'Godown',\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => baseData.godown.find(\r\n                                        godown => isEqualNumber(godown.Godown_Id, row?.GoDown_Id)\r\n                                    )?.Godown_Name ?? ''\r\n                                },\r\n                                createCol('Amount', 'number'),\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        return (\r\n                                            <>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        setSelectedProductToEdit(row);\r\n                                                        setDialog(pre => ({ ...pre, addProductDialog: true }));\r\n                                                    }}\r\n                                                    size=\"small\"\r\n                                                    type=\"button\"\r\n                                                    disabled={!checkIsNumber(row?.Item_Id)}\r\n                                                >\r\n                                                    <Edit />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    type=\"button\"\r\n                                                    onClick={() => setInvoiceProduct(\r\n                                                        pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id))\r\n                                                    )}\r\n                                                    color='error'\r\n                                                    disabled={!checkIsNumber(row?.Item_Id)}\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </>\r\n                                        )\r\n                                    },\r\n                                    ColumnHeader: 'Action',\r\n                                    isVisible: 1,\r\n                                },\r\n                            ]}\r\n                        />\r\n\r\n                        <br />\r\n\r\n                        <ExpencesOfSalesInvoice\r\n                            invoiceExpences={invoiceExpences}\r\n                            setInvoiceExpences={setInvoiceExpences}\r\n                            expenceMaster={baseData.expence}\r\n                            IS_IGST={IS_IGST}\r\n                            taxType={taxType}\r\n                        />\r\n\r\n                        <br />\r\n\r\n                       <SalesInvoiceTaxDetails\r\n                        invoiceProducts={invoiceProducts}\r\n                        invoiceExpences={invoiceExpences}\r\n                        isNotTaxableBill={isNotTaxableBill}\r\n                        isInclusive={isInclusive}\r\n                        IS_IGST={IS_IGST}\r\n                        products={baseData.products}\r\n                        invoiceInfo={invoiceInfo}\r\n                        setInvoiceInfo={setInvoiceInfo}\r\n                    />\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n\r\nexport default DirectSaleInvoiceModal;\r\n\r\n\r\n\r\nconst InvolvedStaffs = ({ StaffArray = [], setStaffArray, costCenter = [], costCategory = [] }) => {\r\n\r\n    const getCategoryIdFromName = (categoryName) => {\r\n        const category = costCategory.find(cat => \r\n            stringCompare(cat.Cost_Category, categoryName)\r\n        );\r\n        return category?.Cost_Category_Id || '';\r\n    };\r\n\r\n    const getCategoryNameFromId = (categoryId) => {\r\n        const category = costCategory.find(cat => \r\n            isEqualNumber(cat.Cost_Category_Id, categoryId)\r\n        );\r\n        return category?.Cost_Category || '';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={() => setStaffArray(pre => [...pre, { \r\n                        Involved_Emp_Id: '',\r\n                        EmpName: '',\r\n                        Cost_Center_Type_Id: '',\r\n                        Cost_Center_Type: '' \r\n                    }])}\r\n                >Add</Button>\r\n            </div>\r\n\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"fa-13\">Sno</th>\r\n                        <th className=\"fa-13\">Staff Name</th>\r\n                        <th className=\"fa-13\">Category</th>\r\n                        <th className=\"fa-13\">#</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {toArray(StaffArray).map((row, index) => {\r\n                        // Convert category name to ID if needed (for existing data)\r\n                        const actualCategoryId = row.Cost_Center_Type_Id || getCategoryIdFromName(row.Cost_Center_Type);\r\n                        \r\n                        return (\r\n                            <tr key={index}>\r\n                                <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                <td className='fa-13 w-100 p-0'>\r\n                                    <Select\r\n                                        value={{\r\n                                            value: row.Involved_Emp_Id,\r\n                                            label: row.EmpName || 'Select Staff'\r\n                                        }}\r\n                                        onChange={e => {\r\n                                            const selectedStaff = costCenter.find(c => \r\n                                                isEqualNumber(c.Cost_Center_Id, e.value)\r\n                                            );\r\n                                            const newArray = StaffArray.map((staff, i) => \r\n                                                i === index ? { \r\n                                                    ...staff, \r\n                                                    Involved_Emp_Id: Number(e.value),\r\n                                                    EmpName: e.label\r\n                                                } : staff\r\n                                            );\r\n                                            setStaffArray(newArray);\r\n                                        }}\r\n                                        options={costCenter\r\n                                            .filter(staff => \r\n                                                !StaffArray.some((st, i) => \r\n                                                    i !== index && isEqualNumber(st.Involved_Emp_Id, staff.Cost_Center_Id)\r\n                                                )\r\n                                            )\r\n                                            .map(st => ({\r\n                                                value: st.Cost_Center_Id,\r\n                                                label: st.Cost_Center_Name\r\n                                            }))\r\n                                        }\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable={true}\r\n                                        placeholder=\"Select Staff\"\r\n                                    />\r\n                                </td>\r\n                                <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '100px' }}>\r\n                                    <select\r\n                                        value={actualCategoryId}\r\n                                        onChange={e => {\r\n                                            const selectedCategory = costCategory.find(c => \r\n                                                isEqualNumber(c.Cost_Category_Id, e.target.value)\r\n                                            );\r\n                                            const newArray = StaffArray.map((staff, i) => \r\n                                                i === index ? { \r\n                                                    ...staff, \r\n                                                    Cost_Center_Type_Id: e.target.value,\r\n                                                    Cost_Center_Type: selectedCategory?.Cost_Category || ''\r\n                                                } : staff\r\n                                            );\r\n                                            setStaffArray(newArray);\r\n                                        }}\r\n                                        className=\"cus-inpt p-2 border-0\"\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                        {costCategory.map((st, sti) =>\r\n                                            <option value={st.Cost_Category_Id} key={sti}>\r\n                                                {st.Cost_Category}\r\n                                            </option>\r\n                                        )}\r\n                                    </select>\r\n                                </td>\r\n                                <td className='fa-13 vctr p-0'>\r\n                                    <IconButton\r\n                                        onClick={() => {\r\n                                            const newArray = StaffArray.filter((_, i) => i !== index);\r\n                                            setStaffArray(newArray);\r\n                                        }}\r\n                                        size='small'\r\n                                    >\r\n                                        <Delete color='error' />\r\n                                    </IconButton>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport  {InvolvedStaffs}","import { useEffect, useState } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, Division, isEqualNumber, isValidObject, Multiplication, onlynum, reactSelectFilterLogic, RoundNumber, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll } from \"@mui/icons-material\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport { validStockValue } from \"../SalesInvoice/importFromSaleOrder\";\r\n\r\nconst AddItemToSaleOrderCart = ({\r\n    children,\r\n    orderProducts = [],\r\n    setOrderProducts,\r\n    open = false,\r\n    onClose,\r\n    products = [],\r\n    brands = [],\r\n    uom = [],\r\n    godowns = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    editValues = null,\r\n    initialValue = {},\r\n    stockInGodown = [],\r\n}) => {\r\n\r\n    const [productDetails, setProductDetails] = useState(initialValue);\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues) && open) {\r\n            setProductDetails(pre => (\r\n                Object.fromEntries(\r\n                    Object.entries(pre).map(([key, value]) => [key, editValues[key] ? editValues[key] : value])\r\n                )\r\n            ))\r\n        }\r\n    }, [editValues])\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const closeDialog = () => {\r\n        setProductDetails(initialValue);\r\n        onClose();\r\n    }\r\n\r\n    const handleProductInputChange = () => {\r\n\r\n        setOrderProducts(pre => {\r\n            const existingProducts = pre.filter(ordered => !isEqualNumber(ordered.Item_Id, productDetails.Item_Id));\r\n\r\n            const currentProductDetails = Object.fromEntries(\r\n                Object.entries(initialValue).map(([key, value]) => {\r\n                    const productMaster = findProductDetails(productDetails.Item_Id);\r\n                    const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const { Bill_Qty, Item_Rate, Amount } = productDetails;\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    switch (key) {\r\n                        case 'Item_Name': return [key, productMaster.Product_Name]\r\n                        case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                        case 'Total_Qty': return [key, Bill_Qty]\r\n                        case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                        case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                        case 'Tax_Rate': return [key, gstPercentage]\r\n                        case 'Cgst':\r\n                        case 'Sgst': return [key, cgstPer ?? 0]\r\n                        case 'Cgst_Amo':\r\n                        case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                        case 'Igst': return [key, igstPer ?? 0]\r\n                        case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                        case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                        default: return [key, productDetails[key] || value]\r\n                    }\r\n                })\r\n            );\r\n\r\n            return [...existingProducts, currentProductDetails];\r\n        });\r\n\r\n        closeDialog();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                maxWidth='md' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id) {\r\n                        handleProductInputChange();\r\n                    } else {\r\n                        toast.warn('Select Product');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n\r\n                            {/* brand */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...brands.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* group */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* item name */}\r\n                            <div className={\r\n                                Object.hasOwn(productDetails, 'GoDown_Id') ? 'col-md-8 p-2' : \"col-12 p-2\"\r\n                            }>\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: (\r\n                                            findProductDetails(productDetails.Item_Id)?.Product_Name\r\n                                        )\r\n                                    }}\r\n                                    isDisabled={checkIsNumber(productDetails.Pre_Id)}\r\n                                    menuPortalTarget={document.body}\r\n                                    onChange={e => {\r\n                                        const productInfo = findProductDetails(e.value);\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n\r\n                                            Item_Id: e.value,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Bill_Qty: 0,\r\n                                            Amount: 0,\r\n                                            Unit_Id: productInfo.UOM_Id ?? pre.Unit_Id,\r\n                                            Unit_Name: productInfo.Units ?? pre.Unit_Name,\r\n                                            HSN_Code: productInfo?.HSN_Code\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* godown  */}\r\n                            {Object.hasOwn(productDetails, 'GoDown_Id') && (\r\n                                <div className=\"col-md-4 p-2\">\r\n                                    <label>Godown</label>\r\n                                    <Select\r\n                                        value={{\r\n                                            value: productDetails?.GoDown_Id,\r\n                                            label: godowns.find(g => isEqualNumber(g.Godown_Id, productDetails?.GoDown_Id))?.Godown_Name || ''\r\n                                        }}\r\n                                        onChange={(e) => setProductDetails(pre => ({ ...pre, GoDown_Id: e.value }))}\r\n                                        options={[\r\n                                            { value: '', label: 'select', isDisabled: true },\r\n                                            {\r\n                                                label: 'Stock-Available-Godowns',\r\n                                                options: toArray(godowns).filter(fil => {\r\n                                                    const stockList = toArray(stockInGodown);\r\n\r\n                                                    if (stockList.length === 0) return false;\r\n\r\n                                                    return stockList.some(\r\n                                                        fnd => (\r\n                                                            isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                            && isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                        )\r\n                                                    )\r\n                                                }).map(obj => ({\r\n                                                    value: obj?.Godown_Id,\r\n                                                    label: obj?.Godown_Name\r\n                                                        + \" (Bal: \"\r\n                                                        + validStockValue(productDetails?.Item_Id, obj?.Godown_Id, stockInGodown)\r\n                                                        + \")\"\r\n                                                }))\r\n                                            },\r\n                                            {\r\n                                                label: 'Other Godowns',\r\n                                                options: toArray(godowns).filter(fil => {\r\n                                                    const stockList = toArray(stockInGodown);\r\n\r\n                                                    if (stockList.length === 0) return true;\r\n\r\n                                                    return !stockList.some(fnd =>\r\n                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id) &&\r\n                                                        isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                    );\r\n                                                }).map(obj => ({\r\n                                                    value: obj?.Godown_Id,\r\n                                                    label: obj?.Godown_Name\r\n                                                }))\r\n                                            }\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isDisabled={!checkIsNumber(productDetails?.Item_Id)}\r\n                                        menuPortalTarget={document.body}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Godown\"}\r\n                                        filterOption={reactSelectFilterLogic}\r\n                                    // maxMenuHeight={200}  \r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* quantity */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {Object.hasOwn(productDetails, 'Act_Qty') && (\r\n                                <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                    <label>Actual Quantity </label>\r\n                                    <input\r\n                                        value={productDetails.Act_Qty ? productDetails.Act_Qty : ''}\r\n                                        onInput={onlynum}\r\n                                        disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                        onChange={e => setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Act_Qty: e.target.value,\r\n                                        }))}\r\n                                        required\r\n                                        className=\"cus-inpt\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Rate */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* UOM */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={\r\n                                        Object.hasOwn(productDetails, 'UOM') ? productDetails.UOM :\r\n                                            Object.hasOwn(productDetails, 'Unit_Id') ? productDetails.Unit_Id : ''\r\n                                    }\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            UOM: value,\r\n                                            Unit_Id: value,\r\n                                            Units: label,\r\n                                            Unit_Name: label,\r\n                                        }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {uom.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Amount */}\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(initialValue)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeDialog}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItemToSaleOrderCart;","import deprecatedPropType from '@mui/utils/deprecatedPropType';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n    return null;\n  };\n}","import requirePropFactory from '@mui/utils/requirePropFactory';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  // eslint-disable-next-line react/forbid-foreign-prop-types\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n    return null;\n  };\n  return requireProp;\n}","import setRef from '@mui/utils/setRef';\nexport default setRef;","import unsupportedProp from '@mui/utils/unsupportedProp';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n  const propFullNameSafe = propFullName || propName;\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n  return null;\n}","'use client';\n\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/ClassNameGenerator';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible';\n// TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    }\n    ClassNameGenerator.configure(generator);\n  }\n};","import isMuiElement from '@mui/utils/isMuiElement';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  var _muiName, _element$type;\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf( // For server components `muiName` is avaialble in element.type._payload.value.muiName\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n  // eslint-disable-next-line no-underscore-dangle\n  (_muiName = element.type.muiName) != null ? _muiName : (_element$type = element.type) == null || (_element$type = _element$type._payload) == null || (_element$type = _element$type.value) == null ? void 0 : _element$type.muiName) !== -1;\n}"],"names":["convertedStatus","id","label","color","dbStatus","findProductDetails","_arr$find","productid","arguments","length","undefined","find","obj","isEqualNumber","Product_Id","_ref","invoiceProducts","invoiceExpences","isNotTaxableBill","isInclusive","IS_IGST","products","invoiceInfo","setInvoiceInfo","invExpencesTotal","useMemo","toArray","reduce","acc","exp","Addition","Expence_Value","Total_Invoice_value","invValue","item","Amount","RoundNumber","product","Item_Id","gstPercentage","Igst_P","Gst_P","calculateGSTDetails","with_tax","taxSplitUp","totalTaxable","totalTax","forEach","taxInfo","parseFloat","without_tax","tax_amount","totalWithTax","totalWithExpenses","roundedTotal","Math","round","roundOff","cgst","sgst","igst","invoiceTotal","Round_off","pre","_objectSpread","_jsx","_Fragment","children","className","_jsxs","rowSpan","numberToWords","parseInt","value","onInput","onlynumAndNegative","onChange","e","target","NumberFormat","createSvgIcon","d","setInvoiceExpences","expenceMaster","taxType","Card","Button","variant","type","onClick","addNewRow","prev","salesInvoiceExpencesInfo","Sno","map","o","i","style","fontSize","row","index","_expenceMaster$find","currentExpenseName","Id","Expense_Id","Expence_Name","minWidth","Select","handleSelectChange","selectedOption","selected","options","filter","some","inv","idx","styles","customSelectStyles","menuPortalTarget","document","body","isSearchable","placeholder","filterOption","reactSelectFilterLogic","disabled","checkIsNumber","handleInputChange","field","updated","Cgst","toNumber","Sgst","Igst","expVal","taxPercentage","taxAmount","Cgst_Amo","cgst_amount","Sgst_Amo","sgst_amount","Igst_Amo","igst_amount","Division","IconButton","_","removeRow","size","Delete","colSpan","_toArray$find","retailers","voucherType","branches","onChangeRetailer","stockItemLedgerName","inputStyle","Retailer_Id","Retailer_Name","isDisabled","maxMenuHeight","Voucher_Type","v","Vocher_Type_Id","fil","Type","required","RequiredStar","Do_Date","Branch_Id","BranchId","BranchName","GST_Inclusive","Number","Stock_Item_Ledger_Name","Cancel_status","rows","Narration","Object","defineProperty","exports","enumerable","get","_utils","require","_interopRequireDefault","_createSvgIcon","_jsxRuntime","default","jsx","storage","getSessionUser","user","loadingOn","loadingOff","open","onClose","editValues","defaultValues","transactionType","onSuccess","baseData","setBaseData","useState","branch","uom","staff","staffType","brand","godown","expence","stockInGodown","dialog","setDialog","addProductDialog","importFromSaleOrder","salesInvoiceGeneralInfo","setInvoiceProduct","staffArray","setStaffArray","selectedProductToEdit","setSelectedProductToEdit","dummyRowCount","useEffect","async","branchResponse","productsResponse","retailerResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","godownLocationsResponse","expenceResponse","godownWiseStock","stockItemLedgerNameResponse","Promise","all","fetchLink","address","concat","Company_id","branchData","success","data","sort","a","b","String","localeCompare","productsData","Product_Name","retailersData","uomData","Units","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","godownLocations","Godown_Name","expencesMaster","Account_Name","stockInGodowns","stock_item_name","getUniqueData","stringCompare","Acc_Id","console","error","fetchData","fromEntries","entries","_ref2","key","productMaster","isTaxable","Bill_Qty","Item_Rate","itemRateGst","gstInfo","cgstPer","cgst_per","igstPer","igst_per","base_amount","isValidObject","Array","isArray","ProductList","Staffs_Array","Broker_Id","Broker_Name","Expence_Array","Transporter_Id","Transporter_Name","retailerId","expenceArray","Expenses","expenses","ExpenceList","expenceList","Custome_Id","retailerObj","r","_ref3","_item$key","Do_Id","Pre_Id","So_No","So_Date","Pre_Date","ISOString","TrasnportType","Status","isConverted","salesInvoiceDetailsInfo","Item_Name","HSN_Code","Act_Qty","GoDown_Id","Godown_Id","Tax_Rate","UOM","Unit_Id","Unit_Name","Taxable_Amount","Final_Amo","staffTemp","getCategoryIdFromName","categoryName","category","cat","Cost_Category_Id","brokerStaff","s","Cost_Center_Id","brokerCategoryId","push","Involved_Emp_Id","EmpName","Cost_Center_Type_Id","Cost_Center_Type","transporterStaff","transporterCategoryId","staffObj","Staff_Id","categoryId","Cost_Cat_Id","Cost_Cat_Name","saveSalesInvoice","staff_Involved_List","filteredProducts","method","bodyData","Product_Array","then","toast","message","warn","catch","finally","Dialog","maxWidth","fullWidth","maxHeight","overflow","AddItemToSaleOrderCart","orderProducts","setOrderProducts","brands","godowns","initialValue","Close","CardContent","minHeight","height","InvolvedStaffs","StaffArray","updatedStaffArray","costCenter","costCategory","ManageSalesInvoiceGeneralInfo","FilterableTable","title","headerFontSizePx","bodyFontSizePx","EnableSerialNumber","disablePagination","ButtonArea","sx","ml","startIcon","Add","AddProductsInSalesInvoice","retailer","selectedItems","setSelectedItems","dataArray","from","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref4","_ref5","_baseData$godown$find","_baseData$godown$find2","_ref6","Edit","ExpencesOfSalesInvoice","SalesInvoiceTaxDetails","_ref7","actualCategoryId","c","newArray","st","selectedCategory","sti","_findProductDetails","_godowns$find","productDetails","setProductDetails","_products$find","closeDialog","DialogTitle","onSubmit","preventDefault","ordered","DialogContent","BrandID","Brand","Brand_Name","GroupID","Group","pro","grp","Product_Group","Pro_Group","hasOwn","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$Item_Rat","_productInfo$UOM_Id","_productInfo$Units","UOM_Id","findIndex","ind","g","stockList","fnd","validStockValue","onlynum","Multiplication","min","selectedIndex","text","DialogActions","ClearAll","validator","reason","componentNameInError","Component","props","propName","componentName","location","propFullName","unstable_ClassNameGenerator","configure","generator","ClassNameGenerator","element","muiNames","_muiName","_element$type","React","indexOf","muiName","_payload"],"sourceRoot":""}