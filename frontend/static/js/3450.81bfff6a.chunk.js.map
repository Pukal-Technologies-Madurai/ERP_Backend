{"version":3,"file":"static/js/3450.81bfff6a.chunk.js","mappings":"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","sources":["Pages/Analytics/QPayComps/salesBased.jsx","Pages/Analytics/QPayComps/qPayBased.jsx","Pages/Analytics/QPayComps/qpayGroupingList.jsx","Pages/Analytics/QPayReports2.jsx","Pages/Analytics/QPayComps/settings.jsx","Components/filterableTable.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\nimport { NumberFormat } from \"../../../Components/functions\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\n\r\nconst QPaySalesBasedComp = ({ dataArray }) => {\r\n    const [salesRange, setSalesRange] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const range = [\r\n            {\r\n                min: 0,\r\n                max: 5000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 5000,\r\n                max: 10000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 10000,\r\n                max: 20000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 20000,\r\n                max: 50000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 50000,\r\n                max: 100000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 100000,\r\n                max: 200000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 200000,\r\n                max: 500000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 500000,\r\n                max: 1000000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 1000000,\r\n                max: 1500000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 1500000,\r\n                max: 2000000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 2000000,\r\n                max: 1e15,\r\n                data: []\r\n            },\r\n        ];\r\n\r\n        dataArray.forEach(o => {\r\n            const salesAmount = Number(o.Sales_Amount);\r\n            const rangeIndex = range.findIndex(obj => (salesAmount > obj.min) && (salesAmount <= obj.max));\r\n            if (rangeIndex !== -1) {\r\n                range[rangeIndex].data.push(o);\r\n            } else {\r\n                // console.log(salesAmount)\r\n            }\r\n        });\r\n        setSalesRange(range);\r\n\r\n    }, [dataArray])\r\n\r\n    const RowComp = ({ o, i }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        return (\r\n            <>\r\n                <tr onClick={() => setOpen(pre => !pre)} className=\"hov\">\r\n                    <td className=\"fa-13 border text-center hov-bg\">{i + 1}</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {\r\n                            salesRange[i + 1]\r\n                                ? (NumberFormat(o?.min) + ' - ' + NumberFormat(o?.max))\r\n                                : '< ' + o?.min.toString()\r\n                        }\r\n                    </td>\r\n                    <td className=\"fa-13 border text-center hov-bg blue-text\">{o?.data?.length}</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}%</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)}\r\n                    </td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <Collapse in={open} unmountOnExit>\r\n                    <tr>\r\n                        <td colSpan={6}>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </Collapse>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-3 d-flex align-items-center justify-content-center flex-column py-2\">\r\n                <BarChart\r\n                    xAxis={[{\r\n                        scaleType: 'band',\r\n                        data:\r\n                            salesRange?.map((o, i) => (\r\n                                salesRange[i + 1]\r\n                                    ? '> ' + NumberFormat(o?.max)\r\n                                    : '< ' + (o?.min)\r\n                            ))\r\n                    }]}\r\n                    series={[\r\n                        // { data: salesRange?.map(o => ((o?.data?.length / dataArray?.length) * 100).toFixed(2)), label: 'Parties', color: 'skyblue' },\r\n                        { data: salesRange?.map(o => o?.data?.length), label: 'Parties', color: 'skyblue' },\r\n                        // { \r\n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)), \r\n                        //     label: 'Sales Count' \r\n                        // },\r\n                        // { \r\n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)), \r\n                        //     label: 'Frequency Days' \r\n                        // },\r\n                    ]}\r\n                    height={400}\r\n                    barLabel=\"value\"\r\n                    borderRadius={6}\r\n                />\r\n\r\n                <div className=\"table-responsive w-100\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['Sno', 'Amount-Range', 'Parties', 'Percentage', 'Sales Count (Avg)', 'Frequency Days (Avg)'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {salesRange.map((o, i) => <RowComp key={i} o={o} i={i} />)}\r\n                            <tr>\r\n                                <td className=\"border\"></td>\r\n                                <td className=\"border\"></td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\r\n                                        return sum += o?.data?.length\r\n                                    }, 0))}\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\r\n                                        return sum += ((o?.data?.length / dataArray?.length) * 100)\r\n                                    }, 0))}%\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\r\n                                        return sum += Number(o?.Sales_Count) || 0\r\n                                    }, 0))) * 100)}\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\r\n                                        return sum += Number(o?.Freq_Days) || 0\r\n                                    }, 0))) * 100)}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPaySalesBasedComp;","import { useEffect, useState } from \"react\";\r\nimport { PieChart } from '@mui/x-charts/PieChart';\r\nimport { getRandomColor, NumberFormat } from \"../../../Components/functions\";\r\nimport { Button } from \"@mui/material\";\r\n// import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\n\r\n// const icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\n// const checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst QPayBasedComp = ({ dataArray, columns, filters }) => {\r\n    const [qPayRange, setQPayRange] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [filtered, setFiltered] = useState([])\r\n    const [localState, setLocalState] = useState({\r\n        group: localStorage.getItem('qPayGroup') || '',\r\n    })\r\n\r\n    const comStr = (str) => str ? (str.trim()).toLowerCase() : '';\r\n\r\n    useEffect(() => {\r\n        const filteredList = Array.isArray(filters[localState.group]) ? filters[localState.group] : []\r\n        setFiltered(filteredList)\r\n    }, [filters, localState.group])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const range = [\r\n            {\r\n                min: 0,\r\n                max: 5,\r\n                data: []\r\n            },\r\n            {\r\n                min: 5,\r\n                max: 10,\r\n                data: []\r\n            },\r\n            {\r\n                min: 10,\r\n                max: 15,\r\n                data: []\r\n            },\r\n            {\r\n                min: 15,\r\n                max: 20,\r\n                data: []\r\n            },\r\n            {\r\n                min: 20,\r\n                max: 30,\r\n                data: []\r\n            },\r\n            {\r\n                min: 30,\r\n                max: 40,\r\n                data: []\r\n            },\r\n            {\r\n                min: 40,\r\n                max: 60,\r\n                data: []\r\n            },\r\n            {\r\n                min: 60,\r\n                max: 1e4,\r\n                data: []\r\n            },\r\n        ];\r\n\r\n        dataArray.forEach(o => {\r\n            const qpayDays = Number(o.Q_Pay_Days);\r\n            const rangeIndex = range.findIndex(obj => (qpayDays > obj.min) && (qpayDays <= obj.max));\r\n            if (rangeIndex !== -1) {\r\n                range[rangeIndex].data.push(o);\r\n            }\r\n        });\r\n\r\n        setQPayRange(range);\r\n\r\n    }, [dataArray, reload])\r\n\r\n    const onChangeGroup = (val) => {\r\n        setLocalState(pre => ({ ...pre, group: val.target.value }))\r\n        localStorage.setItem('qPayGroup', val.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-xxl-3 col-lg-4 col-md-6 col-sm-8\">\r\n                <select\r\n                    className=\"cus-inpt w-auto border\"\r\n                    value={localState.group}\r\n                    onChange={onChangeGroup}\r\n                >\r\n                    <option value=\"\">Select Group By</option>\r\n                    {columns?.map((o, i) => o?.Fied_Data === 'string' && (\r\n                        <option value={o?.Field_Name} key={i}>{o?.Field_Name?.replace(/_/g, ' ')}</option>\r\n                    ))}\r\n                </select>\r\n                {/* <Autocomplete\r\n                    multiple\r\n                    options={[...columns?.filter(col => col?.Fied_Data === 'string')].map(filCol => filCol?.Field_Name)}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={localState.group || []}\r\n                    onChange={(event, newValue) => onChangeGroup(newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label={'Add Grouping'} placeholder={`Select column for Grouping`} />\r\n                    )}\r\n                /> */}\r\n            </div>\r\n\r\n            {(localState?.group === '' || filtered.length === 0) ? (\r\n                <div className=\"d-flex justify-content-around align-items-center flex-wrap px-3 py-2\">\r\n\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\r\n                                        <th className=\"border fa-15\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {qPayRange.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-15 border text-center\">{i + 1}</td>\r\n                                        <td className=\"fa-15 border text-center\">\r\n                                            {\r\n                                                qPayRange[i + 1]\r\n                                                    ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\r\n                                                    : '< ' + o?.min.toString()\r\n                                            }\r\n                                        </td>\r\n                                        <td className=\"fa-15 border text-center\">{o?.data?.length}</td>\r\n                                        <td className=\"fa-15 border text-center\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}</td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td className=\"border\"></td>\r\n                                    <td className=\"border\"></td>\r\n                                    <td className=\"fa-13 border text-center\">\r\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\r\n                                            return sum += o?.data?.length\r\n                                        }, 0))}\r\n                                    </td>\r\n                                    <td className=\"fa-13 border text-center\">\r\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\r\n                                            return sum += ((o?.data?.length / dataArray?.length) * 100)\r\n                                        }, 0))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex align-items-center flex-column overflow-scroll\">\r\n                        <h5>Q-Pay Days</h5>\r\n                        <PieChart\r\n                            series={[\r\n                                {\r\n                                    data: qPayRange?.map((range, rangeInd) => ({\r\n                                        label: qPayRange[rangeInd + 1]\r\n                                            ? (NumberFormat(range?.min) + '-' + NumberFormat(range?.max)) + '(' + range?.data?.length + ')'\r\n                                            : '< ' + NumberFormat(range?.min) + '(' + range?.data?.length + ')',\r\n                                        // value: range?.data?.length,\r\n                                        value: ((range?.data?.length / dataArray?.length) * 100).toFixed(2),\r\n                                        color: getRandomColor()\r\n                                    })),\r\n                                    arcLabel: (item) => `${item.label}`,\r\n                                    arcLabelMinAngle: 35,\r\n                                }\r\n                            ]}\r\n                            width={570}\r\n                            height={400}\r\n                            title=\"QPay Days\"\r\n                        />\r\n\r\n                        <Button onClick={() => setReload(pre => !pre)}>Change color</Button>\r\n                    </div>\r\n\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"cus-grid mt-3\">\r\n                        {filtered.map((group, groupIndex) => (\r\n                            <div className=\"table-responsive grid-card bg-white border\" key={groupIndex}>\r\n                                <h6 className=\"fw-bold text-muted d-flex justify-content-between\">\r\n                                    {String(group)?.toUpperCase()}\r\n                                    <span>\r\n                                        {NumberFormat(qPayRange?.reduce((overall, o) => {\r\n                                            return overall += o?.data?.reduce((sum, obj) => {\r\n                                                return (comStr(obj[localState.group]) === comStr(group))\r\n                                                    ? sum + 1\r\n                                                    : sum\r\n                                            }, 0)\r\n                                        }, 0))}\r\n                                    </span>\r\n                                </h6>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\r\n                                                <th className=\"border fa-14\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {qPayRange.map((o, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-15 border text-center\">{i + 1}</td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {\r\n                                                        qPayRange[i + 1]\r\n                                                            ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\r\n                                                            : '< ' + o?.min.toString()\r\n                                                    }\r\n                                                </td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {o?.data?.reduce((sum, obj) => {\r\n                                                        return (comStr(obj[localState.group]) === comStr(group))\r\n                                                            ? sum + 1\r\n                                                            : sum\r\n                                                    }, 0)}\r\n                                                </td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {NumberFormat((o?.data?.reduce((sum, obj) => {\r\n                                                        return (comStr(obj[localState.group]) === comStr(group))\r\n                                                            ? sum + 1\r\n                                                            : sum\r\n                                                    }, 0) / qPayRange?.reduce((overall, o) => {\r\n                                                        return overall += o?.data?.reduce((sum, obj) => {\r\n                                                            return (comStr(obj[localState.group]) === comStr(group))\r\n                                                                ? sum + 1\r\n                                                                : sum\r\n                                                        }, 0)\r\n                                                    }, 0)) * 100)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayBasedComp;","import { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from '../../../Components/functions';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (key, dataType, dataArray) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [...new Set(dataArray.map(item => item[key]))].sort();\r\n            return {\r\n                filterVariant: 'text'\r\n            };\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\n\r\nconst QPayGroupingList = ({ dataArray, columns }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].filter(column => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)));\r\n\r\n        const muiColumns = displayColumns.map((column) => ({\r\n            header: column?.Field_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.Field_Name,\r\n            sortable: true,\r\n            size: 150,\r\n            aggregationFn: column?.Field_Name?.includes('mount') ? 'sum' : column?.Fied_Data === 'number' ? 'mean' : 'uniqueCount',\r\n            AggregatedCell: ({ cell }) => <div className='blue-text text-center float-end w-100'>{NumberFormat(cell.getValue())}</div>,\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100 `}>\r\n                    {formatString(cell.getValue(), column?.Fied_Data)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Field_Name, column?.Fied_Data, dataArray),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns])\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: dataArray || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n            sorting: [{ id: 'Q_Pay_Days' }],\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '64vh', minHeight: '56vh' } },\r\n    })\r\n\r\n\r\n    return (\r\n        <MaterialReactTable table={table} />\r\n    )\r\n}\r\n\r\n\r\nexport default QPayGroupingList;","import { useState, useEffect } from \"react\";\r\nimport { Card, FormControlLabel, Switch, Tab, Box, Checkbox, TextField, Autocomplete, IconButton, Dialog, DialogContent, DialogActions, Button, Tooltip } from \"@mui/material\";\r\nimport { CheckBoxOutlineBlank, CheckBox, FilterAlt, FilterAltOff } from '@mui/icons-material'\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport QPaySalesBasedComp from \"./QPayComps/salesBased\";\r\nimport QPayBasedComp from \"./QPayComps/qPayBased\";\r\nimport FilterableTable from \"../../Components/filterableTable\";\r\nimport QPayColumnVisiblitySettings from \"./QPayComps/settings\";\r\nimport { isEqualNumber, isObject, checkIsNumber } from \"../../Components/functions\";\r\nimport QPayGroupingList from './QPayComps/qpayGroupingList'\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GrTransaction } from \"react-icons/gr\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\n\r\nconst QPayReports = () => {\r\n    const nav = useNavigate();\r\n\r\n    const tabList = ['LIST', 'Q-PAY BASED', 'SALES VALUE BASED'];\r\n    const filterInitialValue = {\r\n        zeros: false,\r\n        company: 2,\r\n        consolidate: 1,\r\n        view: 'LIST',\r\n        filterDialog: false,\r\n        displayGrouping: false,\r\n    }\r\n\r\n    const [repData, setRepData] = useState([]);\r\n    const [showData, setShowData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [cusFilter, setCusFilter] = useState(filterInitialValue);\r\n    const [columns, setColumns] = useState([]);\r\n    const [sortedColumns, setSortedColumns] = useState([])\r\n\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(showData);\r\n\r\n    const [ledgerId, setLedgerId] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSortedColumns(columns?.sort((a, b) => (a?.OrderBy && b?.OrderBy) ? a?.OrderBy - b?.OrderBy : b?.OrderBy - a?.OrderBy))\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        setRepData([])\r\n        fetchLink({\r\n            address: `reports/tallyReports/qPay?Company_Id=${cusFilter?.company}&Consolidate=${cusFilter?.consolidate}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRepData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [cusFilter?.company, cusFilter?.consolidate, reload])\r\n\r\n    useEffect(() => {\r\n        const temp = [...repData];\r\n        const zerosIncluded = !cusFilter.zeros ? temp.filter(o => o?.Q_Pay_Days) : temp;\r\n\r\n        setShowData(zerosIncluded);\r\n    }, [repData, cusFilter.zeros]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/tallyReports/qpay/columnVisiblity?CompanyId=${cusFilter.company}&Report_Type_Id=${Boolean(cusFilter?.consolidate) ? 1 : 2}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                data?.data?.sort((a, b) => a?.Field_Name?.localeCompare(b?.Field_Name));\r\n                setColumns(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))   \r\n    }, [cusFilter.company, cusFilter?.consolidate, reload])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    useEffect(() => {\r\n        const filterCount = Object.keys(filters).length;\r\n        const dataArray = (filterCount > 0) ? filteredData : showData;\r\n\r\n        const str = dataArray?.reduce((idStr, obj) => {\r\n            return obj?.Ledger_Tally_Id ? [...idStr, obj?.Ledger_Tally_Id] : idStr\r\n        }, [])\r\n        setLedgerId(str)\r\n    }, [filters, showData, filteredData])\r\n\r\n    const openSalesTransaction = (obj) => {\r\n\r\n        if (Array.isArray(obj) && obj?.length) {\r\n            const Ledger_Tally_Id = obj?.reduce((idStr, item) => {\r\n                if (item) {\r\n                    return idStr ? `${idStr},${item}` : `${item}`;\r\n                }\r\n                return idStr;\r\n            }, '');\r\n            nav('transaction', {\r\n                state: {\r\n                    Ledger_Tally_Id: Ledger_Tally_Id,\r\n                    isObj: false,\r\n                    rowDetails: obj,\r\n                    company: cusFilter.company,\r\n                    preFilters: filters\r\n                }\r\n            })\r\n\r\n        } else if (isObject(obj) && checkIsNumber(obj.Ledger_Tally_Id)) {\r\n\r\n            nav('transaction', {\r\n                state: {\r\n                    Ledger_Tally_Id: obj.Ledger_Tally_Id,\r\n                    isObj: true,\r\n                    rowDetails: obj,\r\n                    company: cusFilter.company,\r\n                    preFilters: filters\r\n                }\r\n            })\r\n\r\n        } else {\r\n            toast.error('Ledger Id not available')\r\n        }\r\n    }\r\n\r\n    const dispTab = (val) => {\r\n        const filterCount = Object.keys(filters).length;\r\n        const dataArray = (filterCount > 0) ? filteredData : showData;\r\n        switch (val) {\r\n            // case 'LIST': return <QPayListComp dataArray={filteredData} />\r\n            case 'LIST': return <FilterableTable dataArray={dataArray} columns={sortedColumns} onClickFun={openSalesTransaction} />\r\n            case 'Q-PAY BASED': return <QPayBasedComp dataArray={dataArray} columns={sortedColumns} filters={filters} />\r\n            case 'SALES VALUE BASED': return <QPaySalesBasedComp dataArray={dataArray} />\r\n            default: <></>\r\n        }\r\n    }\r\n\r\n    const reloadData = () => {\r\n        setReload(pre => !pre)\r\n    }\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...showData];\r\n        for (const column of sortedColumns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(showData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold\">\r\n                    <span className=\"text-uppercase ps-3\">Q-Pay Report</span>\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-wrap justify-content-between p-2\">\r\n                    <span>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={!cusFilter.zeros}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, zeros: !(e.target.checked) }))}\r\n                                />\r\n                            }\r\n                            label=\"Remove Zeros\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={cusFilter.consolidate === 1 ? true : false}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, consolidate: e.target.checked ? 1 : 0 }))}\r\n                                />\r\n                            }\r\n                            label=\"Consolidate\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={cusFilter.displayGrouping}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, displayGrouping: e.target.checked }))}\r\n                                />\r\n                            }\r\n                            label=\"Grouping\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                    </span>\r\n\r\n                    <span>\r\n                        <QPayColumnVisiblitySettings\r\n                            CompanyId={cusFilter.company}\r\n                            columns={sortedColumns}\r\n                            refresh={reloadData}\r\n                            ReportId={Boolean(cusFilter?.consolidate) ? 1 : 2}\r\n                        />\r\n                        <Tooltip title='Open Sales List'>\r\n                            <IconButton\r\n                                onClick={() => openSalesTransaction(ledgerId)}\r\n                                size=\"small\"\r\n                            >\r\n                                <GrTransaction />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton\r\n                                onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: true }))}\r\n                                size=\"small\"\r\n                                className=\"d-md-none d-inline\"\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </span>\r\n                </div>\r\n\r\n                {cusFilter.displayGrouping ? <QPayGroupingList dataArray={showData} columns={sortedColumns} /> : (\r\n                    <div className=\"row \">\r\n\r\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                            <div className=\"p-2\">\r\n                                <TabContext value={cusFilter.view}>\r\n                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                        <TabList\r\n                                            indicatorColor='transparant'\r\n                                            onChange={(e, n) => setCusFilter(pre => ({ ...pre, view: n }))}\r\n                                            variant=\"scrollable\"\r\n                                            scrollButtons=\"auto\"\r\n                                            allowScrollButtonsMobile\r\n                                        >\r\n                                            {tabList.map(o => (\r\n                                                <Tab sx={cusFilter.view === o ? { backgroundColor: '#c6d7eb' } : {}} label={o} value={o} key={o} />\r\n                                            ))}\r\n                                        </TabList>\r\n                                    </Box>\r\n                                    {tabList.map(o => (\r\n                                        <TabPanel value={o} sx={{ px: 0, py: 2 }} key={o}>\r\n                                            {dispTab(cusFilter.view)}\r\n                                        </TabPanel>\r\n                                    ))}\r\n                                </TabContext>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                            <h5 className=\"d-flex justify-content-between px-2\">\r\n                                Filters\r\n                                <Tooltip title='Clear Filters'>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => setFilters({})}\r\n                                    >\r\n                                        <FilterAltOff />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </h5>\r\n                            <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                                {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                ))}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={cusFilter?.filterDialog}\r\n                onClose={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                {/* <DialogTitle></DialogTitle> */}\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayReports","import { useState, useEffect } from 'react';\r\nimport { IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Button, Switch, Card, Paper } from \"@mui/material\";\r\nimport { RotateLeft, Settings } from '@mui/icons-material';\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchLink } from '../../../Components/fetchComponent'\r\n\r\n\r\nconst QPayColumnVisiblitySettings = ({ CompanyId, refresh, columns, ReportId }) => {\r\n    const [modifiedColumns, setModifiedColumns] = useState([]);\r\n    const [reset, setReset] = useState(false);\r\n    const [dialog, setDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setModifiedColumns([...columns])\r\n    }, [columns, reset])\r\n\r\n    const saveColumnVisiblity = () => {\r\n        setDialog(false);\r\n        fetchLink({\r\n            address: `reports/tallyReports/qpay/columnVisiblity`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                dataArray: modifiedColumns,\r\n                CompanyId: CompanyId,\r\n                ReportId: ReportId ? ReportId : 1\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (refresh) {\r\n                refresh()\r\n            }\r\n        })\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton size='small' onClick={() => setDialog(pre => !pre)}>\r\n                <Settings />\r\n            </IconButton>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Column Visiblity Settings</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n                        {modifiedColumns?.map((o, i) => (\r\n                            <div className=\"col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <Card\r\n                                    component={Paper}\r\n                                    className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${i % 2 !== 0 ? 'bg-light' : ''}`}\r\n                                >\r\n                                    {/* <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\r\n                                                disabled={Boolean(o?.Defult_Display)}\r\n                                                onChange={e =>\r\n                                                    setModifiedColumns(prevColumns =>\r\n                                                        prevColumns.map(oo =>\r\n                                                            oo.Field_Id === o?.Field_Id\r\n                                                                ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                                : oo\r\n                                                        )\r\n                                                    )}\r\n                                            />\r\n                                        }\r\n                                        label={o?.Field_Name}\r\n                                        sx={{ fontSize: '14px'}}\r\n                                        labelPlacement=\"end\"\r\n                                        className=\"fw-bold text-primary\"\r\n                                    /> */}\r\n                                    <div className='d-flex justify-content-between align-items-center flex-wrap'>\r\n                                        <Switch\r\n                                            checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\r\n                                            disabled={Boolean(o?.Defult_Display)}\r\n                                            onChange={e =>\r\n                                                setModifiedColumns(prevColumns =>\r\n                                                    prevColumns.map(oo =>\r\n                                                        oo.Field_Id === o?.Field_Id\r\n                                                            ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                            : oo\r\n                                                    )\r\n                                                )}\r\n                                        />\r\n\r\n                                        <h6 className='fa-13 mb-0 fw-bold '>{o?.Field_Name}</h6>\r\n                                    </div>\r\n                                    <input\r\n                                        type='number'\r\n                                        value={Number(o?.OrderBy) ? o?.OrderBy : ''}\r\n                                        onChange={e =>\r\n                                            setModifiedColumns(prevColumns =>\r\n                                                prevColumns.map(oo =>\r\n                                                    oo.Field_Id === o?.Field_Id\r\n                                                        ? { ...oo, OrderBy: e.target.value }\r\n                                                        : oo\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                        label={'Order Value'}\r\n                                        className='mt-2 p-1 border-0 cus-inpt'\r\n                                        style={{ width: '80px' }}\r\n                                        placeholder='Order'\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions className='d-flex justify-content-between'>\r\n                    <Button onClick={() => setReset(pre => !pre)} variant='outlined' startIcon={<RotateLeft />}>reset</Button>\r\n\r\n                    <span>\r\n                        <Button onClick={() => setDialog(false)} color='error'>Cancel</Button>\r\n                        <Button onClick={saveColumnVisiblity} variant='outlined'>Save</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayColumnVisiblitySettings;","import React, { useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\n\r\nconst FilterableTable = ({ dataArray, columns, onClickFun }) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(20);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} sx={{ maxHeight: 550 }}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                                <TableCell\r\n                                    key={ke}\r\n                                    className='fa-13 fw-bold border-end border-top'\r\n                                    style={{ backgroundColor: '#EDF0F7' }}\r\n                                    sortDirection={\r\n                                        sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                            ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                            : false\r\n                                    }\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={sortCriteria.some(criteria => criteria.columnId === column.Field_Name)}\r\n                                        direction={\r\n                                            sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                                ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                                : 'asc'\r\n                                        }\r\n                                        onClick={() => handleSortRequest(column.Field_Name)}\r\n                                    >\r\n                                        {column?.Field_Name?.replace(/_/g, ' ')}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {paginatedData.map((row, index) => (\r\n                            <TableRow key={index}>\r\n                                {columns.map(column => (\r\n                                    Object.entries(row).map(([key, value]) => (\r\n                                        (\r\n                                            (column.Field_Name === key)\r\n                                            &&\r\n                                            (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                        ) && (\r\n                                            <TableCell\r\n                                                key={column + index}\r\n                                                className='fa-13 border-end'\r\n                                                onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                            >\r\n                                                {formatString(value, column?.Fied_Data)}\r\n                                            </TableCell>\r\n                                        )\r\n                                    ))\r\n                                ))}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div className=\"p-2\">\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={dataArray.length}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    rowsPerPage={rowsPerPage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    rowsPerPageOptions={[20, 50, 100, 200, 500]}\r\n                    labelRowsPerPage=\"Rows per page\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterableTable;\r\n"],"names":["_ref","dataArray","salesRange","setSalesRange","useState","useEffect","range","min","max","data","forEach","o","salesAmount","Number","Sales_Amount","rangeIndex","findIndex","obj","push","RowComp","_ref2","_o$data","_o$data2","_o$data3","_o$data4","i","open","setOpen","_jsxs","_Fragment","children","onClick","pre","className","_jsx","NumberFormat","toString","length","reduce","sum","item","Sales_Count","toFixed","Freq_Days","Collapse","in","unmountOnExit","colSpan","BarChart","xAxis","scaleType","map","series","_o$data5","label","color","height","barLabel","borderRadius","style","backgroundColor","_o$data6","_o$data7","columns","filters","qPayRange","setQPayRange","reload","setReload","filtered","setFiltered","localState","setLocalState","group","localStorage","getItem","comStr","str","trim","toLowerCase","filteredList","Array","isArray","qpayDays","Q_Pay_Days","value","onChange","val","_objectSpread","target","setItem","_o$Field_Name","Fied_Data","Field_Name","replace","_o$max","PieChart","rangeInd","_range$data","_range$data2","_range$data3","getRandomColor","arcLabel","concat","arcLabelMinAngle","width","title","Button","groupIndex","_String","String","toUpperCase","overall","_ref3","_o$max2","_o$data8","formatString","dataType","LocalDate","dispColmn","setDispColmn","muiColumns","filter","column","isEqualNumber","Defult_Display","isVisible","_column$Field_Name","_column$Field_Name2","header","accessorKey","sortable","size","aggregationFn","includes","AggregatedCell","cell","getValue","Cell","getFun","key","filterVariant","filterFn","table","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","sorting","id","muiToolbarAlertBannerChipProps","muiTableContainerProps","sx","maxHeight","minHeight","MaterialReactTable","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","QPayReports","nav","useNavigate","tabList","repData","setRepData","showData","setShowData","cusFilter","setCusFilter","zeros","company","consolidate","view","filterDialog","displayGrouping","setColumns","sortedColumns","setSortedColumns","setFilters","filteredData","setFilteredData","ledgerId","setLedgerId","sort","a","b","OrderBy","fetchLink","address","then","success","catch","e","console","error","temp","zerosIncluded","Boolean","_data$data","_a$Field_Name","localeCompare","applyFilters","Object","keys","idStr","Ledger_Tally_Id","openSalesTransaction","state","isObj","rowDetails","preFilters","isObject","checkIsNumber","toast","dispTab","FilterableTable","onClickFun","QPayBasedComp","QPaySalesBasedComp","handleFilterChange","prevFilters","type","undefined","start","end","dateValue","Date","_filters$column$Field","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","placeholder","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","Set","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","Card","FormControlLabel","control","Switch","labelPlacement","QPayColumnVisiblitySettings","CompanyId","refresh","reloadData","ReportId","Tooltip","IconButton","GrTransaction","FilterAlt","QPayGroupingList","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","variant","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","FilterAltOff","overflow","ke","Dialog","onClose","fullWidth","maxWidth","DialogContent","DialogActions","modifiedColumns","setModifiedColumns","reset","setReset","dialog","setDialog","Settings","DialogTitle","component","Paper","disabled","prevColumns","oo","Field_Id","startIcon","RotateLeft","saveColumnVisiblity","method","bodyData","message","finally","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","startIndex","endIndex","paginatedData","criteria","columnId","direction","aValue","bValue","sortData","slice","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","sortDirection","some","find","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","row","index","entries","log","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","labelRowsPerPage","showFirstButton","showLastButton"],"sourceRoot":""}