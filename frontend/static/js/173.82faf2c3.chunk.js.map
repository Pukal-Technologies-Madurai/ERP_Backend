{"version":3,"file":"static/js/173.82faf2c3.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/FormControl/FormControlContext.js","Pages/Authorization/userBasedBranch.jsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","Components/tablecolumn.js","../node_modules/@mui/material/FormControl/useFormControl.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Checkbox,\r\n    Button,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\n\r\nconst UserBasedBranch = (props) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [branches, setBranches] = useState([]); // saved state from DB\r\n    const [tempBranches, setTempBranches] = useState([]); // local edits before Save\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    // Get company_id from local storage\r\n    const localData = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n    const companyId = localData?.Company_id;\r\n\r\n    // Fetch all users for dropdown\r\n    useEffect(() => {\r\n        if (!companyId) return;\r\n        fetchLink({\r\n            address: `masters/users?Company_id=${companyId}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) setUsers(data.data);\r\n                else toast.error(\"Failed to load users\");\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, [companyId]);\r\n\r\n    // Fetch branches for selected user\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            fetchLink({\r\n                address: `authorization/userBranches?UserId=${currentUser.value}`,\r\n            })\r\n                .then((data) => {\r\n                    if (data.success) {\r\n                        setBranches(data.data);\r\n                        setTempBranches(data.data); // clone for local changes\r\n                    } else toast.error(\"Failed to load branches\");\r\n                })\r\n                .catch((e) => console.error(e));\r\n        }\r\n    }, [currentUser]);\r\n\r\n    // Handle checkbox toggle (only update tempBranches)\r\n    const handleTempChange = (branchId, checked) => {\r\n        setTempBranches((prev) =>\r\n            prev.map((b) =>\r\n                b.id === branchId ? { ...b, HasAccess: checked ? 1 : 0 } : b\r\n            )\r\n        );\r\n    };\r\n\r\n    // Save button → send changes to DB\r\n    const handleSave = () => {\r\n        if (!currentUser) {\r\n            toast.error(\"Please select a user first\");\r\n            return;\r\n        }\r\n\r\n        setSaving(true);\r\n        props.loadingOn && props.loadingOn();\r\n\r\n        fetchLink({\r\n            address: `authorization/userBranches/saveAll`,\r\n            method: \"POST\",\r\n            bodyData: {\r\n                UserId: currentUser.value,\r\n                Branches: tempBranches.map((b) => ({\r\n                    BranchId: b.id,\r\n                    HasAccess: b.HasAccess,\r\n                })),\r\n            },\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    toast.success(\"Branch access updated successfully\");\r\n                    setBranches([...tempBranches]);\r\n                } else {\r\n                    toast.error(data.message || \"Failed to update branch access\");\r\n                    setTempBranches([...branches]);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.error(e);\r\n                toast.error(\"Error while saving branch access\");\r\n                setTempBranches([...branches]);\r\n            })\r\n            .finally(() => {\r\n                setSaving(false);\r\n                props.loadingOff && props.loadingOff();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 pt-1\">\r\n                    <Select\r\n                        value={currentUser}\r\n                        onChange={(e) => setCurrentUser(e)}\r\n                        options={users.map((u) => ({ value: u.UserId, label: u.Name }))}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder=\"Select User\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n            <h6\r\n                style={{\r\n                    marginBottom: \"0.5em\",\r\n                    borderBottom: \"2px solid blue\",\r\n                    width: \"fit-content\",\r\n                }}\r\n            >\r\n                Branch Access Control\r\n            </h6>\r\n\r\n            {tempBranches.length > 0 && (\r\n                <>\r\n                    <TableContainer component={Paper} sx={{ maxHeight: 650 }}>\r\n                        <Table stickyHeader aria-label=\"branch-access-table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell\r\n                                        sx={{\r\n                                            backgroundColor: \"rgb(15, 11, 42)\",\r\n                                            color: \"white\",\r\n                                        }}\r\n                                    >\r\n                                        ID\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        sx={{\r\n                                            backgroundColor: \"rgb(15, 11, 42)\",\r\n                                            color: \"white\",\r\n                                        }}\r\n                                    >\r\n                                        Branch Name\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        sx={{\r\n                                            backgroundColor: \"rgb(15, 11, 42)\",\r\n                                            color: \"white\",\r\n                                        }}\r\n                                    >\r\n                                        Action\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tempBranches.map((branch) => (\r\n                                    <TableRow hover key={branch.id}>\r\n                                        <TableCell>{branch.id}</TableCell>\r\n                                        <TableCell>{branch.BranchName}</TableCell>\r\n                                        <TableCell>\r\n                                            <Checkbox\r\n                                                sx={{ \"& .MuiSvgIcon-root\": { fontSize: 28 } }}\r\n                                                checked={branch.HasAccess === 1}\r\n                                                onChange={(e) =>\r\n                                                    handleTempChange(\r\n                                                        branch.id,\r\n                                                        e.target.checked\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                    {/* Save button */}\r\n                    <div style={{ marginTop: \"1em\", textAlign: \"right\" }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSave}\r\n                            disabled={saving}\r\n                        >\r\n                            {saving ? \"Saving...\" : \"Save\"}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserBasedBranch;\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","_ref","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","React","props","ref","autoFocus","checked","checkedProp","checkedIcon","className","defaultChecked","disabled","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","concat","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","users","setUsers","useState","branches","setBranches","tempBranches","setTempBranches","currentUser","setCurrentUser","saving","setSaving","localData","JSON","parse","localStorage","getItem","companyId","Company_id","useEffect","fetchLink","address","then","data","success","toast","error","catch","e","console","_Fragment","Select","options","map","u","UserId","label","Name","styles","customSelectStyles","isSearchable","placeholder","style","marginBottom","borderBottom","length","TableContainer","Paper","sx","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","backgroundColor","color","TableBody","branch","hover","BranchName","Checkbox","fontSize","HasAccess","handleTempChange","branchId","prev","b","_objectSpread","marginTop","textAlign","Button","variant","onClick","handleSave","loadingOn","method","bodyData","Branches","BranchId","headers","message","finally","loadingOff","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","prop","overridesResolver","indeterminate","theme","vars","palette","text","secondary","disableRipple","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","customTableStyles","table","rows","headCells","menu","provided","menuPortal","base","groupHeading","fontWeight","textTransform","option","isSelected","isFocused","MainMenu","headname","align","companyDetails","dataBase","business","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","FormControlContext"],"sourceRoot":""}