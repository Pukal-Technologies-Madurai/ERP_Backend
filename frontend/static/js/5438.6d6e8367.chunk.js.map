{"version":3,"file":"static/js/5438.6d6e8367.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Close.js","Pages/Reports/paymentCollectionReport.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    Tooltip,\r\n    IconButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport {\r\n    Addition,\r\n    ISOString,\r\n    isValidDate,\r\n    toNumber,\r\n} from \"../../Components/functions\";\r\n\r\nimport InvoiceBillTemplate from \"../Sales/SalesReportComponent/newInvoiceTemplate\";\r\nimport { FilterAlt, Search } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst SaleOrderList = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [voucher, setVoucher] = useState([]);\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [collectionType, setCollectionType] = useState([]);\r\n    const [collectedBy, setCollectedBy] = useState([]);\r\n\r\n    const [cummulative, setCummulative] = useState([]);\r\n    const [cummulativeLoad, setCummulativeLoad] = useState(false);\r\n    const [loadCummulativeNow, setLoadCummulativeNow] = useState(false);\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        Retailer: { value: \"\", label: \"ALL\" },\r\n        CollectionType: { value: \"\", label: \"ALL\" },\r\n        CollectedBy: { value: \"\", label: \"ALL\" },\r\n        VoucherType: { value: \"\", label: \"ALL\" },\r\n        Cancel_status: 0,\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `reports/collectionReport?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&retailer_id=${filters?.Retailer?.value}&collected_by=${filters?.CollectedBy?.value}&collection_type=${filters?.CollectionType?.value}&voucher_id=${filters?.VoucherType?.value}&Cancel_status=${filters?.Cancel_status}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSaleOrders(data?.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e))\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    }, [reload]);\r\n\r\n    useEffect(() => {\r\n        if (!loadCummulativeNow) return;\r\n\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `reports/cummulativeReport?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&retailer_id=${filters?.Retailer?.value}&collected_by=${filters?.CollectedBy?.value}&collection_type=${filters?.CollectionType?.value}&voucher_id=${filters?.VoucherType?.value}&Cancel_status=${filters?.Cancel_status}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setCummulative(data.data);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.error(e);\r\n            })\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n                setLoadCummulativeNow(false);\r\n            });\r\n    }, [loadCummulativeNow]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({ address: \"receipt/filterValues\" })\r\n            .then((data) => {\r\n                if (data.success && data.others) {\r\n                    setVoucher(data.others.voucherType || []);\r\n                    setRetailers(data.others.retailers || []);\r\n                    setCollectionType(data.others.collectionType || []);\r\n\r\n                    setCollectedBy(data.others.collectedBy || []);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Failed to fetch filter values\", error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate:\r\n                query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                    ? query.get(\"Fromdate\")\r\n                    : defaultFilters.Fromdate,\r\n            Todate:\r\n                query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                    ? query.get(\"Todate\")\r\n                    : defaultFilters.Todate,\r\n        };\r\n        setFilters((pre) => ({\r\n            ...pre,\r\n            Fromdate: queryFilters.Fromdate,\r\n            Todate: queryFilters.Todate,\r\n        }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate =\r\n            stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)\r\n                ? ISOString(stateDetails?.Fromdate)\r\n                : null;\r\n        const Todate =\r\n            stateDetails?.Todate && isValidDate(stateDetails?.Todate)\r\n                ? ISOString(stateDetails?.Todate)\r\n                : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n            setFilters((pre) => ({\r\n                ...pre,\r\n                Fromdate: ISOString(stateDetails.Fromdate),\r\n                Todate: stateDetails.Todate,\r\n            }));\r\n            setReload((pre) => !pre);\r\n        }\r\n    }, [stateDetails]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        const receipts = row.Receipts || [];\r\n\r\n        return (\r\n            <>\r\n                {receipts.length === 0 ? (\r\n                    <div className=\"p-2 text-muted\">No receipts available.</div>\r\n                ) : (\r\n                    receipts.map((receipt, index) => (\r\n                        <table key={index} className=\"table mb-3\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2 bg-light\">Do_Inv_No</td>\r\n                                    <td className=\"border p-2\">{receipt.Do_Inv_No}</td>\r\n                                    <td className=\"border p-2 bg-light\">Do_Date</td>\r\n                                    <td className=\"border p-2\">{receipt.Do_Date}</td>\r\n                                    <td className=\"border p-2 bg-light\">Total Invoice Value</td>\r\n                                    <td className=\"border p-2\">{receipt.Total_Invoice_value}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2 bg-light\">Collected Amount</td>\r\n                                    <td className=\"border p-2\">{receipt.collected_amount}</td>\r\n                                    <td className=\"border p-2 bg-light\">Bill Amount</td>\r\n                                    <td className=\"border p-2\">{receipt.bill_amount}</td>\r\n                                    <td className=\"border p-2 bg-light\">Total Receipt Amount</td>\r\n                                    <td className=\"border p-2\">{receipt.total_receipt_amount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    ))\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const ExpendableComponent2 = ({ row }) => {\r\n        const retailers = row.retailers || [];\r\n\r\n        return (\r\n            <>\r\n                {retailers.length === 0 ? (\r\n                    <div className=\"p-2 text-muted\">No receipts available.</div>\r\n                ) : (\r\n                    retailers.map((retail, index) => (\r\n                        <table key={index} className=\"table mb-3\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td\r\n                                        className=\"border p-2 bg-light\"\r\n                                        style={{ width: \"150px\" }}\r\n                                    >\r\n                                        collection_inv_no\r\n                                    </td>\r\n                                    <td className=\"border p-2\" style={{ width: \"200px\" }}>\r\n                                        {retail.collection_inv_no}\r\n                                    </td>\r\n                                    <td\r\n                                        className=\"border p-2 bg-light\"\r\n                                        style={{ width: \"150px\" }}\r\n                                    >\r\n                                        RetailerGet\r\n                                    </td>\r\n                                    <td className=\"border p-2\" style={{ width: \"250px\" }}>\r\n                                        {retail.RetailerGet}\r\n                                    </td>\r\n\r\n                                    <td\r\n                                        className=\"border p-2 bg-light\"\r\n                                        style={{ width: \"180px\" }}\r\n                                    >\r\n                                        CollectedByGet\r\n                                    </td>\r\n                                    <td className=\"border p-2\" style={{ width: \"200px\" }}>\r\n                                        {retail.CollectedByGet}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    ))\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n    };\r\n    const Total_Invoice_value = useMemo(\r\n        () =>\r\n            saleOrders.reduce((acc, order) => {\r\n                const receipts = order.Receipts || [];\r\n                const totalForOrder = receipts.reduce(\r\n                    (sum, r) => sum + (r.collected_amount || 0),\r\n                    0\r\n                );\r\n                return Addition(acc, totalForOrder);\r\n            }, 0),\r\n        [saleOrders]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {!cummulativeLoad ? (\r\n                <FilterableTable\r\n                    title=\"Cummulative Report\"\r\n                    dataArray={cummulative}\r\n                    EnableSerialNumber\r\n                    columns={[\r\n                        createCol(\"collection_type\", \"string\", \"collection_type\"),\r\n                        createCol(\"total_collected\", \"string\", \"total_collected\"),\r\n                    ]}\r\n                    ButtonArea={\r\n                        <>\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {Number(Total_Invoice_value) > 0 && (\r\n                                <h6 className=\"m-0 text-end text-muted px-3\">\r\n                                    Total: {Total_Invoice_value}\r\n                                </h6>\r\n                            )}\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setCummulativeLoad(true);\r\n                                    setLoadCummulativeNow(true);\r\n                                }}\r\n                            >\r\n                                Collection Report\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                    isExpendable={true}\r\n                    tableMaxHeight={550}\r\n                    expandableComp={ExpendableComponent2}\r\n                />\r\n            ) : (\r\n                <FilterableTable\r\n                    title=\"Collection Report\"\r\n                    dataArray={saleOrders}\r\n                    EnableSerialNumber\r\n                    columns={[\r\n                        createCol(\"RetailerGet\", \"string\", \"Retailer\"),\r\n                        createCol(\"collection_inv_no\", \"string\", \"collection_inv_no\"),\r\n                        {\r\n                            ColumnHeader: \"CollectionDate\",\r\n                            isVisible: 1,\r\n                            align: \"center\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const rawDate = row.collection_date;\r\n                                let formattedDate = \"Undefined\";\r\n                                if (rawDate) {\r\n                                    const date = new Date(rawDate);\r\n                                    if (!isNaN(date)) {\r\n                                        formattedDate = `${date\r\n                                            .getDate()\r\n                                            .toString()\r\n                                            .padStart(2, \"0\")}-${(date.getMonth() + 1)\r\n                                                .toString()\r\n                                                .padStart(2, \"0\")}-${date.getFullYear()}`;\r\n                                    }\r\n                                }\r\n\r\n                                return (\r\n                                    <span\r\n                                        className={`py-0 fw-bold px-2 rounded-4 fa-12 ${rawDate\r\n                                                ? \"bg-success text-white\"\r\n                                                : \"bg-secondary text-white\"\r\n                                            }`}\r\n                                    >\r\n                                        {formattedDate}\r\n                                    </span>\r\n                                );\r\n                            },\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Receipts\",\r\n                            isVisible: 1,\r\n                            align: \"center\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const receipts = row.Receipts || [];\r\n                                const totalCollected = receipts.reduce(\r\n                                    (sum, r) => sum + (r.collected_amount || 0),\r\n                                    0\r\n                                );\r\n\r\n                                return (\r\n                                    <span\r\n                                        className={`py-0 fw-bold px-2 rounded-4 fa-12 ${totalCollected\r\n                                                ? \"bg-success text-white\"\r\n                                                : \"bg-secondary text-white\"\r\n                                            }`}\r\n                                    >\r\n                                        {totalCollected || \"Undefined\"}\r\n                                    </span>\r\n                                );\r\n                            },\r\n                        },\r\n                        createCol(\"CollectedByGet\", \"string\", \"Collected_By\"),\r\n                        createCol(\"collection_type\", \"string\", \"Collection_Type\"),\r\n                    ]}\r\n                    ButtonArea={\r\n                        <>\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {Number(Total_Invoice_value) > 0 && (\r\n                                <h6 className=\"m-0 text-end text-muted px-3\">\r\n                                    Total: {Total_Invoice_value}\r\n                                </h6>\r\n                            )}\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setCummulativeLoad(false);\r\n                                    setLoadCummulativeNow(false);\r\n                                }}\r\n                            >\r\n                                Cummulative Report\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                    isExpendable={true}\r\n                    tableMaxHeight={550}\r\n                    expandableComp={ExpendableComponent}\r\n                />\r\n            )}\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={\"Sale Order\"}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={(e) =>\r\n                                                setFilters({ ...filters, Fromdate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={(e) =>\r\n                                                setFilters({ ...filters, Todate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.Retailer}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer: e })}\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...retailers.map((obj) => ({\r\n                                                    value: obj?.value,\r\n                                                    label: obj?.label,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Collected By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.CollectedBy}\r\n                                            onChange={(e) =>\r\n                                                setFilters((pre) => ({ ...filters, CollectedBy: e }))\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...collectedBy.map((obj) => ({\r\n                                                    value: obj?.value,\r\n                                                    label: obj?.label,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            menuPortalTarget={document.body}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Collected Type</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.CollectionType}\r\n                                            onChange={(e) =>\r\n                                                setFilters((pre) => ({ ...filters, CollectionType: e }))\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...collectionType.map((obj) => ({\r\n                                                    value: obj?.value,\r\n                                                    label: obj?.label,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            menuPortalTarget={document.body}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Voucher </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.VoucherType}\r\n                                            onChange={(e) =>\r\n                                                setFilters({ ...filters, VoucherType: e })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...voucher.filter((obj) => ({\r\n                                                    value: obj?.value,\r\n                                                    label: obj?.label,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            menuPortalTarget={document.body}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Voucher Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            closeDialog();\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate,\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            setReload((pre) => !pre);\r\n                            setLoadCummulativeNow(true); // Trigger cummulative report API call\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaleOrderList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["createSvgIcon","_jsx","d","defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","JSON","parse","localStorage","getItem","navigate","useNavigate","location","useLocation","stateDetails","state","query","URLSearchParams","search","saleOrders","setSaleOrders","useState","retailers","setRetailers","voucher","setVoucher","viewOrder","setViewOrder","reload","setReload","collectionType","setCollectionType","collectedBy","setCollectedBy","cummulative","setCummulative","cummulativeLoad","setCummulativeLoad","loadCummulativeNow","setLoadCummulativeNow","filters","setFilters","Retailer","value","label","CollectionType","CollectedBy","VoucherType","Cancel_status","dialog","setDialog","orderDetails","useEffect","_filters$Retailer","_filters$CollectedBy","_filters$CollectionTy","_filters$VoucherType","fetchLink","address","concat","then","data","success","catch","e","console","error","finally","_filters$Retailer2","_filters$CollectedBy2","_filters$CollectionTy2","_filters$VoucherType2","others","voucherType","queryFilters","get","isValidDate","pre","_objectSpread","updateQueryString","newFilters","params","toString","replace","closeDialog","Total_Invoice_value","useMemo","reduce","acc","order","totalForOrder","Receipts","sum","r","collected_amount","Addition","_jsxs","_Fragment","children","FilterableTable","title","dataArray","EnableSerialNumber","columns","createCol","ColumnHeader","isVisible","align","isCustomCell","Cell","_ref4","row","rawDate","collection_date","formattedDate","date","Date","isNaN","getDate","padStart","getMonth","getFullYear","className","_ref5","totalCollected","ButtonArea","Tooltip","IconButton","size","onClick","FilterAlt","Number","Button","isExpendable","tableMaxHeight","expandableComp","_ref2","receipts","length","map","receipt","index","Do_Inv_No","Do_Date","bill_amount","total_receipt_amount","_ref3","retail","style","width","collection_inv_no","RetailerGet","CollectedByGet","Object","keys","InvoiceBillTemplate","orderProducts","download","actionOpen","clearDetails","TitleText","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","verticalAlign","type","onChange","target","Select","options","obj","styles","customSelectStyles","isSearchable","placeholder","menuPortalTarget","document","body","filter","DialogActions","updatedFilters","startIcon","Search","variant"],"sourceRoot":""}