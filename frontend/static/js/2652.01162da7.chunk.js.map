{"version":3,"file":"static/js/2652.01162da7.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","Pages/Masters/UserType.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Button as MuiButton } from \"@mui/material/\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst initialState = {\r\n    Id: \"\",\r\n    UserType: \"\",\r\n};\r\n\r\nfunction UserType() {\r\n    const [UserTypeData, setUserTypeData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(false); // Dialog state\r\n\r\n    const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n    const [newChipType, setNewChipType] = useState(\"\");\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const [editUser, setEditUser] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/userType`\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setUserTypeData(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [reload]);\r\n\r\n    const handleDelete = () => {\r\n        fetchLink({\r\n            address: `masters/userType`,\r\n            method: \"DELETE\",\r\n            bodyData: { Id: inputValue.Id },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                setOpen(false);\r\n                toast.success(\"Chip deleted successfully!\");\r\n            } else {\r\n                toast.error(\"Failed to delete chip:\", data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const handleCreate = () => {\r\n        fetchLink({\r\n            address: `masters/userType`,\r\n            method: \"POST\",\r\n            bodyData: { UserType: newChipType },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setIsCreateDialogOpen(false);\r\n                setNewChipType(\"\");\r\n                setReload(!reload);\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    };\r\n\r\n    const editRow = (user) => {\r\n        setEditUser(true);\r\n        setInputValue({\r\n            Id: user.Id,\r\n            UserType: user.UserType,\r\n        });\r\n    };\r\n\r\n    const editFun = (Id, UserType) => {\r\n        fetchLink({\r\n            address: `masters/userType`,\r\n            method: \"PUT\",\r\n            bodyData: { Id, UserType },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload);\r\n                setEditUser(false);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <ToastContainer /> */}\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    UserType\r\n                    <div className=\"text-end\">\r\n                        <Button\r\n                            className=\"rounded-5 px-3 py-1 fa-13 btn-primary shadow\"\r\n                            onClick={() => setIsCreateDialogOpen(true)}\r\n                        >\r\n                            Create UserType\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <Table className=\"\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-14\">Id</th>\r\n                                    <th className=\"fa-14\">UserType</th>\r\n                                    <th className=\"fa-14\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {UserTypeData.map((obj, index) => (\r\n                                    <tr key={index}>\r\n                                        <td className=\"fa-14\">{obj.Id}</td>\r\n                                        <td className=\"fa-14\">{obj.UserType}</td>\r\n                                        <td className=\"fa-12\" style={{ minWidth: \"80px\" }}>\r\n                                            <IconButton\r\n                                                onClick={() => {\r\n                                                    editRow(obj);\r\n                                                }}\r\n                                                // disabled={Number(obj.Id) <= 6}\r\n                                                size=\"small\"\r\n                                            >\r\n                                                <Edit className=\"fa-in\" />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                onClick={() => {\r\n                                                    setOpen(true);\r\n                                                    setInputValue({ Id: obj.Id });\r\n                                                }}\r\n                                                disabled={Number(obj.Id) <= 6}\r\n                                                size=\"small\"\r\n                                                color='error'\r\n                                            >\r\n                                                <Delete className=\"fa-in \" />\r\n                                            </IconButton>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isCreateDialogOpen}\r\n                onClose={() => setIsCreateDialogOpen(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">UserType Creation</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>UserType Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) => setNewChipType(event.target.value)}\r\n                            placeholder=\"Ex: Admin\"\r\n                            value={newChipType}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setIsCreateDialogOpen(false)}>\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton onClick={() => handleCreate()} color=\"success\">\r\n                        CREATE\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={editUser}\r\n                onClose={() => setEditUser(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">UserType</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>UserType </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) =>\r\n                                setInputValue({\r\n                                    ...inputValue,\r\n                                    UserType: event.target.value,\r\n                                })\r\n                            }\r\n                            placeholder={inputValue.UserType}\r\n                            value={inputValue.UserType}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setEditUser(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={() => editFun(inputValue.Id, inputValue.UserType)} color=\"success\">\r\n                        Update\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => {\r\n                    setOpen(false);\r\n                }}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <b>Do you want to delete the UserType?</b>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setOpen(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={handleDelete} autoFocus color=\"error\">\r\n                        Delete\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default UserType;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","_jsx","displayName","bsPrefix","variant","size","active","className","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","initialState","Id","UserType","UserTypeData","setUserTypeData","useState","reload","setReload","open","setOpen","isCreateDialogOpen","setIsCreateDialogOpen","newChipType","setNewChipType","inputValue","setInputValue","editUser","setEditUser","useEffect","fetchLink","address","then","data","success","catch","e","console","error","_jsxs","Fragment","children","Table","map","obj","index","style","minWidth","IconButton","user","Edit","Number","color","Delete","Dialog","onClose","DialogTitle","id","DialogContent","onChange","value","placeholder","DialogActions","MuiButton","method","bodyData","toast","message","editFun","handleDelete","autoFocus","createSvgIcon","d","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}