{"version":3,"file":"static/js/2121.c431b1bb.chunk.js","mappings":"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","sources":["Pages/DataEntry/deliveryActivity.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { isEqualNumber, ISOString, validValue, onlynum, convertToTimeObject, getCurrentTime } from '../../Components/functions';\r\nimport { toast } from 'react-toastify'\r\nimport { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from '@mui/material';\r\nimport { Edit } from '@mui/icons-material'\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\n\r\n\r\nconst DeliveryActivity = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [deliveryData, setDeliveryData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const initialValue = {\r\n        Id: '',\r\n        EntryDate: ISOString(),\r\n        EntryTime: getCurrentTime(),\r\n        LocationDetails: 'MILL',\r\n        NotTaken: 0,\r\n        NotVerified: 0,\r\n        NotDelivery: 0,\r\n        OverAllSales: 0,\r\n        EntryBy: storage.UserId\r\n    }\r\n    const [inputValues, setInputValues] = useState(initialValue);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filter, setFilter] = useState({\r\n        reqDate: ISOString(),\r\n        LocationDetails: 'MILL',\r\n        dialog: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        setDeliveryData([]);\r\n        fetchLink({\r\n            address: `dataEntry/deliveryActivities?reqDate=${filter.reqDate}&reqLocation=${filter.LocationDetails}`\r\n        })\r\n        .then(data => setDeliveryData(data?.data))\r\n        .catch(e => console.error(e))\r\n    }, [reload, filter.reqDate, filter.LocationDetails])\r\n\r\n    const closeDialog = () => {\r\n        setFilter(pre => ({ ...pre, dialog: false }));\r\n        setInputValues(initialValue)\r\n    }\r\n\r\n    const saveActivity = () => {\r\n        fetchLink({\r\n            address: `dataEntry/deliveryActivities`,\r\n            method: inputValues.Id ? \"PUT\" : \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            bodyData: inputValues\r\n        })\r\n        .then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                closeDialog()\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"fa-16 fw-bold border-bottom d-flex justify-content-between align-items-center\">\r\n                    <span className='p-3'>Delivery Activities</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button \r\n                            variant='outlined' \r\n                            onClick={() => setFilter(pre => ({ ...pre, dialog: true }))}\r\n                            className='me-2'\r\n                        >\r\n                            Add Activity\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n\r\n                <CardContent>\r\n                    <div className=\"d-flex flex-wrap\">\r\n                        <div className='p-2'>\r\n                            <label>Date</label><br />\r\n                            <input\r\n                                value={filter.reqDate}\r\n                                type='date'\r\n                                className='cus-inpt w-auto'\r\n                                onChange={e => setFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                            />\r\n                        </div>\r\n                        <div className='p-2'>\r\n                            <label>LOCATION</label><br />\r\n                            <select\r\n                                className='cus-inpt'\r\n                                value={filter.LocationDetails}\r\n                                onChange={e => setFilter(pre => ({ ...pre, LocationDetails: e.target.value }))}\r\n                            >\r\n                                <option value=\"MILL\">MILL</option>\r\n                                <option value=\"GODOWN\">GODOWN</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['sno', 'time', 'NOT TAKEN - 30 MINS', 'Not verified - Before 45 mins',\r\n                                        'Not Delivery - Before 105 mins', 'OVERALL SALES'\r\n                                    ].map((o, i) => (\r\n                                        <th className='border text-center fa-13 text-uppercase' key={i}>{o}</th>\r\n                                    ))}\r\n                                    {isEqualNumber(contextObj?.Edit_Rights, 1) && (\r\n                                        <th className='border text-center fa-13'>ACTION</th>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {deliveryData?.map(o => (\r\n                                    o?.DeliveryList?.map((oo, ii) => (\r\n                                        <tr key={ii}>\r\n                                            <td className='fa-13 border text-center'>{ii + 1}</td>\r\n                                            <td className='fa-16 border text-center fw-bold text-primary'>\r\n                                                {convertToTimeObject(oo?.EntryTime)}\r\n                                            </td>\r\n                                            {['NotTaken', 'NotVerified', 'NotDelivery', 'OverAllSales'].map((ooo, iii) => (\r\n                                                <td className='fa-13 border text-center' key={iii}>{validValue(oo[ooo])}</td>\r\n                                            ))}\r\n\r\n                                            {isEqualNumber(contextObj?.Edit_Rights, 1) && (\r\n                                                <td className='fa-13 border text-center'>\r\n                                                    <IconButton\r\n                                                        onClick={() => {\r\n                                                            setInputValues(oo)\r\n                                                            setFilter(pre => ({ ...pre, dialog: true }));\r\n                                                        }}\r\n                                                        size='small'\r\n                                                    >\r\n                                                        <Edit className='fa-18' />\r\n                                                    </IconButton>\r\n                                                </td>\r\n                                            )}\r\n                                        </tr>\r\n                                    ))\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={filter.dialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle className=' bg-light'>{inputValues?.Id ? 'Modify Activity' : 'Add Delivery Activity'}</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Location</td>\r\n                                    <td className='border-0'>\r\n                                        <select\r\n                                            value={inputValues?.LocationDetails}\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, LocationDetails: e.target.value }))}\r\n                                            className='cus-inpt'\r\n                                        >\r\n                                            <option value={'MILL'}>MILL</option>\r\n                                            <option value={'GODOWN'}>GODOWN</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Date</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={inputValues?.EntryDate}\r\n                                            className='cus-inpt'\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, EntryDate: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Time</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            type='time'\r\n                                            value={inputValues?.EntryTime}\r\n                                            className='cus-inpt'\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, EntryTime: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Not Taken</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            value={validValue(inputValues?.NotTaken)}\r\n                                            className='cus-inpt'\r\n                                            onInput={onlynum}\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, NotTaken: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Not Verified</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            value={validValue(inputValues?.NotVerified)}\r\n                                            className='cus-inpt'\r\n                                            onInput={onlynum}\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, NotVerified: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Not Delivery</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            value={validValue(inputValues?.NotDelivery)}\r\n                                            className='cus-inpt'\r\n                                            onInput={onlynum}\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, NotDelivery: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='border-0' style={{ verticalAlign: 'middle' }}>Overall Sales</td>\r\n                                    <td className='border-0'>\r\n                                        <input\r\n                                            value={validValue(inputValues?.OverAllSales)}\r\n                                            className='cus-inpt'\r\n                                            onInput={onlynum}\r\n                                            onChange={e => setInputValues(pre => ({ ...pre, OverAllSales: e.target.value }))}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button>CANCEL</Button>\r\n                    <Button variant='outlined' onClick={saveActivity}>save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default DeliveryActivity;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["DeliveryActivity","storage","JSON","parse","localStorage","getItem","deliveryData","setDeliveryData","useState","reload","setReload","initialValue","Id","EntryDate","ISOString","EntryTime","getCurrentTime","LocationDetails","NotTaken","NotVerified","NotDelivery","OverAllSales","EntryBy","UserId","inputValues","setInputValues","contextObj","useContext","MyContext","filter","setFilter","reqDate","dialog","useEffect","fetchLink","address","concat","then","data","catch","e","console","error","closeDialog","pre","_objectSpread","_jsxs","_Fragment","children","Card","className","_jsx","isEqualNumber","Add_Rights","Button","variant","onClick","CardContent","value","type","onChange","target","map","o","i","Edit_Rights","_o$DeliveryList","DeliveryList","oo","ii","convertToTimeObject","ooo","iii","validValue","IconButton","size","Edit","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","style","verticalAlign","onInput","onlynum","DialogActions","saveActivity","method","headers","bodyData","success","toast","message","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","createSvgIcon","d"],"sourceRoot":""}