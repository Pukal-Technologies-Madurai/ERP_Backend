{"version":3,"file":"static/js/3585.0d81ab1b.chunk.js","mappings":"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","sources":["Pages/Payments/PaymentMaster/purchasePayment.jsx","Pages/Payments/PaymentMaster/choosePayment.jsx","Pages/Payments/PaymentMaster/displayStockJournal.jsx","Pages/Payments/PaymentMaster/listCostingDetail.jsx","Pages/Payments/PaymentMaster/expencesPayment.jsx","Pages/Payments/PaymentMaster/addReference.jsx","Pages/Payments/PaymentMaster/variable.js"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, LocalDate, NumberFormat, RoundNumber, stringCompare, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Delete } from \"@mui/icons-material\";\r\nimport { paymentBillInfoInitialValue } from \"./variable\";\r\n\r\n\r\n\r\nconst PurchaseInvoicePayment = ({\r\n    cellHeadStype = { width: '150px' },\r\n    paymentBillInfo = [],\r\n    setPaymentBillInfo,\r\n    filters,\r\n    baseData,\r\n    updateFilterData,\r\n    closeDialog,\r\n}) => {\r\n\r\n    const onClickPurchaseInvoice = (invoiceDetails, deleteOption) => {\r\n        setPaymentBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !(\r\n                stringCompare(o?.bill_name, invoiceDetails.bill_name)\r\n                && isEqualNumber(o?.pay_bill_id, invoiceDetails?.pay_bill_id)\r\n            ));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(paymentBillInfoInitialValue).map(([key, value]) => {\r\n                        // const totalReference = \r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.PIN_Id];\r\n                            case 'bill_name': return [key, invoiceDetails?.Po_Inv_No];\r\n                            case 'bill_amount': return [key, toNumber(invoiceDetails?.Total_Invoice_value)];\r\n                            case 'Debit_Amo': return [key, 0];\r\n                            case 'Credit_Amo': return [key, 0];\r\n                            case 'JournalBillType': return [key, 'PURCHASE INVOICE'];\r\n                            \r\n                            case 'PurchaseInvoiceDate': return [key, invoiceDetails.Po_Inv_Date];\r\n                            case 'bill_ref_number': return [key, invoiceDetails?.bill_ref_number || ''];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.totalReference];\r\n                            case 'PendingAmount': return [key, Subraction(\r\n                                invoiceDetails?.Total_Invoice_value,\r\n                                invoiceDetails.totalReference\r\n                            )];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setPaymentBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => (\r\n                    stringCompare(invoice.bill_name, inv.bill_name) &&\r\n                    isEqualNumber(invoice.pay_bill_id, inv.pay_bill_id)\r\n                )\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Debit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n    const TotalAmount = baseData.purchaseInvoiceSearchResult.reduce(\r\n        (acc, invoice) => Addition(acc, invoice?.Total_Invoice_value), 0\r\n    );\r\n\r\n    const SelectedBillAmount = baseData.purchaseInvoiceSearchResult.reduce(\r\n        (acc, invoice) => {\r\n            const isChecked = paymentBillInfo.findIndex(o =>\r\n                isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n            ) !== -1;\r\n\r\n            if (isChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n            return acc\r\n        }, 0\r\n    );\r\n\r\n    const PendingBillAmount = baseData.purchaseInvoiceSearchResult.reduce(\r\n        (acc, invoice) => {\r\n            const isNotChecked = paymentBillInfo.findIndex(o =>\r\n                isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n            ) === -1;\r\n\r\n            if (isNotChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n            return acc\r\n        }, 0\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    disabled={toArray(baseData.purchaseInvoiceSearchResult).length === 0}\r\n                                    onClick={() => updateFilterData('selectPurchaseInvoice', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Purchase InvoiceNo', 'Date', 'Invoice Value',\r\n                                'Paid Amount',\r\n                                // 'Pending Amount',\r\n                                'Payment Amount', 'Action'].map(\r\n                                    (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                                )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentBillInfo.map(\r\n                            (invoice, invoiceInd) => (\r\n                                <tr key={invoiceInd}>\r\n                                    <td>{invoiceInd + 1}</td>\r\n                                    <td>{invoice?.bill_name}</td>\r\n                                    <td>{LocalDate(invoice?.PurchaseInvoiceDate)}</td>\r\n                                    <td>{NumberFormat(invoice?.bill_amount)}</td>\r\n                                    <td>{invoice?.TotalPaidAmount}</td>\r\n                                    {/* <td>{Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount)}</td> */}\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={invoice.Debit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(invoice, validated);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onClickPurchaseInvoice(invoice, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                        <tr>\r\n                            <td colSpan={3} className=\"text-end fw-bold\">Total</td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {paymentBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.bill_amount), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {paymentBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.selectPurchaseInvoice}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Purchase Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table table-bordered fa-13\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Pending Invoices</th>\r\n                                <th colSpan={8} className=\"text-end\"></th>\r\n                            </tr>\r\n                            <tr>\r\n                                {['Sno', 'Payment InvoiceNo', 'Source', 'Date', 'Invoice Value', 'Paid Amount', 'J-Adjustment', 'Pending Amount', '#'].map(\r\n                                    (col, colInd) => <td key={colInd}>{col}</td>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {baseData.purchaseInvoiceSearchResult.map(\r\n                                (invoice, invoiceInd) => (\r\n                                    <tr key={invoiceInd}>\r\n                                        <td>{invoiceInd + 1}</td>\r\n                                        <td>{invoice?.Po_Inv_No}</td>\r\n                                        <td>{invoice?.dataSource}</td>\r\n                                        <td>{LocalDate(invoice?.Po_Inv_Date)}</td>\r\n                                        <td>{NumberFormat(invoice?.Total_Invoice_value)}</td>\r\n                                        <td>{NumberFormat(invoice?.Paid_Amount)}</td>\r\n                                        <td>{NumberFormat(invoice?.journalAdjustment)}</td>\r\n                                        <td>{NumberFormat(Subraction(invoice?.Total_Invoice_value, invoice?.totalReference))}</td>\r\n                                        <td>\r\n                                            {(() => {\r\n                                                const isChecked = paymentBillInfo.findIndex(o =>\r\n                                                    stringCompare(o?.bill_name, invoice.Po_Inv_No)\r\n                                                    && isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n                                                ) !== -1;\r\n\r\n                                                return (\r\n                                                    <div>\r\n                                                        <input\r\n                                                            className=\"form-check-input shadow-none pointer\"\r\n                                                            style={{ padding: '0.7em' }}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={isChecked}\r\n                                                            onChange={() => {\r\n                                                                if (isChecked) onClickPurchaseInvoice({\r\n                                                                    ...invoice,\r\n                                                                    bill_name: invoice.Po_Inv_No,\r\n                                                                    pay_bill_id: invoice.PIN_Id\r\n                                                                }, true)\r\n                                                                else onClickPurchaseInvoice({\r\n                                                                    ...invoice,\r\n                                                                    bill_name: invoice.Po_Inv_No,\r\n                                                                    pay_bill_id: invoice.PIN_Id\r\n                                                                })\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                )\r\n                                            })()}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                            <tr>\r\n                                <td colSpan={4} rowSpan={3}></td>\r\n                                <td>Total Amount: </td>\r\n                                <td colSpan={4} className=\"fw-bold fa-15 text-end\">\r\n                                    {NumberFormat(TotalAmount)}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Selected Bill Amount: </td>\r\n                                <td colSpan={4} className=\"text-primary text-end fw-bold\">\r\n                                    {NumberFormat(SelectedBillAmount)}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pending Bill Amount: </td>\r\n                                <td colSpan={4} className=\"text-danger text-end\">\r\n                                    {NumberFormat(PendingBillAmount)}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoicePayment;","import { Button, Dialog, DialogContent, DialogTitle, DialogActions, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, NumberFormat, reactSelectFilterLogic, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { paymentTypes } from \"./variable\";\r\nimport { Close, Search, Done } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport { useMemo } from \"react\";\r\n\r\nconst ChoosePaymentComponent = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    paymentGeneralInfo = {},\r\n    paymentBillInfo = [],\r\n    filters,\r\n    baseData,\r\n    setPaymentGeneralInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff,\r\n    paymentAdjesments = []\r\n}) => {\r\n\r\n    const searchPayments = (debitAccount, creditAccount, paymentType) => {\r\n\r\n        if (!checkIsNumber(paymentType)) return toast.warn('Select Bill Type')\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/search?debit_ledger=${debitAccount}&credit_ledger=${creditAccount}&pay_bill_type=${paymentType}`,\r\n            loadingOn,\r\n            loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('paymentInvoiceSearchResult', toArray(data.data))\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSelectPayment = (invoiceDetails) => {\r\n        setPaymentGeneralInfo(pre => {\r\n            return Object.fromEntries(\r\n                Object.entries(pre).map(([key, value]) => [key, invoiceDetails[key] || value])\r\n            )\r\n        })\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return paymentBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n        ) + paymentAdjesments.reduce(\r\n            (acc, ref) => Addition(acc, ref?.adjesmentValue), 0\r\n        )\r\n    }, [paymentBillInfo, paymentAdjesments]);\r\n\r\n    const PendingAgainstRef = useMemo(() => {\r\n        return Subraction(paymentGeneralInfo.debit_amount, TotalAgainstRef)\r\n    }, [TotalAgainstRef, paymentGeneralInfo.debit_amount])\r\n\r\n    return (\r\n        <>\r\n            {/* choose Payment */}\r\n            <table className=\"table table-bordered fa-13\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Payment Details</th>\r\n                        <th colSpan={5} className=\"text-end\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => updateFilterData('selectPaymentDialog', true)}\r\n                            >Choose Payment</Button>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Payment Type</th>\r\n                        <td style={cellStyle}>\r\n                            {paymentTypes.find(\r\n                                type => isEqualNumber(type.value, paymentGeneralInfo.pay_bill_type)\r\n                            ).label}\r\n                        </td>\r\n\r\n                        <th className=\"text-muted\">Debit Account</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.debit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Payment Value</th>\r\n                        <td style={cellStyle} className=\"text-primary fw-bold\">{NumberFormat(paymentGeneralInfo.debit_amount)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Payment Invoice</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.payment_invoice_no}</td>\r\n\r\n                        <th className=\"text-muted\">Credit Account</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.credit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Pending Against Amount</th>\r\n                        <td style={cellStyle} className=\"text-danger fw-bold\">{NumberFormat(PendingAgainstRef)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <Dialog\r\n                open={filters.selectPaymentDialog}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Choose Payment Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n\r\n                        {/* payment type */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Payment Type<RequiredStar /></label>\r\n                            <Select\r\n                                value={filters.paymentType}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('paymentType', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...paymentTypes\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select payment type\"}\r\n                                filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* debit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Debit Account</label>\r\n                            <Select\r\n                                value={filters.debitAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('debitAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Debit Account\"}\r\n                                filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* credit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Credit Account</label>\r\n                            <Select\r\n                                value={filters.creditAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('creditAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Credit Account\"}\r\n                                filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    startIcon={<Search />}\r\n                                    onClick={() => searchPayments(\r\n                                        filters.debitAccount.value,\r\n                                        filters.creditAccount.value,\r\n                                        filters.paymentType.value,\r\n                                    )}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FilterableTable\r\n                        title=\"Payments List\"\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={13}\r\n                        bodyFontSizePx={12}\r\n                        tableMaxHeight={450}\r\n                        dataArray={baseData.paymentInvoiceSearchResult}\r\n                        columns={[\r\n                            createCol('payment_invoice_no', 'string', 'InvoiceNo'),\r\n                            createCol('payment_date', 'date', 'Date'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Bill Type',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    paymentTypes.find(type => isEqualNumber(type.value, row?.pay_bill_type)).label\r\n                                )\r\n                            },\r\n                            createCol('debit_ledger_name', 'string', 'Debit Acc'),\r\n                            createCol('credit_ledger_name', 'string', 'Credit Acc'),\r\n                            createCol('debit_amount', 'number', 'Amount'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Pending Ref Amount',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => Subraction(row?.debit_amount, row?.TotalReferenceAdded)\r\n                            },\r\n                            createCol('debit_amount', 'number', ''),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Action',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            onSelectPayment(row);\r\n                                            closeDialog();\r\n                                            updateFilterData('paymentType', initialSelectValue);\r\n                                            updateFilterData('debitAccount', initialSelectValue);\r\n                                            updateFilterData('creditAccount', initialSelectValue);\r\n                                        }}\r\n                                    ><Done className=\"fa-20\" /></IconButton>\r\n                                )\r\n                            }\r\n                        ]}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePaymentComponent;","import { useState } from \"react\"\r\nimport { isEqualNumber, LocalDate } from \"../../../Components/functions\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Done, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\n\r\n\r\n\r\nconst DisplayStockJournal = ({\r\n    arrayData = [],\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    paymentBillInfo = [],\r\n    onSelect\r\n}) => {\r\n\r\n    const TableRows = ({ row = {}, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const isProcessing = row?.BillType === 'PROCESSING';\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{sno}</td>\r\n                    <td>{row?.journalVoucherNo || '-'}</td>\r\n                    <td>{row?.journalDate ? LocalDate(row?.journalDate) : '-'}</td>\r\n                    <td>{row?.BillType || '-'}</td>\r\n                    <td>{row?.voucherTypeGet || '-'}</td>\r\n                    <td>{row?.narration || '-'}</td>\r\n                    <td>{row?.paidAmount}</td>\r\n                    <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            {(() => {\r\n                                const isChecked = paymentBillInfo.findIndex(o =>\r\n                                    isEqualNumber(o?.pay_bill_id, row.journalId)\r\n                                ) !== -1;\r\n\r\n                                return (\r\n                                    <div>\r\n                                        <input\r\n                                            className=\"form-check-input shadow-none pointer\"\r\n                                            style={{ padding: '0.7em' }}\r\n                                            type=\"checkbox\"\r\n                                            checked={isChecked}\r\n                                            onChange={() => {\r\n                                                if (isChecked) onSelect(row, true)\r\n                                                else onSelect(row)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })()}\r\n\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"mx-1\"\r\n                                onClick={() => setOpen(pre => !pre)}\r\n                            >\r\n                                {open ? <KeyboardArrowUp className=\"fa-20\" /> : <KeyboardArrowDown className=\"fa-20\" />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <tr>\r\n                        <td colSpan={8} className=\"p-4\">\r\n\r\n                            <div className=\"row \">\r\n\r\n                                {isProcessing && (\r\n                                    <div className={\"col-md-6 p-1\"}>\r\n                                        <FilterableTable\r\n                                            title=\"Source\"\r\n                                            headerFontSizePx={11}\r\n                                            bodyFontSizePx={11}\r\n                                            EnableSerialNumber\r\n                                            dataArray={row?.SourceDetails}\r\n                                            columns={[\r\n                                                createCol('Product_Name', 'string', 'Item'),\r\n                                                createCol('Godown_Name', 'string', 'From'),\r\n                                                createCol('Sour_Qty', 'number', 'QTY'),\r\n                                            ]}\r\n                                            disablePagination\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className={isProcessing ? \"col-md-6 p-1\" : 'col-12 p-1'}>\r\n                                    <FilterableTable\r\n                                        title={isProcessing ? \"Destination\" : 'Items'}\r\n                                        headerFontSizePx={11}\r\n                                        bodyFontSizePx={11}\r\n                                        EnableSerialNumber\r\n                                        dataArray={row?.Products_List}\r\n                                        columns={[\r\n                                            createCol('productNameGet', 'string', 'Item'),\r\n                                            ...(!isProcessing ? [\r\n                                                createCol('fromLocationGet', 'string', 'From'),\r\n                                            ] : []),\r\n                                            createCol('toLocationGet', 'string', 'To'),\r\n                                            createCol('quantity', 'number', 'QTY'),\r\n                                            createCol('expence_value', 'number', 'Expence'),\r\n                                        ]}\r\n                                        disablePagination\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" colSpan={3} >Stock Journal</th>\r\n                            <th colSpan={5} className=\"text-end\"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Voucher', 'Narration', 'Paid Amount', '#'].map(\r\n                                (col, colInd) => <td key={colInd}>{col}</td>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {arrayData.map((journal, jouInd) => <TableRows row={journal} sno={jouInd + 1} key={jouInd} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayStockJournal","import { Delete, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Local utility functions\r\nconst toNumber = (val) => Number(val) || 0;\r\n\r\nconst add = (a, b) => toNumber(a) + toNumber(b);\r\nconst subtract = (a, b) => toNumber(a) - toNumber(b);\r\nconst multiply = (a, b) => toNumber(a) * toNumber(b);\r\nconst divide = (a, b) => b !== 0 ? toNumber(a) / toNumber(b) : 0;\r\nconst roundNumber = (num, precision = 2) => Number(toNumber(num).toFixed(precision));\r\nconst isEqualNumber = (a, b) => toNumber(a) === toNumber(b);\r\nconst numberFormat = (num) => new Intl.NumberFormat().format(toNumber(num));\r\nconst localDate = (dateStr) => new Date(dateStr).toLocaleDateString();\r\n\r\nconst ListCostingDetails = ({\r\n    paymentBillInfo = [],\r\n    paymentCostingInfo = [],\r\n    setPaymentBillInfo,\r\n    setPaymentCostingInfo,\r\n    onInputValidate,\r\n    onSelectStockJournal,\r\n    journalAmountOnChange,\r\n}) => {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const onChangeAmount = (itemDetails, amount) => {\r\n        setPaymentCostingInfo((pre) => {\r\n            const selectedItem = [...pre];\r\n            const indexOfInvoice = selectedItem.findIndex(\r\n                (inv) =>\r\n                    isEqualNumber(itemDetails.pay_bill_id, inv.pay_bill_id) &&\r\n                    isEqualNumber(itemDetails.item_id, inv.item_id) &&\r\n                    isEqualNumber(itemDetails.arr_id, inv.arr_id) \r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedItem[indexOfInvoice].expence_value = toNumber(amount);\r\n            }\r\n            return selectedItem;\r\n        });\r\n    };\r\n\r\n    // Weighted average distribution when user enters journal amount\r\n    const onChangeJournalAmount = (journal, amount = 0) => {\r\n        const totalAmount = toNumber(amount);\r\n\r\n        setPaymentBillInfo((pre) => {\r\n            const updated = [...pre];\r\n            const index = updated.findIndex((b) => isEqualNumber(b.pay_bill_id, journal.pay_bill_id));\r\n            if (index !== -1) updated[index].Debit_Amo = totalAmount;\r\n            return updated;\r\n        });\r\n\r\n        setPaymentCostingInfo((prev) => {\r\n            const items = prev.filter((item) => isEqualNumber(item.pay_bill_id, journal.pay_bill_id));\r\n\r\n            // const shouldDistribute = items.every((item) => !item.expence_value || Number(item.expence_value) === 0);\r\n\r\n            // if (!shouldDistribute || items.length === 0) return prev;\r\n\r\n            const totalQty = items.reduce((sum, item) => add(sum, item.itemQuantity), 0);\r\n            const unitCost = divide(totalAmount, totalQty);\r\n\r\n            let distributed = 0;\r\n\r\n            const updatedItems = items.map((item, index) => {\r\n                const weighted = roundNumber(multiply(item.itemQuantity, unitCost));\r\n                if (index < items.length - 1) {\r\n                    distributed = add(distributed, weighted);\r\n                    return {\r\n                        ...item,\r\n                        expence_value: weighted,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ...item,\r\n                        expence_value: roundNumber(subtract(totalAmount, distributed)),\r\n                    };\r\n                }\r\n            });\r\n\r\n            return prev.map((item) => {\r\n                if (isEqualNumber(item.pay_bill_id, journal.pay_bill_id)) {\r\n                    const updated = updatedItems.find((i) => (\r\n                        isEqualNumber(i.item_id, item.item_id) &&\r\n                        isEqualNumber(i.arr_id, item.arr_id)\r\n                    ));\r\n                    return updated || item;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                {paymentBillInfo.map((journal, journalIndex) => (\r\n                    <table className=\"table table-bordered fa-12 my-3\" key={journalIndex}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"bg-light\">{journalIndex + 1}</th>\r\n                                <th className=\"bg-light text-primary vctr\">{journal.bill_name}</th>\r\n                                <th className=\"bg-light\">\r\n                                    Date: {journal.StockJournalDate ? localDate(journal.StockJournalDate) : \"-\"}\r\n                                </th>\r\n                                <th className=\"bg-light\">{journal.JournalBillType}</th>\r\n                                <th className=\"bg-light\">Paid: {journal.TotalPaidAmount}</th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <input\r\n                                        value={journal.Debit_Amo || \"\"}\r\n                                        className=\"cus-inpt p-2 border-dark text-primary bg-light\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={(e) => onChangeJournalAmount(journal, e.target.value)}\r\n                                    />\r\n                                </th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            onSelectStockJournal(\r\n                                                {\r\n                                                    ...journal,\r\n                                                    journalId: journal.pay_bill_id,\r\n                                                },\r\n                                                true\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Delete className=\"fa-20\" color=\"error\" />\r\n                                    </IconButton>\r\n                                    {/* \r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className=\"mx-1\"\r\n                                        onClick={() => setOpen((pre) => !pre)}\r\n                                    >\r\n                                        {open ? (\r\n                                            <KeyboardArrowUp className=\"fa-20\" />\r\n                                        ) : (\r\n                                            <KeyboardArrowDown className=\"fa-20\" />\r\n                                        )}\r\n                                    </IconButton> \r\n                                    */}\r\n                                </th>\r\n                            </tr>\r\n\r\n                            {open && (\r\n                                <tr>\r\n                                    <td className=\"vctr\">Sno</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        Item\r\n                                    </td>\r\n                                    <td className=\"vctr\">Quantity</td>\r\n                                    <td className=\"vctr\">Paid Amount</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>Payment Amount</span>\r\n                                            <span className=\"fa-17 text-primary\">\r\n                                                {numberFormat(toNumber(journal.Debit_Amo))}\r\n                                            </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </thead>\r\n                        {open && (\r\n                            <tbody>\r\n                                {paymentCostingInfo\r\n                                    .filter((itemDetails) => isEqualNumber(itemDetails.pay_bill_id, journal.pay_bill_id))\r\n                                    .map((item, itemIndex) => (\r\n                                        <tr key={itemIndex}>\r\n                                            <td>{`${journalIndex + 1}.${itemIndex + 1}`}</td>\r\n                                            <td colSpan={2}>{item.item_name}</td>\r\n                                            <td>{item?.itemQuantity}</td>\r\n                                            <td>{item?.PaidAmount}</td>\r\n                                            <td colSpan={2} className=\"p-0\">\r\n                                                <input\r\n                                                    value={item.expence_value || \"\"}\r\n                                                    className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                                    placeholder=\"Enter Amount\"\r\n                                                    type=\"number\"\r\n                                                    onChange={(e) => onChangeAmount(item, e.target.value)}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        )}\r\n                    </table>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListCostingDetails;\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, reactSelectFilterLogic, RoundNumber, stringCompare, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Search } from \"@mui/icons-material\";\r\nimport { paymentBillInfoInitialValue, paymentCostingInfoInitialValue, stockJournalTypes } from \"./variable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport DisplayStockJournal from \"./displayStockJournal\";\r\nimport ListCostingDetails from \"./listCostingDetail\";\r\n\r\nconst ExpencePayment = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    filters,\r\n    baseData,\r\n    paymentGeneralInfo = {},\r\n    paymentBillInfo = [],\r\n    paymentCostingInfo = [],\r\n    setPaymentGeneralInfo,\r\n    setPaymentBillInfo,\r\n    setPaymentCostingInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff\r\n}) => {\r\n\r\n    const [searchFilter, setSearchFilter] = useState({\r\n        reqDate: ISOString(),\r\n        stockJournalType: stockJournalTypes[0].value,\r\n        itemFilter: [],\r\n        journalVoucher: { label: 'ALL', value: '' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/products/dropDown`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('itemDropDownData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('journalVoucherData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const searchStockJournal = (date, journalType, items, voucher) => {\r\n        fetchLink({\r\n            address: `payment/paymentMaster/searchStockJournal`,\r\n            method: 'POST',\r\n            bodyData: { reqDate: date, stockJournalType: journalType, filterItems: items, voucher: voucher },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.data) {\r\n                updateBaseData('stockJournalSearchResult', toArray(data.data))\r\n            } else {\r\n                updateBaseData('stockJournalSearchResult', [])\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const onSelectStockJournal = (invoiceDetails, deleteOption) => {\r\n\r\n        setPaymentBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.pay_bill_id, invoiceDetails.journalId));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(paymentBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'bill_name': return [key, invoiceDetails?.journalVoucherNo];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n                            case 'Debit_Amo': return [key, 0];\r\n\r\n                            case 'StockJournalDate': return [key, invoiceDetails.journalDate];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        });\r\n\r\n        setPaymentCostingInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.pay_bill_id, invoiceDetails.journalId));\r\n\r\n            let updateCostinInfo;\r\n            if (deleteOption) {\r\n                updateCostinInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = invoiceDetails.Products_List.map(journalProduct => Object.fromEntries(\r\n                    Object.entries(paymentCostingInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'pur_date': return [key, invoiceDetails?.journalDate];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n\r\n                            case 'arr_id': return [key, journalProduct?.Arr_Id];\r\n                            case 'item_id': return [key, journalProduct?.productId];\r\n                            case 'item_name': return [key, journalProduct?.productNameGet];\r\n                            case 'itemQuantity': return [key, journalProduct?.quantity];\r\n                            case 'PaidAmount': return [key, journalProduct.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                ))\r\n                updateCostinInfo = [...excludeCurrentValue, ...reStruc];\r\n            }\r\n            return updateCostinInfo;\r\n        })\r\n\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setPaymentBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => isEqualNumber(invoice.pay_bill_id, inv.pay_bill_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Debit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n    const getJournalType = (typeId) => {\r\n        return [\r\n            {\r\n                label: 'MATERIAL INWARD',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'OTHER GODOWN',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'PROCESSING',\r\n                value: 3\r\n            },\r\n        ].find(journal => isEqualNumber(journal.value, typeId)).label\r\n    }\r\n\r\n    console.log(paymentCostingInfo)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n\r\n                {/* <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={() => updateFilterData('selectStockJournal', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Paid Amount', 'Payment Amount', 'Action'].map(\r\n                                (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentBillInfo.map(\r\n                            (journal, journalIndex) => (\r\n                                <tr key={journalIndex}>\r\n                                    <td>{journalIndex + 1}</td>\r\n                                    <td>{journal.bill_name}</td>\r\n                                    <td>{journal.StockJournalDate ? LocalDate(journal.StockJournalDate) : '-'}</td>\r\n                                    <td>{journal.JournalBillType}</td>\r\n                                    <td>{journal.TotalPaidAmount}</td>\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={journal.Debit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(journal?.bill_amount, journal?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(journal, validated);\r\n                                            }}\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onSelectStockJournal({\r\n                                                ...journal,\r\n                                                journalId: journal.pay_bill_id\r\n                                            }, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                {/* <hr className=\"m-2\" /> */}\r\n\r\n                <div className=\"border d-flex align-items-center fw-bold text-primary justify-content-between p-2\">\r\n                    <span>Against Reference ({paymentBillInfo.length})</span>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => updateFilterData('selectStockJournal', true)}\r\n                    >Add reference</Button>\r\n                </div>\r\n\r\n                <ListCostingDetails\r\n                    paymentBillInfo={paymentBillInfo}\r\n                    setPaymentBillInfo={setPaymentBillInfo}\r\n                    paymentCostingInfo={paymentCostingInfo}\r\n                    setPaymentCostingInfo={setPaymentCostingInfo}\r\n                    onInputValidate={onInputValidate}\r\n                    onChangeAmount={onChangeAmount}\r\n                    onSelectStockJournal={onSelectStockJournal}\r\n                />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.selectStockJournal}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Stock Journal Expences</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        searchStockJournal(\r\n                            searchFilter.reqDate,\r\n                            searchFilter.stockJournalType,\r\n                            searchFilter.itemFilter.map((item) => item.value),\r\n                            searchFilter.journalVoucher.value\r\n                        );\r\n                    }}>\r\n                        <div className=\"row\">\r\n                            {/* Date filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Date<RequiredStar /></label>\r\n                                <input\r\n                                    value={searchFilter.reqDate}\r\n                                    type=\"date\"\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            {/* stock jounal type filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Stock Journal Type <RequiredStar /></label>\r\n                                <select\r\n                                    value={searchFilter.stockJournalType}\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({\r\n                                        ...pre,\r\n                                        stockJournalType: e.target.value,\r\n                                        journalVoucher: { label: 'ALL ', value: '' }\r\n                                    }))}\r\n                                    required\r\n                                >\r\n                                    {stockJournalTypes.map((type, typeIndex) => (\r\n                                        <option value={type.value} key={typeIndex}>{type.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* item filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Item Filter <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.itemFilter}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, itemFilter: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        initialSelectValue,\r\n                                        ...toArray(baseData.itemDropDownData).map(\r\n                                            (item) => ({ value: item.Product_Id, label: item.Product_Name })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    isMulti={true}\r\n                                    closeMenuOnSelect={false}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* voucher filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Journal Voucher <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.journalVoucher}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, journalVoucher: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        { value: '', label: 'ALL' },\r\n                                        ...toArray(baseData.journalVoucherData).filter(\r\n                                            fil => stringCompare(\r\n                                                fil.Type,\r\n                                                getJournalType(searchFilter.stockJournalType)\r\n                                            )\r\n                                        ).map(\r\n                                            (voucher) => ({ value: voucher.Vocher_Type_Id, label: voucher.Voucher_Type })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    closeMenuOnSelect={false}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* submit search */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<Search />}\r\n                                >Search</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                    <DisplayStockJournal\r\n                        arrayData={toArray(baseData.stockJournalSearchResult)}\r\n                        paymentBillInfo={paymentBillInfo}\r\n                        onSelect={onSelectStockJournal}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"button\" onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpencePayment;","import { Button } from \"@mui/material\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, isValidObject, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { paymentGeneralInfoInitialValue } from \"./variable\";\r\nimport { Save } from \"@mui/icons-material\";\r\nimport PurchaseInvoicePayment from \"./purchasePayment\";\r\nimport ChoosePaymentComponent from \"./choosePayment\";\r\nimport { toast } from \"react-toastify\";\r\nimport ExpencePayment from \"./expencesPayment\";\r\nimport AdjesmentsList from \"../../Receipts/ReceiptMaster/adjesments\";\r\n\r\n\r\nconst initialSelectValue = { value: '', label: '' };\r\nconst filterInitialValue = {\r\n    paymentInvoice: initialSelectValue,\r\n    debitAccount: initialSelectValue,\r\n    creditAccount: initialSelectValue,\r\n    paymentType: initialSelectValue,\r\n    journalType: initialSelectValue,\r\n    itemFilter: initialSelectValue,\r\n    journalDate: '',\r\n    selectPaymentDialog: false,\r\n    selectPurchaseInvoice: false,\r\n    selectStockJournal: false,\r\n}\r\n\r\nconst AddPaymentReference = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n    const cellStyle = { minWidth: '130px' };\r\n    const cellHeadStype = { width: '150px' };\r\n\r\n    const [paymentGeneralInfo, setPaymentGeneralInfo] = useState(paymentGeneralInfoInitialValue)\r\n    const [paymentBillInfo, setPaymentBillInfo] = useState([]);\r\n    const [paymentCostingInfo, setPaymentCostingInfo] = useState([]);\r\n    const [paymentAdjesments, setPaymentAdjesments] = useState([]);\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        accountGroup: [],\r\n        accounts: [],\r\n        paymentInvoiceSearchResult: [],\r\n        stockJournalSearchResult: [],\r\n        purchaseInvoiceSearchResult: [],\r\n        itemDropDownData: [],\r\n        journalVoucherData: [],\r\n    });\r\n\r\n    const [filters, setFilters] = useState(filterInitialValue)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    accountGroupResponse,\r\n                    accountResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `payment/accountGroup` }),\r\n                    fetchLink({ address: `payment/accounts` }),\r\n                ]);\r\n\r\n                const accountGroup = toArray(accountGroupResponse.success ? accountGroupResponse.data : []).sort(\r\n                    (a, b) => String(a?.Group_Name).localeCompare(b?.Group_Name)\r\n                );\r\n                const accounts = toArray(accountResponse.success ? accountResponse.data : []).sort(\r\n                    (a, b) => String(a?.Account_name).localeCompare(b?.Account_name)\r\n                );\r\n\r\n                updateBaseData('accountGroup', accountGroup);\r\n                updateBaseData('accounts', accounts);\r\n\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isEqualNumber(paymentGeneralInfo.pay_bill_type, 1) || !paymentGeneralInfo.debit_ledger || !checkIsNumber(paymentGeneralInfo.debit_ledger)) {\r\n            updateBaseData('purchaseInvoiceSearchResult', []);\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `payment/paymentPendingInvoices?Acc_Id=${paymentGeneralInfo.debit_ledger}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('purchaseInvoiceSearchResult', toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [paymentGeneralInfo.debit_ledger, paymentGeneralInfo.pay_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            !checkIsNumber(paymentGeneralInfo.pay_id)\r\n            || !checkIsNumber(paymentGeneralInfo.pay_bill_type)\r\n            || (\r\n                !isEqualNumber(paymentGeneralInfo.pay_bill_type, 1)\r\n                && !isEqualNumber(paymentGeneralInfo.pay_bill_type, 3)\r\n            )\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef?payment_id=${paymentGeneralInfo.pay_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const reSturc = toArray(data.data).map(bill => ({\r\n                    ...bill,\r\n                    PurchaseInvoiceDate: bill.referenceBillDate,\r\n                    StockJournalDate: bill.referenceBillDate,\r\n                    TotalPaidAmount: bill.totalPaidAmount,\r\n                    PendingAmount: Subraction(bill?.Total_Invoice_value, bill.totalPaidAmount),\r\n                }));\r\n                setPaymentBillInfo(reSturc);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef/costingDetails?payment_id=${paymentGeneralInfo.pay_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPaymentCostingInfo(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [paymentGeneralInfo.pay_id, paymentGeneralInfo.pay_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(paymentGeneralInfo.pay_id)) return setPaymentAdjesments([]);\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/adjesments?payment_id=${paymentGeneralInfo.pay_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPaymentAdjesments(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [paymentGeneralInfo.pay_id])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setPaymentGeneralInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(paymentGeneralInfoInitialValue).map(([key, value]) => {\r\n                        if (key === 'payment_date') return [key, editValues[key] ? ISOString(editValues[key]) : value];\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    }, [editValues])\r\n\r\n    const updateBaseData = (key = '', value = []) => {\r\n        setBaseData(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const updateFilterData = (key = '', value = []) => {\r\n        setFilters(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        updateFilterData('selectPaymentDialog', false);\r\n        updateFilterData('selectPurchaseInvoice', false);\r\n        updateFilterData('selectStockJournal', false);\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setPaymentGeneralInfo(paymentGeneralInfoInitialValue);\r\n        setPaymentBillInfo([]);\r\n        setPaymentCostingInfo([]);\r\n        setFilters(filterInitialValue);\r\n        updateBaseData('paymentInvoiceSearchResult', []);\r\n        updateBaseData('stockJournalSearchResult', []);\r\n        updateBaseData('purchaseInvoiceSearchResult', []);\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return paymentBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n        ) + paymentAdjesments.reduce(\r\n            (acc, ref) => Addition(acc, ref?.adjesmentValue), 0\r\n        )\r\n    }, [paymentBillInfo, paymentAdjesments]);\r\n\r\n    const SavePayment = () => {\r\n        if (TotalAgainstRef > paymentGeneralInfo.debit_amount) return toast.warn('Payment amount is invalid');\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                payment_id: paymentGeneralInfo.pay_id,\r\n                payment_no: paymentGeneralInfo.payment_invoice_no,\r\n                payment_date: paymentGeneralInfo.payment_date,\r\n                bill_type: paymentGeneralInfo.pay_bill_type,\r\n                BillsDetails: toArray(paymentBillInfo),\r\n                CostingDetails: toArray(paymentCostingInfo),\r\n                DR_CR_Acc_Id: paymentGeneralInfo.debit_ledger\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                resetAll();\r\n                navigate('/erp/payments/paymentList');\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white p-2 rounded-2\">\r\n\r\n                <div className=\"table-responsive\">\r\n\r\n                    {/* payment invoices */}\r\n                    <div className=\"p-2 d-flex align-items-center mb-3\">\r\n                        <h5 className=\"m-0 flex-grow-1\">Payment Reference Creation</h5>\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant='contained'\r\n                            className=\"mx-1\"\r\n                            onClick={() => navigate('/erp/payments/paymentList')}\r\n                        >back</Button>\r\n                    </div>\r\n\r\n                    {/* choose Payment */}\r\n                    <ChoosePaymentComponent\r\n                        cellHeadStype={cellHeadStype}\r\n                        cellStyle={cellStyle}\r\n                        paymentGeneralInfo={paymentGeneralInfo}\r\n                        paymentBillInfo={paymentBillInfo}\r\n                        filters={filters}\r\n                        baseData={baseData}\r\n                        setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                        updateFilterData={updateFilterData}\r\n                        updateBaseData={updateBaseData}\r\n                        closeDialog={closeDialog}\r\n                        loadingOn={loadingOn}\r\n                        loadingOff={loadingOff}\r\n                        paymentAdjesments={paymentAdjesments}\r\n                    />\r\n\r\n                    {/* choose Purchase invoice */}\r\n                    {isEqualNumber(paymentGeneralInfo.pay_bill_type, 1) && (\r\n                        <PurchaseInvoicePayment\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            paymentGeneralInfo={paymentGeneralInfo}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            paymentBillInfo={paymentBillInfo}\r\n                            setPaymentBillInfo={setPaymentBillInfo}\r\n                            paymentAdjesments={paymentAdjesments}\r\n                        />\r\n                    )}\r\n\r\n                    {/* choose Stock journal */}\r\n                    {isEqualNumber(paymentGeneralInfo.pay_bill_type, 3) && (\r\n                        <ExpencePayment\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            paymentGeneralInfo={paymentGeneralInfo}\r\n                            paymentBillInfo={paymentBillInfo}\r\n                            paymentCostingInfo={paymentCostingInfo}\r\n                            setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                            setPaymentBillInfo={setPaymentBillInfo}\r\n                            setPaymentCostingInfo={setPaymentCostingInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            paymentAdjesments={paymentAdjesments}\r\n                        />\r\n                    )}\r\n\r\n                    {paymentAdjesments.length > 0 && (\r\n                        <AdjesmentsList adjesmentData={paymentAdjesments} />\r\n                    )}\r\n\r\n                </div>\r\n\r\n                <hr className=\"my-2\" />\r\n\r\n                <div className=\"p-2 d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<Save />}\r\n                        disabled={\r\n                            !checkIsNumber(paymentGeneralInfo.pay_id)\r\n                            || paymentBillInfo.length === 0\r\n                        }\r\n                        onClick={SavePayment}\r\n                    >Save</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPaymentReference;","import { checkIsNumber, ISOString, storageValue, getSessionUser } from \"../../../Components/functions\";\r\n\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const paymentGeneralInfoInitialValue = {\r\n    pay_id: '',\r\n    year_id: '',\r\n    payment_voucher_type_id: '',\r\n    payment_sno: '',\r\n    payment_invoice_no: '',\r\n\r\n    payment_date: ISOString(),\r\n    pay_bill_type: 1,\r\n    is_new_ref: 0,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    transaction_type: '',\r\n    \r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n    \r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const paymentBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n    \r\n    // form values\r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_ref_number: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    PurchaseInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const paymentCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type : '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const paymentTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'VENDOR - PURCHASE INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES / OTHERS (IN-DIRECT)'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'EXPENCES - STOCK JOURNAL (DIRECT)'\r\n    },\r\n    {\r\n        value: 4,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const paymentStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n]"],"names":["_ref","cellHeadStype","width","paymentBillInfo","setPaymentBillInfo","filters","baseData","updateFilterData","closeDialog","onClickPurchaseInvoice","invoiceDetails","deleteOption","pre","excludeCurrentValue","toArray","filter","o","stringCompare","bill_name","isEqualNumber","pay_bill_id","updateBillInfo","reStruc","Object","fromEntries","entries","paymentBillInfoInitialValue","map","_ref2","key","value","PIN_Id","Po_Inv_No","toNumber","Total_Invoice_value","Po_Inv_Date","bill_ref_number","totalReference","Subraction","TotalAmount","purchaseInvoiceSearchResult","reduce","acc","invoice","Addition","SelectedBillAmount","findIndex","PendingBillAmount","_jsxs","_Fragment","children","_jsx","className","style","colSpan","Button","type","variant","disabled","length","onClick","col","colInd","invoiceInd","LocalDate","PurchaseInvoiceDate","NumberFormat","bill_amount","TotalPaidAmount","Debit_Amo","placeholder","onChange","e","maxAmount","validated","onInputValidate","input","max","inputValue","checkIsNumber","RoundNumber","target","onChangeAmount","amount","selectedInvoices","indexOfInvoice","inv","IconButton","size","Delete","color","Dialog","open","selectPurchaseInvoice","onClose","fullScreen","DialogTitle","Close","DialogContent","dataSource","Paid_Amount","journalAdjustment","isChecked","padding","checked","_objectSpread","rowSpan","DialogActions","cellStyle","minWidth","initialSelectValue","label","paymentGeneralInfo","setPaymentGeneralInfo","updateBaseData","loadingOn","loadingOff","paymentAdjesments","TotalAgainstRef","useMemo","ref","adjesmentValue","PendingAgainstRef","debit_amount","paymentTypes","find","pay_bill_type","debit_ledger_name","payment_invoice_no","credit_ledger_name","selectPaymentDialog","RequiredStar","Select","paymentType","menuPortalTarget","document","body","options","isDisabled","styles","customSelectStyles","isSearchable","required","filterOption","reactSelectFilterLogic","debitAccount","accounts","Acc_Id","Account_name","creditAccount","startIcon","Search","searchPayments","toast","warn","fetchLink","address","concat","then","data","success","FilterableTable","title","EnableSerialNumber","headerFontSizePx","bodyFontSizePx","tableMaxHeight","dataArray","paymentInvoiceSearchResult","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref3","row","_ref4","TotalReferenceAdded","_ref5","Done","arrayData","onSelect","TableRows","sno","setOpen","useState","isProcessing","BillType","journalVoucherNo","journalDate","voucherTypeGet","narration","paidAmount","journalId","KeyboardArrowUp","KeyboardArrowDown","SourceDetails","disablePagination","Products_List","journal","jouInd","val","Number","add","a","b","subtract","roundNumber","num","precision","arguments","undefined","toFixed","paymentCostingInfo","setPaymentCostingInfo","onSelectStockJournal","journalAmountOnChange","onChangeJournalAmount","totalAmount","updated","index","prev","items","item","totalQty","sum","itemQuantity","unitCost","divide","distributed","updatedItems","weighted","multiply","expence_value","i","item_id","arr_id","journalIndex","StockJournalDate","dateStr","Date","toLocaleDateString","JournalBillType","Intl","format","itemDetails","itemIndex","item_name","PaidAmount","selectedItem","searchFilter","setSearchFilter","reqDate","ISOString","stockJournalType","stockJournalTypes","itemFilter","journalVoucher","useEffect","catch","console","error","updateCostinInfo","journalProduct","paymentCostingInfoInitialValue","Arr_Id","productId","productNameGet","quantity","log","ListCostingDetails","selectStockJournal","onSubmit","searchStockJournal","date","journalType","voucher","preventDefault","method","bodyData","filterItems","typeIndex","itemDropDownData","Product_Id","Product_Name","isMulti","closeMenuOnSelect","journalVoucherData","fil","Type","typeId","Vocher_Type_Id","Voucher_Type","DisplayStockJournal","stockJournalSearchResult","filterInitialValue","paymentInvoice","AddRights","EditRights","DeleteRights","navigate","useNavigate","editValues","useLocation","state","paymentGeneralInfoInitialValue","setPaymentAdjesments","setBaseData","accountGroup","setFilters","async","accountGroupResponse","accountResponse","Promise","all","sort","String","Group_Name","localeCompare","fetchData","debit_ledger","pay_id","reSturc","bill","referenceBillDate","totalPaidAmount","PendingAmount","isValidObject","_editValues$key","ChoosePaymentComponent","PurchaseInvoicePayment","ExpencePayment","AdjesmentsList","adjesmentData","Save","SavePayment","payment_id","payment_no","payment_date","bill_type","BillsDetails","CostingDetails","DR_CR_Acc_Id","message","userDetails","getSessionUser","user","year_id","payment_voucher_type_id","payment_sno","is_new_ref","credit_ledger","credit_amount","remarks","status","transaction_type","check_no","check_date","bank_name","bank_date","created_by","UserId","altered_by","created_on","alterd_on","auto_id","Credit_Amo","Debit_Ledger_Id","paymentStatus"],"sourceRoot":""}