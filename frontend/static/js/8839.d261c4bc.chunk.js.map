{"version":3,"file":"static/js/8839.d261c4bc.chunk.js","mappings":"qIAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mNACD,a,8MCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,8DACD,Y,0DCIJ,MACMC,EAAiB,CACnBC,UAAUC,EAAAA,EAAAA,MACVC,QAAQD,EAAAA,EAAAA,OAGNE,EAAa,eAAAC,EAAA,IAAWC,EAAGC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEC,EAAKH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAAwD,QAAxDJ,GAAjBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAuBI,KAAKC,GAAOC,OAAOD,EAAIN,MAAUO,OAAOH,WAAO,IAAAL,EAAAA,EAAI,CAAC,CAAE,EAycvG,EAvc8BS,IAAgC,IAA/B,UAAEC,EAAS,WAAEC,GAAYF,EACpD,MAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAXa,IAAIC,iBAAgBF,EAAAA,EAAAA,MAAcG,QAY/CC,GAAOC,EAAAA,EAAAA,MAAiBD,MACvBE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KAExCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,CAC7CS,cAAe,GACfC,mBAAoB,GACpBC,WAAY,CAAC,KAEVC,EAASC,IAAcb,EAAAA,EAAAA,UAAS,CACnC3B,SAAUD,EAAeC,SACzBE,OAAQH,EAAeG,OACvBuC,UAAW1C,EAAeC,SAC1B0C,QAAS3C,EAAeG,OACxByC,SAAS,EACTC,cAAc,EACdC,mBAAmB,KAGvBC,EAAAA,EAAAA,WAAU,KACFhC,GAAWA,KACfiC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,2CAADC,OAAoD,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASE,UAAS,YAAAQ,OAAkB,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASG,SAC1FQ,QAAS,CACL,GAAU,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,cAEjBC,KAAKC,IACAA,EAAKC,SACLrB,EAAgBoB,EAAKA,QAE1BE,MAAMC,GAAKC,QAAQC,MAAMF,IAAIG,QAAQ,KAChC5C,GAAYA,OAErB,CAAQ,OAAPwB,QAAO,IAAPA,OAAO,EAAPA,EAASE,UAAkB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,WAEjCI,EAAAA,EAAAA,WAAU,KACN,MAAMc,EAAe,CACjB5D,SAAUoB,EAAMyC,IAAI,cAAeC,EAAAA,EAAAA,IAAY1C,EAAMyC,IAAI,aACnDzC,EAAMyC,IAAI,YACV9D,EAAeC,SACrBE,OAAQkB,EAAMyC,IAAI,YAAaC,EAAAA,EAAAA,IAAY1C,EAAMyC,IAAI,WAC/CzC,EAAMyC,IAAI,UACV9D,EAAeG,QAEzBsC,EAAWuB,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEtB,UAAWmB,EAAa5D,SAAU0C,QAASkB,EAAa1D,WACtF,CAACgB,EAASI,UAEbwB,EAAAA,EAAAA,WAAU,KAEYmB,WACd,IACI,MACIC,EACAC,EACAC,SAEMC,QAAQC,IAAI,EAClBvB,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,sBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,oCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,2BAIlBuB,GAAgBL,EAAiBZ,QAAUY,EAAiBb,KAAO,IAAImB,KACzE,CAACC,EAAGC,IAAM9D,OAAQ,OAAD6D,QAAC,IAADA,OAAC,EAADA,EAAGE,cAAcC,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGC,eAEjDE,GAAmBV,EAAwBb,QAAUa,EAAwBd,KAAO,IAAImB,KAC1F,CAACC,EAAGC,IAAM9D,OAAQ,OAAD6D,QAAC,IAADA,OAAC,EAADA,EAAGK,aAAaF,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGI,cAEhDhD,GAAesC,EAAoBd,QAAUc,EAAoBf,KAAO,IAAImB,KAC9E,CAACC,EAAGC,IAAM9D,OAAQ,OAAD6D,QAAC,IAADA,OAAC,EAADA,EAAGM,cAAcH,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGK,eAMvDrD,EAAY6C,GACZ1C,EAAUgD,GACV9C,EAAeD,EAEnB,CAAE,MAAO0B,GACLC,QAAQC,MAAM,uBAAwBF,EAC1C,GAGJwB,IACD,IAEH,MAKMC,EAAcA,KAChBzC,EAAWuB,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEnB,cAAc,EAAOC,mBAAmB,KACrEV,EAAgB,CACZC,cAAe,GACfC,mBAAoB,GACpBC,WAAY,CAAC,KAwGrB,OACI4C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIvF,EAAAA,EAAAA,KAACwF,EAAAA,GAAe,CACZC,MACI,mBACG/C,EAAQE,UAAS,SAAAQ,QAAYsC,EAAAA,EAAAA,IAAUhD,EAAQE,YAAe,KAC9DF,EAAQG,QAAO,OAAAO,QAAUsC,EAAAA,EAAAA,IAAUhD,EAAQG,UAAa,IAAM,KAErE8C,UAAWxD,EACXyD,QAAS,CACL,CACIC,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAMC,IAAA,IAAC,IAAEC,GAAKD,EAAA,OACVjG,EAAAA,EAAAA,KAACmG,EAAAA,GAAa,CACVC,YAAa,CACT,CACIC,KAAM,UACNC,MAAMtG,EAAAA,EAAAA,KAACuG,EAAQ,IACfC,QAASA,IAjGfN,KAAS,IAADO,EAAAC,EAClC,MAAMC,EAAcC,OAAOC,YACvBD,OAAOE,QAAQC,EAAAA,+BAA+BC,IAAIC,IAAmB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhBrH,EAAKI,GAAMqG,EAC3D,MAAY,uBAARzG,EAAqC,CAACA,EAAK0F,EAAwB,oBAAI9F,EAAAA,EAAAA,IAAU8F,EAAwB,oBAAKtF,GACtG,eAARJ,EAA6B,CAACA,EAAK0F,EAAgB,WAAIA,EAAgB,WAAItF,GACnE,4BAARJ,EAA0C,CAACA,EAAqE,QAAlE0G,EAA4D,QAA5DC,EAAE7G,EAAW2B,EAAa,eAAmB,OAAHiE,QAAG,IAAHA,OAAG,EAAHA,EAAK4B,qBAAa,IAAAX,OAAA,EAA1DA,EAA4DY,YAAI,IAAAb,EAAAA,EAAItG,GAC5G,+BAARJ,EAA6C,CAACA,EAAK0F,EAAkB,cAC7D,cAAR1F,EAA4B,CAACA,EAC7B,aAAiC,QAAtB4G,EAAIlB,EAAiB,mBAAC,IAAAkB,EAAAA,EAAI,OACrC,oBAA6C,QAA3BC,EAAInB,EAAsB,wBAAC,IAAAmB,EAAAA,EAAI,OACjD,gBAAqC,QAAvBC,EAAIpB,EAAkB,oBAAC,IAAAoB,EAAAA,EAAI,OACzC,gBAAuC,QAAzBC,EAAIrB,EAAoB,sBAAC,IAAAqB,EAAAA,EAAI,OAC3C,gBAAuC,QAAzBC,EAAItB,EAAoB,sBAAC,IAAAsB,EAAAA,EAAI,OAC3C,gBAAyC,QAA3BC,EAAIvB,EAAsB,wBAAC,IAAAuB,EAAAA,EAAI,OAC7C,gBAAwC,QAA1BC,EAAIxB,EAAqB,uBAAC,IAAAwB,EAAAA,EAAI,OAC5C,gBAAwC,QAA1BC,EAAIzB,EAAqB,uBAAC,IAAAyB,EAAAA,EAAI,OAC5C,gBAAuC,QAAzBC,EAAI1B,EAAoB,sBAAC,IAAA0B,EAAAA,EAAI,OAC3C,oBAAsC,QAApBC,EAAI3B,EAAe,iBAAC,IAAA2B,EAAAA,EAAI,QAGvC,CAACrH,EAAKI,MAIfoH,EAAwB,OAAH9B,QAAG,IAAHA,GAAuB,QAApBO,EAAHP,EAAK8B,0BAAkB,IAAAvB,OAApB,EAAHA,EAAyBO,IAAIiB,GAC7CrB,OAAOC,YACVD,OAAOE,QAAQoB,EAAAA,yBAAyBlB,IAAImB,IAAmB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhBpI,EAAKI,GAAMuH,EACrD,MAAMU,EAAcvI,EAAWsB,EAAU,SAAUqG,EAAqC,yBAClFa,EAAaxI,EAAWyB,EAAQ,kBAAmBkG,EAAwC,4BAEjG,MAAY,iBAARzH,EAA+B,CAACA,EAA2B,QAAxB4H,EAAES,EAAYE,kBAAU,IAAAX,EAAAA,EAAIxH,GACvD,mBAARJ,EAAiC,CAAC,eAAwC,QAA1B6H,EAAEQ,EAAY/D,oBAAY,IAAAuD,EAAAA,EAAIzH,GACtE,oBAARJ,EAAkC,CAACA,EAAyB,QAAtB8H,EAAEQ,EAAWE,iBAAS,IAAAV,EAAAA,EAAI1H,GACxD,sBAARJ,EAAoC,CAACA,EAAwC,QAArC+H,EAAEN,EAAkC,4BAAC,IAAAM,EAAAA,EAAI3H,GACzE,aAARJ,EAA2B,CAACA,EAAuC,QAApCgI,EAAEP,EAAiC,2BAAC,IAAAO,EAAAA,EAAI5H,GAC/D,iBAARJ,EAA+B,CAACA,EAAuB,QAApBiI,EAAEI,EAAYI,cAAM,IAAAR,EAAAA,EAAI7H,GACnD,cAARJ,EAA4B,CAACA,EAAsB,QAAnBkI,EAAEG,EAAYK,aAAK,IAAAR,EAAAA,EAAI9H,GAC/C,cAARJ,EAA4B,CAACA,EAAwC,QAArCmI,EAAEV,EAAkC,4BAAC,IAAAU,EAAAA,EAAI/H,GACjE,aAARJ,EAA2B,CAACA,EAAuC,QAApCoI,EAAEX,EAAiC,2BAAC,IAAAW,EAAAA,EAAIhI,GAEpE,CAACJ,EAAKI,OAKnBuI,EAAmB,OAAHjD,QAAG,IAAHA,GAAkB,QAAfQ,EAAHR,EAAKiD,qBAAa,IAAAzC,OAAf,EAAHA,EAAoBM,IAAIoC,GACnCxC,OAAOC,YACVD,OAAOE,QAAQuC,EAAAA,oBAAoBrC,IAAIsC,IAAmB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhBvJ,EAAKI,GAAM0I,EAChD,MAAMT,EAAcvI,EAAWsB,EAAU,SAAUwH,EAA+B,wBAC5EN,EAAaxI,EAAWyB,EAAQ,kBAAmBqH,EAAkC,2BAE3F,MAAY,iBAAR5I,EAA+B,CAACA,EAA2B,QAAxB+I,EAAEV,EAAYE,kBAAU,IAAAQ,EAAAA,EAAI3I,GACvD,mBAARJ,EAAiC,CAAC,eAAwC,QAA1BgJ,EAAEX,EAAY/D,oBAAY,IAAA0E,EAAAA,EAAI5I,GACtE,oBAARJ,EAAkC,CAACA,EAAyB,QAAtBiJ,EAAEX,EAAWE,iBAAS,IAAAS,EAAAA,EAAI7I,GACxD,sBAARJ,EAAoC,CAACA,EAAkC,QAA/BkJ,EAAEN,EAA4B,2BAAC,IAAAM,EAAAA,EAAI9I,GACnE,aAARJ,EAA2B,CAACA,EAAiC,QAA9BmJ,EAAEP,EAA2B,0BAAC,IAAAO,EAAAA,EAAI/I,GACzD,iBAARJ,EAA+B,CAACA,EAAuB,QAApBoJ,EAAEf,EAAYI,cAAM,IAAAW,EAAAA,EAAIhJ,GACnD,cAARJ,EAA4B,CAACA,EAAsB,QAAnBqJ,EAAEhB,EAAYK,aAAK,IAAAW,EAAAA,EAAIjJ,GAC/C,cAARJ,EAA4B,CAACA,EAAkC,QAA/BsJ,EAAEV,EAA4B,2BAAC,IAAAU,EAAAA,EAAIlJ,GAC3D,aAARJ,EAA2B,CAACA,EAAiC,QAA9BuJ,EAAEX,EAA2B,0BAAC,IAAAW,EAAAA,EAAInJ,GAE9D,CAACJ,EAAKI,OASzBO,EAAS,qCAAsC,CAC3C6I,OAAK7F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACEwC,GAAW,IAAEwC,gBAAenB,qBAAoBiC,cAAe,QAyB3BC,CAAqBhE,IAExC,CACIG,KAAM,OACNC,MAAMtG,EAAAA,EAAAA,KAACmK,EAAAA,EAAU,IACjB3D,QAASA,KACL7D,EAAWuB,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAElB,mBAAmB,KAChDV,EAAgB,CACZG,YAAU0B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO+B,GAAG,IAAEkE,mBAAoBlE,EAAIkE,oBAAqB1E,EAAAA,EAAAA,IAAUQ,EAAIkE,oBAAsB,KACvG7H,cAAe2D,EAAIiD,cACnB3G,mBAAoB0D,EAAI8B,6BAQpDqC,EAAAA,EAAAA,IAAU,qBAAsB,OAAQ,SACxCA,EAAAA,EAAAA,IAAU,eAAgB,SAAU,cACpC,CACIxE,UAAW,EACXC,aAAc,WACdC,cAAc,EACdC,KAAMsE,IAAA,IAAAC,EAAA,IAAC,IAAErE,GAAKoE,EAAA,OAA+D,QAA/DC,EAAKjK,EAAW2B,EAAa,eAAmB,OAAHiE,QAAG,IAAHA,OAAG,EAAHA,EAAK4B,qBAAa,IAAAyC,OAAA,EAA1DA,EAA4DxC,QAEnFsC,EAAAA,EAAAA,IAAU,aAAc,SAAU,cAqClC,CACIxE,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAMwE,IAAA,IAAAC,EAAA,IAAC,IAAEvE,GAAKsE,EAAA,OAAKE,EAAAA,EAAAA,IAAgB,OAAHxE,QAAG,IAAHA,GAAkB,QAAfuE,EAAHvE,EAAKiD,qBAAa,IAAAsB,OAAf,EAAHA,EAAoBE,OAAO,CAACC,EAAKxB,KAC7DyB,EAAAA,EAAAA,IAASD,EAAW,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQ0B,oBACvB,MAEP,CACIjF,UAAW,EACXC,aAAc,cACdC,cAAc,EACdC,KAAM+E,IAAA,IAAAC,EAAA,IAAC,IAAE9E,GAAK6E,EAAA,OAAKL,EAAAA,EAAAA,IAAgB,OAAHxE,QAAG,IAAHA,GAAuB,QAApB8E,EAAH9E,EAAK8B,0BAAkB,IAAAgD,OAApB,EAAHA,EAAyBL,OAAO,CAACC,EAAKK,KAClEJ,EAAAA,EAAAA,IAASD,EAAgB,OAAXK,QAAW,IAAXA,OAAW,EAAXA,EAAaC,qBAC5B,OAEPb,EAAAA,EAAAA,IAAU,cAAe,SAAU,WACnCA,EAAAA,EAAAA,IAAU,mBAAoB,SAAU,gBACxCA,EAAAA,EAAAA,IAAU,eAAgB,SAAU,YACpCA,EAAAA,EAAAA,IAAU,iBAAkB,SAAU,aACtCA,EAAAA,EAAAA,IAAU,iBAAkB,SAAU,aACtCA,EAAAA,EAAAA,IAAU,mBAAoB,SAAU,aAM5Cc,YACInL,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAAC,UACIvF,EAAAA,EAAAA,KAACoL,EAAAA,EAAO,CAAC3F,MAAM,UAASF,UACpBvF,EAAAA,EAAAA,KAACqL,EAAAA,EAAU,CACPC,KAAK,QACLC,UAAU,OACVC,QAASA,IAAM7I,EAAWuB,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEnB,cAAc,KAASwC,UAEnEvF,EAAAA,EAAAA,KAACyL,EAAAA,EAAS,aAO9BpG,EAAAA,EAAAA,MAACqG,EAAAA,EAAM,CACHC,KAAMjJ,EAAQK,aACd6I,QAASxG,EACTyG,WAAS,EAACC,SAAS,KAAIvG,SAAA,EAEvBvF,EAAAA,EAAAA,KAAC+L,EAAAA,EAAW,CAAAxG,SAAC,aACbvF,EAAAA,EAAAA,KAACgM,EAAAA,EAAa,CAAAzG,UACVvF,EAAAA,EAAAA,KAAA,OAAKuL,UAAU,wBAAuBhG,UAClCvF,EAAAA,EAAAA,KAAA,SAAOuL,UAAU,QAAOhG,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EAEIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIvF,EAAAA,EAAAA,KAAA,MAAIiM,MAAO,CAAEC,cAAe,UAAW3G,SAAC,UACxCvF,EAAAA,EAAAA,KAAA,MAAAuF,UACIvF,EAAAA,EAAAA,KAAA,SACImM,KAAK,OACLvL,MAAO8B,EAAQvC,SACfiM,SAAUzI,GAAKhB,GAAUwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIzB,GAAO,IAAEvC,SAAUwD,EAAE0I,OAAOzL,SAC3D2K,UAAU,mBAKtBlG,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIvF,EAAAA,EAAAA,KAAA,MAAIiM,MAAO,CAAEC,cAAe,UAAW3G,SAAC,QACxCvF,EAAAA,EAAAA,KAAA,MAAAuF,UACIvF,EAAAA,EAAAA,KAAA,SACImM,KAAK,OACLvL,MAAO8B,EAAQrC,OACf+L,SAAUzI,GAAKhB,GAAUwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIzB,GAAO,IAAErC,OAAQsD,EAAE0I,OAAOzL,SACzD2K,UAAU,4BAStClG,EAAAA,EAAAA,MAACiH,EAAAA,EAAa,CAAA/G,SAAA,EACVvF,EAAAA,EAAAA,KAACuM,EAAAA,EAAM,CAACf,QAASpG,EAAYG,SAAC,WAC9BvF,EAAAA,EAAAA,KAACuM,EAAAA,EAAM,CACHf,QAASA,KAzRFgB,KACvB,MAAMC,EAAS,IAAIjL,gBAAgBgL,GACnCrL,EAAS,IAADiC,OAAKqJ,EAAOC,YAAc,CAAEC,SAAS,KA4RzBC,CAJuB,CACnBzM,SAAiB,OAAPuC,QAAO,IAAPA,OAAO,EAAPA,EAASvC,SACnBE,OAAe,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAASrC,SAGrB+E,KAEJyH,WAAW7M,EAAAA,EAAAA,KAAC8M,EAAAA,EAAM,IAClBC,QAAQ,WAAUxH,SACrB,kBAITF,EAAAA,EAAAA,MAACqG,EAAAA,EAAM,CACHC,KAAMjJ,EAAQM,kBACd4I,QAASxG,EACT4H,YAAU,EAAAzH,SAAA,EAEVvF,EAAAA,EAAAA,KAAC+L,EAAAA,EAAW,CAAAxG,SAAC,aACbvF,EAAAA,EAAAA,KAAA,OAAKuL,UAAU,uBAAsBhG,SAChC,CACG,CAAE/E,IAAK,qBAAsBiF,MAAO,QACpC,CAAEjF,IAAK,cAAeiF,MAAO,UAC7B,CAAEjF,IAAK,mBAAoBiF,MAAO,eAClC,CAAEjF,IAAK,eAAgBiF,MAAO,WAC9B,CAAEjF,IAAK,iBAAkBiF,MAAO,YAChC,CAAEjF,IAAK,iBAAkBiF,MAAO,YAChC,CAAEjF,IAAK,mBAAoBiF,MAAO,YAClC,CAAEjF,IAAK,kBAAmBiF,MAAO,YACjC,CAAEjF,IAAK,kBAAmBiF,MAAO,YACjC,CAAEjF,IAAK,iBAAkBiF,MAAO,aAClCuB,IAAI,CAACiG,EAAGC,KAAC,IAAAC,EAAA,OACP9H,EAAAA,EAAAA,MAAA,OAAakG,UAAU,0DAAyDhG,SAAA,EAC5EvF,EAAAA,EAAAA,KAAA,QAAMuL,UAAU,OAAMhG,SAAE0H,EAAExH,SAC1BzF,EAAAA,EAAAA,KAAA,QAAMuL,UAAU,OAAMhG,SAAgC,QAAhC4H,EAAE9K,EAAaI,WAAWwK,EAAEzM,YAAI,IAAA2M,EAAAA,EAAI,QAFpDD,QAMlB7H,EAAAA,EAAAA,MAAC2G,EAAAA,EAAa,CAAAzG,SAAA,EACVvF,EAAAA,EAAAA,KAACwF,EAAAA,GAAe,CACZG,UAAWtD,EAAaE,cACxBqD,QAAS,EACLyE,EAAAA,EAAAA,IAAU,aAAc,SAAU,eAClCA,EAAAA,EAAAA,IAAU,kBAAmB,SAAU,cACvCA,EAAAA,EAAAA,IAAU,eAAgB,OAAQ,SAClCA,EAAAA,EAAAA,IAAU,cAAe,SAAU,WACnCA,EAAAA,EAAAA,IAAU,sBAAuB,SAAU,iBAC3CA,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,aAC1CA,EAAAA,EAAAA,IAAU,sBAAuB,SAAU,SAC3CA,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,WAE9C5E,MAAM,iBACN2H,mBAAiB,KAErBpN,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACwF,EAAAA,GAAe,CACZG,UAAWtD,EAAaG,mBACxBiD,MAAM,sBACNG,QAAS,EACLyE,EAAAA,EAAAA,IAAU,aAAc,SAAU,eAClCA,EAAAA,EAAAA,IAAU,kBAAmB,SAAU,cACvCA,EAAAA,EAAAA,IAAU,cAAe,SAAU,WACnCA,EAAAA,EAAAA,IAAU,eAAgB,OAAQ,SAClCA,EAAAA,EAAAA,IAAU,uBAAwB,SAAU,iBAC5CA,EAAAA,EAAAA,IAAU,sBAAuB,SAAU,aAC3CA,EAAAA,EAAAA,IAAU,uBAAwB,SAAU,SAC5CA,EAAAA,EAAAA,IAAU,sBAAuB,SAAU,WAE/C+C,mBAAiB,QAGzBpN,EAAAA,EAAAA,KAACsM,EAAAA,EAAa,CAAA/G,UACVvF,EAAAA,EAAAA,KAACuM,EAAAA,EAAM,CAACf,QAASpG,EAAa2H,QAAQ,WAAUxH,SAAC,kB,uYChZrE,MAAM8H,EAA0BA,CAAC7J,EAAMoC,IAC5BpC,EAAKwD,IAAKd,IACb,MAAMoH,EAAe,CAAC,EA2BtB,OAzBA1H,EAAQ2H,QAAQ,CAACC,EAAQC,KACrB,GAAID,EAAO3H,WAAa2H,EAAOE,eAC3B,GAAIF,EAAOzH,cAAgByH,EAAOxH,KAAM,CACpC,MAAM2H,EAAcH,EAAOxH,KAAK,CAAEE,QAE5B0H,EAAmBJ,EAAO1H,aAC1B/E,OAAOyM,EAAO1H,cAAc6G,QAAQ,OAAQ,KAAKkB,cAAa,SAAAzK,OACrDqK,EAAQ,GAEI,kBAAhBE,GAAmD,kBAAhBA,GAAmD,kBAAhBA,IAC7EL,EAAaM,GAAoBD,EAOzC,KAAO,CAEH,IAAInN,EAAMgN,EAAOM,WACjBR,EAAa9M,GAAO0F,EAAI1F,IAAQ,EACpC,IAID8M,IA0CTjD,EAAY,WAOZ,IANF0D,EAAKtN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACR0L,EAAI1L,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SACPqF,EAAYrF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACfuN,EAAKvN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACRyL,EAAazL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAChBoF,EAASpF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEZ,OAAA0D,EAAAA,EAAAA,GAAA,CACI0B,UAAWA,EACXiI,WAAYC,EACZE,UAAW9B,EACX6B,QACA9B,iBACIpG,GAAgB,CAAEA,gBAE9B,EAEMK,EAAgBnF,IAAoD,IAAnD,YAAEoF,EAAc,GAAE,YAAE8H,EAAc,WAAWlN,EAChE,MAAOmN,EAAUC,IAAetM,EAAAA,EAAAA,UAAS,MAEnCuM,EAAcC,QAAQH,GAU5B,OACI9I,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIvF,EAAAA,EAAAA,KAACoL,EAAAA,EAAO,CAAC3F,MAAOyI,EAAY3I,UACxBvF,EAAAA,EAAAA,KAACqL,EAAAA,EAAU,CAAC,mBAAkBgD,EAAa7C,QAXlC+C,IACjBH,EAAYG,EAAMC,gBAUuDjD,UAAU,OAAOD,KAAK,QAAO/F,UAC1FvF,EAAAA,EAAAA,KAACyO,EAAAA,EAAQ,SAIjBzO,EAAAA,EAAAA,KAAC0O,EAAAA,GAAO,CACJ/C,KAAM0C,EACNF,SAAUA,EACVvC,QAfQ+C,KAChBP,EAAY,OAeJQ,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdvJ,UAEFvF,EAAAA,EAAAA,KAACgP,EAAAA,EAAQ,CAAAzJ,SACJa,EAAYY,IAAI,CAACiI,EAAKC,KACnB7J,EAAAA,EAAAA,MAAC8J,EAAAA,EAAQ,CAEL3D,QAASA,KAAS,OAAHyD,QAAG,IAAHA,OAAG,EAAHA,EAAKzI,WAAc,OAAHyI,QAAG,IAAHA,OAAG,EAAHA,EAAKzI,WACpC4I,SAAa,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,SAAS7J,SAAA,EAExBvF,EAAAA,EAAAA,KAACqP,EAAAA,EAAY,CAAA9J,SAAK,OAAH0J,QAAG,IAAHA,OAAG,EAAHA,EAAK3I,QACpBtG,EAAAA,EAAAA,KAACsP,EAAAA,EAAY,CAAA/J,SAAK,OAAH0J,QAAG,IAAHA,OAAG,EAAHA,EAAK5I,SALf6I,YAc3BK,EAAeA,CAACC,EAAKC,KACvB,OAAQA,GACJ,IAAK,SACD,OAAOD,GAAM9E,EAAAA,EAAAA,IAAa8E,GAAOA,EACrC,IAAK,OACD,OAAOA,GAAM9J,EAAAA,EAAAA,IAAU8J,GAAOA,EAClC,IAAK,OACD,OAAOA,GAAME,EAAAA,EAAAA,IAAUF,GAAOA,EAClC,IAAK,SACD,OAAOA,EACX,QACI,MAAO,KAIbhK,EAAkByB,IAmBjB,IAnBkB,UACrBtB,EAAY,GAAE,QACdC,EAAU,GAAE,WACZ+J,EAAa,KAAI,aACjBC,GAAe,EAAK,eACpBC,EAAiB,KAAI,eACrBC,EAAiB,IAAG,iBACpBC,EAAmB,GAAE,mBACrBC,GAAqB,EAAK,SAC1BC,EAAW,QAAmB,kBAC9B7C,GAAoB,EAAK,MACzB3H,EAAQ,GAAE,eACVyK,GAAiB,EAAK,iBACtBC,GAAmB,EAAK,gBACxBC,GAAkB,EAAK,WACvBjF,EAAa,KAAI,YACjBkF,EAAc,GAAE,eAChBC,EAAiB,GAAE,iBACnBC,EAAmB,IACtBtJ,EAEG,MAAOuJ,EAAMC,IAAW3O,EAAAA,EAAAA,UAAS,IAC1B4O,EAAaC,IAAkB7O,EAAAA,EAAAA,UAASiO,IACxCa,EAAcC,IAAmB/O,EAAAA,EAAAA,UAAS,KAC1CgP,EAAgBC,IAAqBjP,EAAAA,EAAAA,WAAS,GAC/CkP,EAAeF,GAAkBV,EAAmB,gBAAkBN,EAEtEmB,EAAc,CAChB,CACI9E,KAAM,OACN+E,MAAO,cACR,CACC/E,KAAM,QACN+E,MAAO,YACR,CACC/E,KAAM,SACN+E,MAAO,gBAITC,GAAsB,CACxB,CACIhF,KAAM,MACN+E,MAAO,UACR,CACC/E,KAAM,SACN+E,MAAO,aACR,CACC/E,KAAM,SACN+E,MAAO,WAkDTE,GAvBY5N,KACd,IAAKoN,EAAalQ,OAAQ,OAAO8C,EAmBjC,MAjBmB,IAAIA,GAAMmB,KAAK,CAACC,EAAGC,KAClC,IAAK,MAAMwM,KAAYT,EAAc,CACjC,MAAM,SAAEU,EAAQ,UAAEC,GAAcF,EAC1BG,EAAS5M,EAAE0M,GACXG,EAAS5M,EAAEyM,GAEjB,GAAIE,IAAWC,EACX,MAAkB,QAAdF,EACOC,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,CAG1C,CACA,OAAO,KAMIC,CAAS/L,GACtBgM,GAAanB,EAAOE,EACpBkB,GAAWD,GAAajB,EACxBmB,GAAgBT,GAAWU,MAAMH,GAAYC,IAE7CG,GAAU5J,IAAqB,IAApB,IAAEjC,EAAG,MAAEuH,GAAOtF,EAC3B,MAAOwD,EAAMqG,IAAWlQ,EAAAA,EAAAA,WAAS,GAC3BmQ,EAAW,OAEjB,OACI5M,EAAAA,EAAAA,MAAC6M,EAAAA,SAAQ,CAAA3M,SAAA,EACLF,EAAAA,EAAAA,MAAC8M,EAAAA,EAAQ,CAAA5M,SAAA,EAEc,IAAjBqK,GAAyBC,IACvB7P,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAAC7G,UAAU,8BAA8B8G,GAAI,CAAEJ,SAAS,GAAD7O,OAAKkN,EAAc,OAAO/K,UACvFvF,EAAAA,EAAAA,KAACqL,EAAAA,EAAU,CAACC,KAAK,QAAQE,QAASA,IAAMwG,EAAQ9N,IAAQA,GAAKqB,SACxDoG,GAAO3L,EAAAA,EAAAA,KAACsS,EAAAA,EAAe,CAACD,GAAI,CAAEJ,eAAiBjS,EAAAA,EAAAA,KAACuS,EAAAA,EAAiB,CAACF,GAAI,CAAEJ,mBAK7D,IAAvBjC,IACGhQ,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAAC7G,UAAU,8BAA8B8G,GAAI,CAAEJ,SAAS,GAAD7O,OAAKkN,EAAc,OAAO/K,SACrFmL,EAAcF,EAAQ/C,EAAQ,IAIhC,OAAP7H,QAAO,IAAPA,OAAO,EAAPA,EAASoB,IAAI,CAACwG,EAAQgF,KAAe,IAADC,EAAAC,EACjC,MAAMC,GAAkBC,EAAAA,EAAAA,IAAoB,OAANpF,QAAM,IAANA,OAAM,EAANA,EAAQE,eAAgB,KAAMkF,EAAAA,EAAAA,IAAoB,OAANpF,QAAM,IAANA,OAAM,EAANA,EAAQ3H,UAAW,GAC/FE,EAAeuI,QAAc,OAANd,QAAM,IAANA,OAAM,EAANA,EAAQzH,eAAiByH,EAAOxH,KACvD6M,GAAiB9M,EAEjB+M,EAAUA,CAAC5M,EAAK4H,EAAYiF,IACxB,OAANvF,QAAM,IAANA,GAAAA,EAAQsF,QAAO,IAAA1P,OAAa,OAANoK,QAAM,IAANA,OAAM,EAANA,EAAQsF,QAAQ,CAAE5M,MAAK4H,aAAYL,MAAOsF,IAAU,KAAM,GAG9EC,EAAuBxF,EAAOQ,MAC8C,QADzCyE,EACnCxB,EAAYpQ,KAAKmN,GAASA,EAAM7B,OAASpL,OAAOyM,EAAOQ,OAAOH,sBAAc,IAAA4E,OAAA,EAA5EA,EAA8EvB,MAC9E,GAEA+B,EAAqBzF,EAAOtB,cACgE,QADnDwG,EACzCvB,GAAoBtQ,KAAKmN,GAASA,EAAM7B,OAASpL,OAAOyM,EAAOtB,eAAe2B,sBAAc,IAAA6E,OAAA,EAA5FA,EAA8FxB,MAC9F,SAEN,GAAIyB,GAAmBE,EAAe,CAClC,MAAMK,EAAatM,OAAOE,QAAQZ,GAAKrF,KAAKyI,IAAA,IAAE9I,GAAI8I,EAAA,OAAK9I,IAAQgN,EAAOM,aAEtE,OACI9N,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAEN7G,UAAS,cAAAnI,OAAgB4P,EAAoB,KAAA5P,OAAI6P,EAAkB,KAAA7P,OAAI0P,EAAQ5M,EAAKsH,EAAOM,WAAYL,IACvG4E,GAAI,CAAEJ,SAAS,GAAD7O,OAAKkN,EAAc,OACjC9E,QAASA,IAAMmE,EAAaA,EAAWzJ,GAAOtC,QAAQuP,IAAI,yBAAyB5N,SAElF2N,EAAa3D,EAAa2D,EAAW,GAAU,OAAN1F,QAAM,IAANA,OAAM,EAANA,EAAQS,WAAa,KAL1DuE,EAQjB,CAEA,OAAIG,GAAmB5M,GAEf/F,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAEN7G,UAAS,cAAAnI,OAAgB4P,EAAoB,KAAA5P,OAAI6P,EAAkB,KAAA7P,OAAI0P,EAAQ5M,EAAKsH,EAAOM,WAAYL,IACvG4E,GAAI,CAAEJ,SAAS,GAAD7O,OAAKkN,EAAc,OAAO/K,SAEvCiI,EAAOxH,KAAK,CAAEE,MAAK4H,WAAYN,EAAOM,WAAYL,WAJ9C+E,IAUbxS,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAENC,GAAI,CAAEJ,SAAS,GAAD7O,OAAKkN,EAAc,OACjC/E,UAAS,cAAAnI,OAAgB4P,EAAoB,KAAA5P,OAAI6P,GAAqB1N,SACzE,KAHQiN,SAWF,IAAjB5C,GAAyBC,GAAkBlE,IACzC3L,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAAA5M,UACLvF,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAACgB,QAASC,OAAc,OAAPzN,QAAO,IAAPA,OAAO,EAAPA,EAASlF,UAAkC,IAAvBsP,EAA8B,EAAI,GAAGzK,SAAEsK,EAAe,CAAE3J,MAAKuH,kBAOhI,OACIpI,EAAAA,EAAAA,MAACiO,EAAAA,EAAI,CAAC/H,UAAU,qCAAqCgI,UAAWC,EAAAA,EAAMjO,SAAA,EAClEF,EAAAA,EAAAA,MAAA,OACIkG,UAAU,kEAAiEhG,SAAA,EAEzE2K,GAAkBC,GAAoBE,EAAY3P,OAAS,GAAK0P,KAC9DpQ,EAAAA,EAAAA,KAACmG,EAAa,CACV+H,YAAY,gBACZ9H,YAAa,IACLgK,EACE,CAAC,CACC/J,KAAM,aACNC,KAAMwK,GACA9Q,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CAACxB,SAAS,QAAQyB,MAAM,aACjC1T,EAAAA,EAAAA,KAAC2T,EAAAA,EAAS,CAAC1B,SAAS,UAC1BzL,QAASA,IAAMuK,EAAkB7M,IAAQA,GACzCkL,UAAUwD,EAAAA,EAAAA,IAAuB,OAATjN,QAAS,IAATA,OAAS,EAATA,EAAWjF,OAAQ,KAE7C,MACFwP,EACE,CAAC,CACC7J,KAAM,YACNC,MAAMtG,EAAAA,EAAAA,KAAC4T,EAAAA,EAAQ,CAAC3B,SAAS,QAAQyB,MAAM,YACvClN,QAASA,IAjVzBqN,EAAClO,EAAWC,KAC5B,IACI,MAAMkO,EAAM,IAAIC,EAAAA,QACVC,EAAgB3G,EAAwB1H,EAAWC,GAEnDvC,EAAUuC,EACXqO,OAAQzG,GAAWA,EAAO3H,WAAa2H,EAAOE,gBAC9C1G,IAAKwG,GAAWA,EAAOM,YAAc/M,OAAOyM,EAAO1H,cAAc6G,QAAQ,OAAQ,KAAKkB,eAErFqG,EAAOF,EAAchN,IAAKd,GAC5B7C,EAAQ2D,IAAKmN,GAAWjO,EAAIiO,KAC9BnN,IAAI,CAACiG,EAAGC,KAAC/I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW8I,GAAC,IAAEmH,IAAKlH,EAAI,KAElC4G,EAAIO,UAAU,CACVC,KAAM,CAACjR,GACPkR,KAAML,IAGVJ,EAAIU,KAAK,YACb,CAAE,MAAO7Q,GACLC,QAAQC,MAAMF,EAClB,GA4T+CkQ,CAAYlO,EAAWC,GACtCwJ,UAAUwD,EAAAA,EAAAA,IAAuB,OAATjN,QAAS,IAATA,OAAS,EAATA,EAAWjF,OAAQ,KAE7C,MACFyP,EACE,CAAC,CACC9J,KAAM,cACNC,MAAMtG,EAAAA,EAAAA,KAAC4T,EAAAA,EAAQ,CAAC3B,SAAS,QAAQyB,MAAM,YACvClN,QAASA,IAjUvBiO,EAAC9O,EAAWC,KAC9B,IACI,MAAMoO,EAAgB3G,EAAwB1H,EAAWC,GAEnD8O,EAAYC,EAAAA,GAAWC,cAAcZ,GACrCa,EAAWF,EAAAA,GAAWG,WAE5BH,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,QAClDC,EAAAA,GAAeE,EAAU,aAC7B,CAAE,MAAOlR,GACLC,QAAQC,MAAMF,EAClB,GAsT+C8Q,CAAc9O,EAAWC,GACxCwJ,UAAUwD,EAAAA,EAAAA,IAAuB,OAATjN,QAAS,IAATA,OAAS,EAATA,EAAWjF,OAAQ,KAE7C,MACH2P,KAIdlF,GAAcA,EACd1F,IAASzF,EAAAA,EAAAA,KAAA,MAAIuL,UAAU,qCAAoChG,SAAEE,QAGlEzF,EAAAA,EAAAA,KAACgV,EAAAA,EAAc,CAAC3C,GAAI,CAAE4C,UAAWjE,GAAczL,UAE3CF,EAAAA,EAAAA,MAAC6P,EAAAA,EAAK,CAACC,cAAY,EAAC7J,KAAM2E,EAAS1K,SAAA,EAE/BvF,EAAAA,EAAAA,KAACoV,EAAAA,EAAS,CAAA7P,UACNF,EAAAA,EAAAA,MAAC8M,EAAAA,EAAQ,CAAA5M,SAAA,CAEJqK,GAAgBC,IACb7P,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CACN7G,UAAU,4CACV8G,GAAI,CAAEJ,SAAS,GAAD7O,OAAKmN,EAAgB,MAAM8E,gBAAiB,WAAY9P,SACzE,MAMJyK,IACGhQ,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CACN7G,UAAU,4CACV8G,GAAI,CAAEJ,SAAS,GAAD7O,OAAKmN,EAAgB,MAAM8E,gBAAiB,WAAY9P,SACzE,QAMJK,EAAQoB,IAAI,CAACwG,EAAQ8H,KAClB,MAAM3C,GAAkBC,EAAAA,EAAAA,IAAoB,OAANpF,QAAM,IAANA,OAAM,EAANA,EAAQE,eAAgB,KAAMkF,EAAAA,EAAAA,IAAoB,OAANpF,QAAM,IAANA,OAAM,EAANA,EAAQ3H,UAAW,GAC/F0P,GAA+C,IAAlCjH,QAAc,OAANd,QAAM,IAANA,OAAM,EAANA,EAAQzH,gBAA4ByH,EAAOxH,KAChEwP,EAAoB5E,EAAa/P,KAAKwQ,GAAYA,EAASC,WAAa9D,EAAOM,YAC/E2H,EAAgBD,EAAoBA,EAAkBjE,UAAY,MAElD,IAADmE,EAAAC,EAAAC,EAAAC,EAArB,OAAIlD,EACO4C,GACHvV,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAEN7G,UAAW,kCACNiC,EAAOQ,MAAoF,QAA/E0H,EAAGzE,EAAYpQ,KAAKmN,GAASA,EAAM7B,OAASpL,OAAOyM,EAAOQ,OAAOH,sBAAc,IAAA6H,OAAA,EAA5EA,EAA8ExE,MAAQ,IAC1GmB,GAAI,CAAEJ,SAAS,GAAD7O,OAAKmN,EAAgB,MAAM8E,gBAAiB,WAC1DI,gBAAeD,GAAoBC,EAAsBlQ,UAEzDvF,EAAAA,EAAAA,KAAC8V,EAAAA,EAAc,CACXC,SAAUP,EACVjE,UAAWkE,EACXjK,QAASA,IA1N1B8F,KACvB,MAAM0E,EAAmBpF,EAAa/P,KAAKwQ,GAAYA,EAASC,WAAaA,GAC7E,GAAI0E,EAAkB,CAClB,MAAMC,EAAuC,QAA/BD,EAAiBzE,UAC/BV,EAAgBD,EAAa5J,IAAIqK,GAC7BA,EAASC,WAAaA,GAAQnN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBkN,GAAQ,IAAEE,UAAW0E,EAAQ,OAAS,QAC3C5E,GAEd,MACIR,EAAgB,IAAID,EAAc,CAAEU,WAAUC,UAAW,UAgNN2E,CAAkB1I,EAAOM,YAAYvI,SAEnDiI,EAAO1H,eAAsB,OAAN0H,QAAM,IAANA,GAAkB,QAAZmI,EAANnI,EAAQM,kBAAU,IAAA6H,OAAZ,EAANA,EAAoBhJ,QAAQ,KAAM,SAXzD2I,IAeTtV,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CAEN7G,UACI,GAAAnI,OAAIoK,EAAO1H,cAAsB,OAAN0H,QAAM,IAANA,GAAAA,EAAQM,WAC7B,8CACA,QAAO,MAEZN,EAAOQ,MAC0E,QADrE4H,EACP3E,EAAYpQ,KAAKmN,GAASA,EAAM7B,OAASpL,OAAOyM,EAAOQ,OAAOH,sBAAc,IAAA+H,OAAA,EAA5EA,EAA8E1E,MAC9E,IAEVmB,GAAI,CAAEJ,SAAS,GAAD7O,OAAKmN,EAAgB,MAAM8E,gBAAiB,WAAY9P,SAErEiI,EAAO1H,eAAsB,OAAN0H,QAAM,IAANA,GAAkB,QAAZqI,EAANrI,EAAQM,kBAAU,IAAA+H,OAAZ,EAANA,EAAoBlJ,QAAQ,KAAM,OAZrD2I,GAgBV,aAKnBjQ,EAAAA,EAAAA,MAAC8Q,EAAAA,EAAS,CAAA5Q,SAAA,EACJ6H,EAAoBgE,GAAaS,IAAe7K,IAAI,CAACd,EAAKuH,KACxDzN,EAAAA,EAAAA,KAAC+R,GAAO,CAAa7L,IAAKA,EAAKuH,MAAOA,GAAxBA,IAEI,IAArB9H,EAAUjF,SACPV,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAAA5M,UACLvF,EAAAA,EAAAA,KAACoS,EAAAA,EAAS,CACNgB,QACIxN,EAAQlF,SACW,IAAjBkP,GAAyBC,EAAkB,EAAI,KACzB,IAAvBG,EAA8B,EAAI,GAEvCqC,GAAI,CAAE+D,UAAW,UAAW7Q,SAC/B,uBAUnB6H,GAA8C,IAAzByE,GAAcnR,SACjCV,EAAAA,EAAAA,KAAA,OACIuL,UAAU,WAAUhG,UAEpBvF,EAAAA,EAAAA,KAACqW,EAAAA,EAAe,CACZ9C,UAAU,MACV+C,MAAO3Q,EAAUjF,OACjB8P,KAAMA,EACN+F,aA9RKC,CAACjI,EAAOkI,KAC7BhG,EAAQgG,IA8RQ/F,YAAaA,EACbgG,oBA5RanI,IAC7BoC,EAAegG,SAASpI,EAAMlC,OAAOzL,MAAO,KAC5C6P,EAAQ,IA2RQmG,mBAAoBC,MAAMC,KAAK,IAAIC,IAAI,CAAChH,EAAkB,EAAG,GAAI,GAAI,IAAK,IAAK,OAAOpL,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GACzGmS,iBAAiB,gBACjBC,iBAAe,EACfC,gBAAc,UAsCtC1R,EAAgB2R,aAAe,CAC3BxR,UAAW,GACXC,QAAS,GACT+J,WAAY,KACZC,cAAc,EACdC,eAAgB,KAChBC,eAAgB,IAChBC,iBAAkB,GAClBC,oBAAoB,EACpBC,SAAU,QACV7C,mBAAmB,EACnB3H,WAAO9E,EACPuP,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAiB,EACjBjF,WAAY,KACZkF,YAAa,GACbE,iBAAkB,GAClBD,eAAgB,IAGpB,S,6DC7mBA,SAAevQ,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kJACD,Y,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,sOACD,S","sources":["../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/ReadMore.js","Pages/Inventry/tallyStockJournal.jsx","Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h9v2h-9zm0 8h9v2h-9zm3-4h6v2h-6zm-3 1L8 7v4H2v2h6v4z\"\n}), 'ReadMore');","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { Addition, checkIsNumber, getSessionUser, ISOString, isValidDate, LocalDate, NumberFormat, trimText } from \"../../Components/functions\";\r\nimport FilterableTable, { createCol, ButtonActions } from '../../Components/filterableTable2'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport { FilterAlt, ReadMore, Search, Today, Visibility } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { initialStockJournalInfoValues, initialSoruceValue, initialDestinationValue, initialStaffInvolvedValue } from \"./stockJournalCreate\";\r\n\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst findObject = (arr = [], key, value) => arr.find(obj => String(obj[key]) === String(value)) ?? {};\r\n\r\nconst TallyStockJournalList = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const user = getSessionUser().user;\r\n    const [products, setProducts] = useState([]);\r\n    const [godown, setGodown] = useState([]);\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    // const [uom, setUOM] = useState([])\r\n    const [sJournalData, setSJournalData] = useState([]);\r\n    const [stockDetails, setStockDetails] = useState({\r\n        soruceDetails: [],\r\n        destinationDetails: [],\r\n        rowDetails: {},\r\n    });\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        refresh: false,\r\n        filterDialog: false,\r\n        showDetailsDialog: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `inventory/getTallyStockJournal?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n            headers: {\r\n                \"Db\": user?.Company_id\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSJournalData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    // uomResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    // fetchLink({ address: `masters/uom` }),\r\n                ]);\r\n\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                // const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                //     (a, b) => String(a.Units).localeCompare(b.Units)\r\n                // );\r\n\r\n                setProducts(productsData);\r\n                setGodown(godownLocations);\r\n                setVoucherType(voucherType);\r\n                // setUOM(uomData)\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({ ...pre, filterDialog: false, showDetailsDialog: false }));\r\n        setStockDetails({\r\n            soruceDetails: [],\r\n            destinationDetails: [],\r\n            rowDetails: {},\r\n        })\r\n    }\r\n\r\n    // const getDetails = (rowData) => {\r\n    //     if (!checkIsNumber(rowData?.tally_id)) return;\r\n\r\n    //     if (loadingOn) loadingOn();\r\n    //     fetchLink({\r\n    //         address: `inventory/getTallyStockJournal/sourceAndDestination?tally_id=${rowData?.tally_id}`,\r\n    //         headers: {\r\n    //             \"Db\": user?.Company_id\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             setStockDetails({\r\n    //                 rowDetails: { ...rowData, stock_journal_date: LocalDate(rowData.stock_journal_date) },\r\n    //                 soruceDetails: data.data[0].SourceDetails,\r\n    //                 destinationDetails: data.data[0].DestinationDetails\r\n    //             });\r\n    //             // setFilters(pre => ({ ...pre, showDetailsDialog: true }));\r\n    //         }\r\n    //     }).catch(e => console.error(e)).finally(() => {\r\n    //         if (loadingOff) loadingOff();\r\n    //     })\r\n    // }\r\n\r\n    const navToErpStockJournal = (row) => {\r\n        const GeneralInfo = Object.fromEntries(\r\n            Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                if (key === 'Stock_Journal_date') return [key, row['stock_journal_date'] ? ISOString(row['stock_journal_date']) : value]\r\n                if (key === 'Invoice_no') return [key, row['invoice_no'] ? row['invoice_no'] : value]\r\n                if (key === 'Stock_Journal_Bill_type') return [key, findObject(voucherType, 'Voucher_Type', row?.voucher_name)?.Type ?? value]\r\n                if (key === 'Stock_Journal_Voucher_type') return [key, row['voucher_name']]\r\n                if (key === 'Narration') return [key, (\r\n                    ' Broker: ' + (row['broker_name'] ?? ' - ') +\r\n                    '\\n Transporter: ' + (row['transporter_name'] ?? ' - ') +\r\n                    '\\n Loadman: ' + (row['loadman_name'] ?? ' - ') +\r\n                    '\\n Others1: ' + (row['othersone_name'] ?? ' - ') +\r\n                    '\\n Others2: ' + (row['otherstwo_name'] ?? ' - ') +\r\n                    '\\n Others3: ' + (row['othersthree_name'] ?? ' - ') +\r\n                    '\\n Others4: ' + (row['othersfour_name'] ?? ' - ') +\r\n                    '\\n Others5: ' + (row['othersfive_name'] ?? ' - ') +\r\n                    '\\n Others6: ' + (row['otherssix_name'] ?? ' - ') +\r\n                    '\\n\\n Narration: ' + (row['narration'] ?? ' - ')\r\n                )];\r\n                \r\n                return [key, value]\r\n            })\r\n        )\r\n\r\n        const DestinationDetails = row?.DestinationDetails?.map(destination => {\r\n            return Object.fromEntries(\r\n                Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                    const productData = findObject(products, 'ERP_Id', destination['destina_consumt_item_id']);\r\n                    const godownData = findObject(godown, 'Godown_Tally_Id', destination['destina_consumt_goodown_id']);\r\n\r\n                    if (key === 'Dest_Item_Id') return [key, productData.Product_Id ?? value]\r\n                    if (key === 'Dest_Item_Name') return ['Product_Name', productData.Product_Name ?? value]\r\n                    if (key === 'Dest_Goodown_Id') return [key, godownData.Godown_Id ?? value]\r\n                    if (key === 'Dest_Batch_Lot_No') return [key, destination['destina_batch_Lot_No'] ?? value]\r\n                    if (key === 'Dest_Qty') return [key, destination['destina_consumt_qty'] ?? value]\r\n                    if (key === 'Dest_Unit_Id') return [key, productData.UOM_Id ?? value]\r\n                    if (key === 'Dest_Unit') return [key, productData.Units ?? value]\r\n                    if (key === 'Dest_Rate') return [key, destination['destina_consumt_rate'] ?? value]\r\n                    if (key === 'Dest_Amt') return [key, destination['destina_consumt_amt'] ?? value]\r\n\r\n                    return [key, value]\r\n                })\r\n            )\r\n        });\r\n\r\n        const SourceDetails = row?.SourceDetails?.map(source => {\r\n            return Object.fromEntries(\r\n                Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                    const productData = findObject(products, 'ERP_Id', source['source_consumt_item_id']);\r\n                    const godownData = findObject(godown, 'Godown_Tally_Id', source['source_consumt_goodown_id']);\r\n\r\n                    if (key === 'Sour_Item_Id') return [key, productData.Product_Id ?? value]\r\n                    if (key === 'Sour_Item_Name') return ['Product_Name', productData.Product_Name ?? value]\r\n                    if (key === 'Sour_Goodown_Id') return [key, godownData.Godown_Id ?? value]\r\n                    if (key === 'Sour_Batch_Lot_No') return [key, source['source_batch_Lot_No'] ?? value]\r\n                    if (key === 'Sour_Qty') return [key, source['source_consumt_qty'] ?? value]\r\n                    if (key === 'Sour_Unit_Id') return [key, productData.UOM_Id ?? value]\r\n                    if (key === 'Sour_Unit') return [key, productData.Units ?? value]\r\n                    if (key === 'Sour_Rate') return [key, source['source_consumt_rate'] ?? value]\r\n                    if (key === 'Sour_Amt') return [key, source['source_consumt_amt'] ?? value]\r\n\r\n                    return [key, value]\r\n                })\r\n            )\r\n        });\r\n\r\n        // console.log({\r\n        //     ...GeneralInfo, SourceDetails, DestinationDetails, StaffsDetails: []\r\n        // })\r\n\r\n        navigate('/erp/inventory/stockJournal/create', {\r\n            state: {\r\n                ...GeneralInfo, SourceDetails, DestinationDetails, StaffsDetails: []\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title={\r\n                    \"Stock Journal (\"\r\n                    + (filters.fetchFrom ? ` From ${LocalDate(filters.fetchFrom)}` : '')\r\n                    + (filters.fetchTo ? ` To ${LocalDate(filters.fetchTo)}` : '') + ' )'\r\n                }\r\n                dataArray={sJournalData}\r\n                columns={[\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Convert',\r\n                                        icon: <ReadMore />,\r\n                                        onclick: () => navToErpStockJournal(row)\r\n                                    },\r\n                                    {\r\n                                        name: 'Open',\r\n                                        icon: <Visibility />,\r\n                                        onclick: () => {\r\n                                            setFilters(pre => ({ ...pre, showDetailsDialog: true }));\r\n                                            setStockDetails({\r\n                                                rowDetails: { ...row, stock_journal_date: row.stock_journal_date ? LocalDate(row.stock_journal_date) : '' },\r\n                                                soruceDetails: row.SourceDetails,\r\n                                                destinationDetails: row.DestinationDetails\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        )\r\n                    },\r\n                    createCol(\"stock_journal_date\", \"date\", 'Date'),\r\n                    createCol(\"voucher_name\", \"string\", 'Tally Type'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'ERP Type',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => findObject(voucherType, 'Voucher_Type', row?.voucher_name)?.Type\r\n                    },\r\n                    createCol(\"journal_no\", \"string\", 'Journal No'),\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Source',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => (\r\n                    //         <table className=\"table table-bordered m-0\">\r\n                    //             <tbody>\r\n                    //                 {row?.SourceDetails?.map((source, index) => (\r\n                    //                     <tr className=\"py-1\" key={index}>\r\n                    //                         {/* <td className=\"fa-12\">{index + 1}</td> */}\r\n                    //                         <td className=\"fa-12\">{trimText(source?.stock_item_name)}</td>\r\n                    //                         <td className=\"fa-12 text-primary\">{NumberFormat(source?.source_consumt_qty)}</td>\r\n                    //                     </tr>\r\n                    //                 ))}\r\n                    //             </tbody>\r\n                    //         </table>\r\n                    //     )\r\n                    // },\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Destination',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => (\r\n                    //         <table className=\"table table-bordered m-0\">\r\n                    //             <tbody>\r\n                    //                 {row?.DestinationDetails?.map((destinaiton, index) => (\r\n                    //                     <tr className=\"py-1\" key={index}>\r\n                    //                         {/* <td className=\"fa-12\">{index + 1}</td> */}\r\n                    //                         <td className=\"fa-12\">{trimText(destinaiton?.stock_item_name)}</td>\r\n                    //                         <td className=\"fa-12 text-primary\">{NumberFormat(destinaiton?.destina_consumt_qty)}</td>\r\n                    //                     </tr>\r\n                    //                 ))}\r\n                    //             </tbody>\r\n                    //         </table>\r\n                    //     )\r\n                    // },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Source',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => NumberFormat(row?.SourceDetails?.reduce((acc, source) => (\r\n                            Addition(acc, source?.source_consumt_qty)\r\n                        ), 0))\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Destination',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => NumberFormat(row?.DestinationDetails?.reduce((acc, destinaiton) => (\r\n                            Addition(acc, destinaiton?.destina_consumt_qty)\r\n                        ), 0))\r\n                    },\r\n                    createCol(\"broker_name\", 'string', \"Broker\"),\r\n                    createCol(\"transporter_name\", 'string', \"Transporter\"),\r\n                    createCol(\"loadman_name\", 'string', \"Loadman\"),\r\n                    createCol(\"othersone_name\", 'string', \"Others 1\"),\r\n                    createCol(\"otherstwo_name\", 'string', \"Others 2\"),\r\n                    createCol(\"othersthree_name\", 'string', \"Others 3\"),\r\n                    // createCol(\"othersfour_name\", 'string', \"Others 4\"),\r\n                    // createCol(\"othersfive_name\", 'string', \"Others 5\"),\r\n                    // createCol(\"otherssix_name\", 'string', \"Others 6\"),\r\n\r\n                ]}\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"ms-2\"\r\n                                onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.showDetailsDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>Details</DialogTitle>\r\n                <div className=\"d-flex p-2 flex-wrap\">\r\n                    {[\r\n                        { key: 'stock_journal_date', title: 'Date' },\r\n                        { key: 'broker_name', title: 'Broker' },\r\n                        { key: 'transporter_name', title: 'Transporter' },\r\n                        { key: 'loadman_name', title: 'Loadman' },\r\n                        { key: 'othersone_name', title: 'Others 1' },\r\n                        { key: 'otherstwo_name', title: 'Others 2' },\r\n                        { key: 'othersthree_name', title: 'Others 3' },\r\n                        { key: 'othersfour_name', title: 'Others 4' },\r\n                        { key: 'othersfive_name', title: 'Others 5' },\r\n                        { key: 'otherssix_name', title: 'Others 6' }\r\n                    ].map((o, i) => (\r\n                        <div key={i} className=\"d-flex justify-content-between p-2 border rounded-3 m-1\">\r\n                            <span className=\"px-2\">{o.title}</span>\r\n                            <span className=\"px-2\">{stockDetails.rowDetails[o.key] ?? '-'}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <DialogContent>\r\n                    <FilterableTable\r\n                        dataArray={stockDetails.soruceDetails}\r\n                        columns={[\r\n                            createCol(\"journal_no\", \"string\", \"Journal No\"),\r\n                            createCol(\"stock_item_name\", \"string\", \"Item Name\"),\r\n                            createCol(\"journal_date\", \"date\", \"Date\"),\r\n                            createCol(\"godown_name\", \"string\", \"Godown\"),\r\n                            createCol(\"source_batch_Lot_No\", \"string\", \"Batch/Lot No\"),\r\n                            createCol(\"source_consumt_qty\", \"number\", \"Quantity\"),\r\n                            createCol(\"source_consumt_rate\", \"number\", \"Rate\"),\r\n                            createCol(\"source_consumt_amt\", \"number\", \"Amount\"),\r\n                        ]}\r\n                        title=\"Source Details\"\r\n                        disablePagination\r\n                    />\r\n                    <br />\r\n                    <FilterableTable\r\n                        dataArray={stockDetails.destinationDetails}\r\n                        title=\"Destination Details\"\r\n                        columns={[\r\n                            createCol(\"journal_no\", \"string\", \"Journal No\"),\r\n                            createCol(\"stock_item_name\", \"string\", \"Item Name\"),\r\n                            createCol(\"godown_name\", \"string\", \"Godown\"),\r\n                            createCol(\"journal_date\", \"date\", \"Date\"),\r\n                            createCol(\"destina_batch_Lot_No\", \"string\", \"Batch/Lot No\"),\r\n                            createCol(\"destina_consumt_qty\", \"number\", \"Quantity\"),\r\n                            createCol(\"destina_consumt_rate\", \"number\", \"Rate\"),\r\n                            createCol(\"destina_consumt_amt\", \"number\", \"Amount\"),\r\n                        ]}\r\n                        disablePagination\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} variant=\"outlined\">close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TallyStockJournalList;","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["createSvgIcon","_jsx","d","defaultFilters","Fromdate","ISOString","Todate","findObject","_arr$find","key","arguments","length","undefined","value","find","obj","String","_ref","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","user","getSessionUser","products","setProducts","useState","godown","setGodown","voucherType","setVoucherType","sJournalData","setSJournalData","stockDetails","setStockDetails","soruceDetails","destinationDetails","rowDetails","filters","setFilters","fetchFrom","fetchTo","refresh","filterDialog","showDetailsDialog","useEffect","fetchLink","address","concat","headers","Company_id","then","data","success","catch","e","console","error","finally","queryFilters","get","isValidDate","pre","_objectSpread","async","productsResponse","godownLocationsResponse","voucherTypeResponse","Promise","all","productsData","sort","a","b","Product_Name","localeCompare","godownLocations","Godown_Name","Voucher_Type","fetchData","closeDialog","_jsxs","_Fragment","children","FilterableTable","title","LocalDate","dataArray","columns","isVisible","ColumnHeader","isCustomCell","Cell","_ref5","row","ButtonActions","buttonsData","name","icon","ReadMore","onclick","_row$DestinationDetai","_row$SourceDetails","GeneralInfo","Object","fromEntries","entries","initialStockJournalInfoValues","map","_ref2","_findObject$Type","_findObject","_row$broker_name","_row$transporter_name","_row$loadman_name","_row$othersone_name","_row$otherstwo_name","_row$othersthree_name","_row$othersfour_name","_row$othersfive_name","_row$otherssix_name","_row$narration","voucher_name","Type","DestinationDetails","destination","initialDestinationValue","_ref3","_productData$Product_","_productData$Product_2","_godownData$Godown_Id","_destination$destina_","_destination$destina_2","_productData$UOM_Id","_productData$Units","_destination$destina_3","_destination$destina_4","productData","godownData","Product_Id","Godown_Id","UOM_Id","Units","SourceDetails","source","initialSoruceValue","_ref4","_productData$Product_3","_productData$Product_4","_godownData$Godown_Id2","_source$source_batch_","_source$source_consum","_productData$UOM_Id2","_productData$Units2","_source$source_consum2","_source$source_consum3","state","StaffsDetails","navToErpStockJournal","Visibility","stock_journal_date","createCol","_ref6","_findObject2","_ref7","_row$SourceDetails2","NumberFormat","reduce","acc","Addition","source_consumt_qty","_ref8","_row$DestinationDetai2","destinaiton","destina_consumt_qty","ButtonArea","Tooltip","IconButton","size","className","onClick","FilterAlt","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","style","verticalAlign","type","onChange","target","DialogActions","Button","newFilters","params","toString","replace","updateQueryString","startIcon","Search","variant","fullScreen","o","i","_stockDetails$rowDeta","disablePagination","preprocessDataForExport","flattenedRow","forEach","column","index","Defult_Display","cellContent","safeColumnHeader","toLowerCase","Field_Name","field","align","Fied_Data","ToolTipText","anchorEl","setAnchorEl","popOverOpen","Boolean","event","currentTarget","MoreVert","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","disabled","ListItemIcon","ListItemText","formatString","val","dataType","LocalTime","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","PDFPrintOption","ExcelPrintOption","maxHeightOption","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","setOpen","fontSize","Fragment","TableRow","TableCell","sx","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","verticalAlignClass","foundEntry","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","filter","rows","header","Sno","autoTable","head","body","save","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps"],"sourceRoot":""}