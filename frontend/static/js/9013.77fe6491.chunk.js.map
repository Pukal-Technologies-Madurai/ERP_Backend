{"version":3,"file":"static/js/9013.77fe6491.chunk.js","mappings":"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","sources":["Pages/Dashboard/erp/SOA.jsx","Pages/Attendance/attendanceComp.jsx","Pages/Dashboard/managementDashboard.jsx","Pages/Dashboard/staffInvolvedCostCenter.jsx","Pages/Dashboard/commonDashboard.jsx","Pages/Dashboard/chartComp.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LaunchOutlined } from '@mui/icons-material'\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button } from \"@mui/material\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { utils as XLSXUtils, writeFile as writeXLSX } from 'xlsx';\r\nimport logo from '../ic_launcher.png';\r\nimport { fetchLink } from '../../../Components/fetchComponent'\r\n\r\n\r\nconst SOAComp = () => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [isCustomer, setIsCustomer] = useState(false)\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const UserId = parseData?.UserId;\r\n    // const token = parseData?.Autheticate_Id;\r\n    const [total, setTotal] = useState(0)\r\n    const [dialog, setDialog] = useState(false)\r\n    const [SOA, setSOA] = useState([])\r\n    const [clickedRow, setClickedRow] = useState({})\r\n    const today = new Date();\r\n    const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 2);\r\n\r\n    const [selectedRange, setSelectedRange] = useState({\r\n        from: firstDayOfMonth.toISOString().split('T')[0],\r\n        to: new Date().toISOString().split('T')[0],\r\n    });\r\n\r\n    const imageSource = logo\r\n    const [closingBalance, setClosingBalance] = useState({ debit: 0, credit: 0 });\r\n    const printRef = useRef()\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `userModule/customer/getBalance?UserId=${UserId}`\r\n        }).then(data => {\r\n            if (data.status === 'Success') {\r\n                setDataArray(data.data)\r\n                let temp = 0;\r\n                data.data?.forEach(obj => {\r\n                    temp += Number(obj.Bal_Amount)\r\n                })\r\n                setTotal(temp)\r\n            }\r\n            if (data?.isCustomer) {\r\n                setIsCustomer(true)\r\n            } else {\r\n                setIsCustomer(false)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const getInfo = (prop, mode) => {\r\n        let rowData;\r\n        if (mode && mode === 1) {\r\n            rowData = clickedRow;\r\n        } else {\r\n            rowData = prop\r\n        }\r\n        setClickedRow(rowData)\r\n        setDialog(true);\r\n        fetchLink({\r\n            address: `userModule/customer/StatementOfAccound?Cust_Id=${rowData?.Cust_Id}&Acc_Id=${rowData?.tally_id}&Company_Id=${rowData?.Company_Id}&Fromdate=${selectedRange?.from}&Todate=${selectedRange?.to}`\r\n        }).then(data => {\r\n            setSOA(data.data)\r\n            let bal = { debit: 0, credit: 0 }\r\n            data?.data?.forEach(obj => {\r\n                bal.debit += Number(obj.Debit_Amt)\r\n                bal.credit += Number(obj.Credit_Amt)\r\n            })\r\n            setClosingBalance(bal)\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialog(false);\r\n        setSOA([]);\r\n        setClickedRow({});\r\n        setSelectedRange({\r\n            from: firstDayOfMonth.toISOString().split('T')[0],\r\n            to: new Date().toISOString().split('T')[0],\r\n        })\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    const generateExcel = (data) => {\r\n        const worksheet = XLSXUtils.json_to_sheet(data);\r\n        const workbook = XLSXUtils.book_new();\r\n        XLSXUtils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n        writeXLSX(workbook, `erpsmt_SOA_${new Date().toLocaleDateString('en-IN', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            second: '2-digit'\r\n        })}.xlsx`);\r\n    }\r\n\r\n    return isCustomer ? (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header py-3 bg-white\" >\r\n                    <p className=\"mb-0 fw-bold\" >\r\n                        <span>Balance of {parseData?.Name}</span>\r\n                        <span className={total > 0 ? 'text-primary' : 'text-danger'}> &nbsp;( {total.toLocaleString('en-IN') + (total < 0 ? ' CR' : ' DR')} )</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-body p-0 table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ fontSize: '13px' }}>S.No</th>\r\n                                <th style={{ fontSize: '13px' }}> - </th>\r\n                                <th style={{ fontSize: '13px' }}>Company</th>\r\n                                <th style={{ fontSize: '13px' }}>Ledger</th>\r\n                                <th style={{ fontSize: '13px' }}>Balance</th>\r\n                                <th style={{ fontSize: '13px' }}>Dr/Cr</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dataArray.map((o, i) => (\r\n                                <tr key={i}>\r\n                                    <td style={{ fontSize: '13px' }}>{i + 1}</td>\r\n                                    <td style={{ fontSize: '13px' }}>\r\n                                        <button\r\n                                            className=\"icon-btn\"\r\n                                            onClick={() => { getInfo(o) }}>\r\n                                            <LaunchOutlined sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.Company_Name}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.ledger_name}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.Bal_Amount?.toLocaleString('en-IN')}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.CR_DR}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={handleClose}\r\n                fullScreen\r\n                fullWidth>\r\n                <DialogTitle className=\"border-bottom text-primary d-flex align-items-center fa-18\">\r\n                    <span className=\"flex-grow-1\">Transaction Report of {clickedRow?.Customer_name}</span>\r\n                    <Button\r\n                        className=\"fw-bold\"\r\n                        onClick={handlePrint} >\r\n                        PDF\r\n                    </Button>\r\n                    <Button\r\n                        className=\"ms-1 fw-bold\"\r\n                        onClick={() => {\r\n                            const transformedData = SOA.map((o, i) => ({\r\n                                Sno: i + 1,\r\n                                Date: new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                    day: '2-digit',\r\n                                    month: '2-digit',\r\n                                    year: 'numeric',\r\n                                }),\r\n                                Purticular: o?.Ledger_Desc,\r\n                                InvoiceNo: o?.invoice_no,\r\n                                Debit: Boolean(Number(o.Debit_Amt)) ? o.Debit_Amt.toLocaleString('en-IN') : '',\r\n                                Credit: Boolean(Number(o.Credit_Amt)) ? o.Credit_Amt.toLocaleString('en-IN') : '',\r\n                                Company: o?.Company_Name,\r\n                                Ledger: o?.Ledger_Name,\r\n                                Mobile_Number: o?.Mobile_no\r\n                            }));\r\n                            generateExcel(transformedData);\r\n                        }}\r\n                    >\r\n                        excel\r\n                    </Button>\r\n                </DialogTitle>\r\n                <DialogContent className=\"rounded-2 shadow m-4 mb-2 p-0\" >\r\n                    <div className=\"row align-content-center\">\r\n                        <div className=\"col-lg-1\">\r\n                            <img src={imageSource} alt=\"Company Logo\" className=\"smtlogo\" />\r\n                        </div>\r\n                        <div className=\"col-lg-4 p-2 ps-3\">\r\n                            <table className=\"table border-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Company</td>\r\n                                        <td className=\"border-0\">{clickedRow?.Company_Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Ledger Name</td>\r\n                                        <td className=\"border-0\">{clickedRow?.ledger_name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Contact Person</td>\r\n                                        <td className=\"border-0\">{SOA[0]?.Contact_Person}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Mobile</td>\r\n                                        <td className=\"border-0\">{SOA[0]?.Mobile_no}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                        <div className=\"col-lg-4 p-2\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Opening Balnce</td>\r\n                                        <td className=\"border-0 text-primary\">{\r\n                                            SOA[0]?.Debit_Amt > 0\r\n                                                ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\r\n                                                : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\r\n                                        }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Closing Balance</td>\r\n                                        <td className=\"border-0 text-primary\">{\r\n                                            (closingBalance?.debit - closingBalance?.credit) < 0\r\n                                                ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\r\n                                                : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\r\n                                        }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-3 p-2\">\r\n                            <table className=\"table border-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">From :</td>\r\n                                        <td className=\"p-0 border-0\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control w-auto ms-2\"\r\n                                                onChange={(e) => setSelectedRange({ ...selectedRange, from: e.target.value })}\r\n                                                value={selectedRange.from} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">To :</td>\r\n                                        <td className=\"p-0 border-0\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control w-auto ms-2\"\r\n                                                onChange={(e) => {\r\n                                                    if (selectedRange.from && selectedRange.from <= e.target.value) {\r\n                                                        setSelectedRange({ ...selectedRange, to: e.target.value });\r\n                                                    } else {\r\n                                                        window.alert('Invald Date Range')\r\n                                                    }\r\n                                                }}\r\n                                                value={selectedRange.to}\r\n                                                disabled={!selectedRange.from} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\"></td>\r\n                                        <td className=\"border-0\">\r\n                                            <button\r\n                                                className=\"btn text-white\"\r\n                                                style={{ backgroundColor: 'rgb(66, 34, 225)' }}\r\n                                                onClick={() => { getInfo('', 1) }}>Search</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2 table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-13 tble-hed-stick\">-</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Date</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Particulars</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Dr</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Cr</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {SOA.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-13 bg-light\">{i + 1}</td>\r\n                                        <td className=\"fa-13 bg-light\">\r\n                                            {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                                day: '2-digit',\r\n                                                month: '2-digit',\r\n                                                year: 'numeric',\r\n                                            })}\r\n                                        </td>\r\n                                        <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\r\n                                        <td className=\"fa-13\">{o.invoice_no}</td>\r\n                                        <td className=\"fa-13\">{o.Debit_Amt.toLocaleString('en-IN')}</td>\r\n                                        <td className=\"fa-13 bg-light\">{o.Credit_Amt.toLocaleString('en-IN')}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/* printable div */}\r\n                    <div className=\"d-none\">\r\n                        <div className=\"d-block px-5 py-2\" ref={printRef}>\r\n                            <img src={imageSource} alt=\"smtlogo\" className=\"smtlogo\" />\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Company</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.Company_Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Ledger Name</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.ledger_name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Contact Person</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Contact_Person}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Mobile</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Mobile_no}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">From</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.from}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">To</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.to}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Opening Balance</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">\r\n                                            {\r\n                                                SOA[0]?.Debit_Amt > 0\r\n                                                    ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\r\n                                                    : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Closing Balance</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">\r\n                                            {\r\n                                                (closingBalance?.debit - closingBalance?.credit) < 0\r\n                                                    ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\r\n                                                    : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"p-2 table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"fa-13 tble-hed-stick\">-</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Date</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Particulars</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Dr</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Cr</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {SOA.map((o, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-13 bg-light\">{i + 1}</td>\r\n                                                <td className=\"fa-13 bg-light\">\r\n                                                    {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                                        day: '2-digit',\r\n                                                        month: '2-digit',\r\n                                                        year: 'numeric',\r\n                                                    })}\r\n                                                </td>\r\n                                                <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\r\n                                                <td className=\"fa-13\">{o.invoice_no}</td>\r\n                                                <td className=\"fa-13\">{Boolean(Number(o.Debit_Amt)) && o.Debit_Amt.toLocaleString('en-IN')}</td>\r\n                                                <td className=\"fa-13 bg-light\">{Boolean(Number(o.Credit_Amt)) && o.Credit_Amt.toLocaleString('en-IN')}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant='contained' color='error'>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    ) : <></>\r\n}\r\n\r\nexport default SOAComp;","import { Button, Card, CardContent, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { LocalDate, LocalTime } from \"../../Components/functions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\n\r\nconst AttendanceComp = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const initialValue = {\r\n        Latitude: null,\r\n        Longitude: null,\r\n        error: null,\r\n        UserId: storage.UserId,\r\n        Description: '',\r\n        dialog: false\r\n    }\r\n    const [lastAttendance, setLastAttendance] = useState({});\r\n    const [reload, setReload] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n    useEffect(() => {\r\n        setLastAttendance({})\r\n        fetchLink({\r\n            address: `empAttendance/attendance?UserId=${storage?.UserId}`,\r\n        }).then(data => {\r\n            if (data?.success && data?.data?.length > 0) {\r\n                setLastAttendance(data?.data[0])\r\n            }\r\n        }).catch(e => console.error(e))            \r\n    }, [storage?.UserId, reload])\r\n\r\n    const getLocation = async () => {\r\n\r\n        try {\r\n\r\n            const position = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(resolve, reject);\r\n            });\r\n\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            setInputValue(pre => ({\r\n                ...pre,\r\n                Latitude: latitude,\r\n                Longitude: longitude,\r\n                error: null\r\n            }));\r\n\r\n            return true;\r\n\r\n        } catch (error) {\r\n            if (error.code === error.PERMISSION_DENIED) {\r\n                setInputValue(pre => ({\r\n                    ...pre,\r\n                    Latitude: null,\r\n                    Longitude: null,\r\n                    error: 'Location access denied'\r\n                }));\r\n\r\n                toast.warn('Allow Location Access');\r\n            } else {\r\n                setInputValue(pre => ({\r\n                    ...pre,\r\n                    Latitude: null,\r\n                    Longitude: null,\r\n                    error: error.message\r\n                }));\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const StartDay = () => {\r\n        getLocation().then(hasLocationAccess => {\r\n            if (hasLocationAccess) {\r\n                if (inputValue?.Latitude && inputValue?.Longitude) {\r\n                    fetchLink({\r\n                        address: `empAttendance/attendance`,\r\n                        method: 'POST',\r\n                        bodyData: {\r\n                            UserId: inputValue?.UserId,\r\n                            Latitude: inputValue?.Latitude,\r\n                            Longitude: inputValue?.Longitude\r\n                        }\r\n                    }).then(data => {\r\n                        setReload(!reload)\r\n                        if (data.success) {\r\n                            toast.success(data.message)\r\n                        } else {\r\n                            toast.error(data.message)\r\n                        }\r\n                    })\r\n                } else {\r\n                    toast.warn('Please Retry')\r\n                }\r\n            } else {\r\n                toast.error('There is a problem in get location')\r\n            }\r\n        });\r\n    };\r\n\r\n    const EndDay = () => {\r\n        fetchLink({\r\n            address: `empAttendance/attendance`,\r\n            method: 'PUT',\r\n            bodyData: {\r\n                Id: lastAttendance?.Id,\r\n                Description: inputValue?.Description\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReload(!reload)\r\n                toast.success(data.message);\r\n                resetValues()\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"col-xl-4    col-lg-6 col-md-6\">\r\n                <div className=\"d-flex justify-content-between align-items-center p-3 border-bottom\">\r\n                    <h5 className=\"mb-0\">Attendance</h5>\r\n                    <Button\r\n                        variant='outlined'\r\n                        onClick={StartDay}\r\n                        disabled={Boolean(lastAttendance?.Active_Status)}\r\n                    >\r\n                        START Day\r\n                    </Button>\r\n                </div>\r\n                {Boolean(lastAttendance?.Active_Status) && (\r\n                    <>\r\n                        <CardContent >\r\n                            <div className=\"fw-bold text-muted\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <span>Start Date</span><br />\r\n                                    <span>{lastAttendance?.Start_Date ? LocalDate(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <span>In Time</span>\r\n                                    <span>{lastAttendance?.Start_Date ? LocalTime(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                        <div className=\"border-top p-3 d-flex justify-content-end\">\r\n                            <Button variant='outlined' onClick={() => setInputValue(pre => ({ ...pre, dialog: true }))}>End Day</Button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={inputValue?.dialog}\r\n                onClose={resetValues}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle>Cloase Attendance</DialogTitle>\r\n                <DialogContent>\r\n                    <label className=\"mb-3\">Work Summary</label>\r\n                    <textarea \r\n                        value={inputValue?.Description}\r\n                        className=\"cus-inpt\"\r\n                        rows={5}\r\n                        onChange={e => setInputValue(pre => ({ ...pre, Description: e.target.value}))}\r\n                        placeholder=\"Narrate the today's work summary\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={resetValues}>Cancel</Button>\r\n                    <Button variant='outlined' onClick={EndDay}>Confirm</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AttendanceComp;","import { useEffect, useState } from \"react\"\r\nimport { Addition, ISOString, NumberFormat, stringCompare, toArray, toNumber } from \"../../Components/functions\";\r\nimport {\r\n    Assignment, AssignmentTurnedIn, AttachMoney, CompareArrows,\r\n    Inventory2, MenuBook, Paid, ReceiptLong, RequestQuote,\r\n    Sync\r\n} from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { PiHandCoinsFill } from \"react-icons/pi\";\r\nimport { FaCubesStacked } from \"react-icons/fa6\";\r\n\r\nconst getIcons = (str) => {\r\n    const iconArr = [\r\n        {\r\n            str: 'SALE ORDER',\r\n            actualName: 'SaleOrder',\r\n            icon: <Assignment style={{ fontSize: '80px' }} />,\r\n            orderBy: 1\r\n        },\r\n        {\r\n            str: 'SALES INVOICE',\r\n            actualName: 'SalesInvoice',\r\n            icon: <ReceiptLong style={{ fontSize: '80px' }} />,\r\n            orderBy: 2\r\n        },\r\n        {\r\n            str: 'PURCHASE ORDER',\r\n            actualName: 'PurchaseOrder',\r\n            icon: <AssignmentTurnedIn style={{ fontSize: '80px' }} />,\r\n            orderBy: 3\r\n        },\r\n        {\r\n            str: 'PURCHASE INVOICE',\r\n            actualName: 'PurchaseInvoice',\r\n            icon: <RequestQuote style={{ fontSize: '80px' }} />,\r\n            orderBy: 4\r\n        },\r\n        {\r\n            str: 'PAYMENT',\r\n            actualName: 'Payment',\r\n            icon: <Paid style={{ fontSize: '80px' }} />,\r\n            orderBy: 5\r\n        },\r\n        {\r\n            str: 'RECEIPT',\r\n            actualName: 'Receipt',\r\n            icon: <AttachMoney style={{ fontSize: '80px' }} />,\r\n            orderBy: 6\r\n        },\r\n        {\r\n            str: 'JOURNAL',\r\n            actualName: 'Journal',\r\n            icon: <MenuBook style={{ fontSize: '80px' }} />,\r\n            orderBy: 7\r\n        },\r\n        {\r\n            str: 'STOCK JOURNAL',\r\n            actualName: 'StockJournal',\r\n            icon: <Inventory2 style={{ fontSize: '80px' }} />,\r\n            orderBy: 8\r\n        },\r\n        {\r\n            str: 'CONTRA',\r\n            actualName: 'Contra',\r\n            icon: <CompareArrows style={{ fontSize: '80px' }} />,\r\n            orderBy: 9\r\n        },\r\n    ]\r\n\r\n    return iconArr.find(o => str === o.actualName) || {}\r\n}\r\n\r\nconst moduleIcons = [\r\n    { actualName: 'STOCKVALUE', str: 'STOCKVALUE', icon: <FaCubesStacked style={{ fontSize: '80px' }} />, orderBy: 1 },\r\n    { actualName: 'SaleOrder', str: 'SALE ORDER', icon: <Assignment style={{ fontSize: '80px' }} />, orderBy: 2 },\r\n    { actualName: 'SalesInvoice', str: 'SALES INVOICE', icon: <ReceiptLong style={{ fontSize: '80px' }} />, orderBy: 3 },\r\n    { actualName: 'PurchaseOrder', str: 'PURCHASE ORDER', icon: <AssignmentTurnedIn style={{ fontSize: '80px' }} />, orderBy: 4 },\r\n    { actualName: 'PurchaseInvoice', str: 'PURCHASE INVOICE', icon: <RequestQuote style={{ fontSize: '80px' }} />, orderBy: 5 },\r\n    { actualName: 'EXPENCES', str: 'EXPENCES', icon: <PiHandCoinsFill style={{ fontSize: '80px' }} />, orderBy: 6 },\r\n    { actualName: 'Payment', str: 'PAYMENT', icon: <Paid style={{ fontSize: '80px' }} />, orderBy: 7 },\r\n    { actualName: 'Receipt', str: 'RECEIPT', icon: <AttachMoney style={{ fontSize: '80px' }} />, orderBy: 8 },\r\n    { actualName: 'Journal', str: 'JOURNAL', icon: <MenuBook style={{ fontSize: '80px' }} />, orderBy: 9 },\r\n    { actualName: 'StockJournal', str: 'STOCK JOURNAL', icon: <Inventory2 style={{ fontSize: '80px' }} />, orderBy: 10 },\r\n    { actualName: 'Contra', str: 'CONTRA', icon: <CompareArrows style={{ fontSize: '80px' }} />, orderBy: 11 },\r\n];\r\n\r\n\r\nconst ManagementDashboard = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const UserAccess = Number(storage?.UserTypeId) === 2 || Number(storage?.UserTypeId) === 0 || Number(storage?.UserTypeId) === 1;\r\n    const [dayBookData, setDayBookData] = useState([]);\r\n    const [otherData, setOtherData] = useState({\r\n        EXPENCES: 0,\r\n        STOCKVALUE: 0\r\n    })\r\n\r\n    const cls = 'vctr text-white bg-transparent p-0';\r\n\r\n    const [filter, setFilter] = useState({\r\n        date: ISOString(),\r\n        reload: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (UserAccess && storage.Company_id) {\r\n            setDayBookData([]);\r\n\r\n            fetchLink({\r\n                address: `dashboard/dayBook?Fromdate=${filter.date}&Todate=${filter.date}`,\r\n                headers: {\r\n                    \"Db\": storage.Company_id\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setDayBookData(data.data);\r\n                }\r\n            }).catch(e => console.error(e));\r\n        }\r\n    }, [filter.reload])\r\n\r\n    useEffect(() => {\r\n        if (UserAccess && storage.Company_id) {\r\n            fetchLink({\r\n                address: `dashboard/erp/dashboardData?Fromdate=${filter?.date}&Company_Id=${storage.Company_id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    const EXPENCES = toNumber(data?.data[1][0]?.Total_Cost_Vlaue);\r\n                    const STOCKVALUE = toNumber(data?.data[2][0]?.Stock_Value);\r\n                    setOtherData(pre => ({ ...pre, EXPENCES, STOCKVALUE }))\r\n                } else {\r\n                    setOtherData(pre => ({ ...pre, EXPENCES: 0, STOCKVALUE: 0 }))\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [UserAccess, filter.date]);\r\n\r\n    return UserAccess && (\r\n        <>\r\n            <div className=\"d-flex align-items-center flex-wrap \">\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"cus-inpt w-auto m-1\"\r\n                    value={filter.date}\r\n                    onChange={e => setFilter(pre => ({ ...pre, date: e.target.value }))}\r\n                />\r\n                <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => setFilter(pre => ({ ...pre, reload: !pre.reload }))}\r\n                ><Sync /></IconButton>\r\n            </div>\r\n\r\n            <div className=\"p-1 row\">\r\n                {moduleIcons.map((iconData, i) => {\r\n                    const o = (\r\n                        stringCompare(iconData.actualName, 'EXPENCES')\r\n                        || stringCompare(iconData.actualName, 'STOCKVALUE')\r\n                    ) ? {\r\n                        ModuleName: iconData.actualName,\r\n                        groupedData: [\r\n                            {\r\n                                VoucherBreakUpCount: 0,\r\n                                Voucher_Type: \"\",\r\n                                ModuleName: iconData.actualName,\r\n                                Amount: otherData[iconData.str],\r\n                                navLink: \"\",\r\n                                dataSource: \"TALLY\"\r\n                            }\r\n                        ]\r\n                    } : dayBookData.find(entry => entry.ModuleName === iconData.actualName) || {\r\n                        ModuleName: iconData.actualName,\r\n                        groupedData: []\r\n                    };\r\n\r\n                    const grouped = toArray(o.groupedData);\r\n                    const erpData = grouped.filter(mod => stringCompare(mod.dataSource, 'ERP'));\r\n                    const tallyData = grouped.filter(mod => stringCompare(mod.dataSource, 'TALLY'));\r\n\r\n                    const erpTotal = erpData.reduce((acc, item) => Addition(acc, item?.Amount || 0), 0);\r\n                    const erpCount = erpData.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount || 0), 0);\r\n                    const tallyTotal = tallyData.reduce((acc, item) => Addition(acc, item?.Amount || 0), 0);\r\n                    const tallyCount = tallyData.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount || 0), 0);\r\n\r\n                    return (\r\n                        <div className=\"col-xxl-3 col-lg-4 col-md-6 col-sm-12 p-2\" key={iconData.actualName}>\r\n                            <div className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + (i + 7)}>\r\n                                <div className=\"flex-grow-1 p-3 table-responsive\">\r\n                                    <h5 style={{ fontSize: '18px' }}>{iconData.str}</h5>\r\n                                    <table className=\"table table-borderless text-white\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className={`${cls} fa-13`}>ERP</td>\r\n                                                <td className={`${cls} text-end`}>\r\n                                                    <span className=\"fa-19 me-1\">{NumberFormat(parseInt(erpTotal))}</span>\r\n                                                    <span className=\"fa-11\">/ {NumberFormat(parseInt(erpCount))}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className={`${cls} fa-13`}>TALLY</td>\r\n                                                <td className={`${cls} text-end`}>\r\n                                                    <span className=\"fa-19 me-1\">{NumberFormat(parseInt(tallyTotal))}</span>\r\n                                                    <span className=\"fa-11\">/ {NumberFormat(parseInt(tallyCount))}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {iconData.icon}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n\r\n                {/* {dayBookData?.map((o, i) => {\r\n                    const erpTotal = toArray(o?.groupedData).filter(\r\n                        mod => stringCompare(mod.dataSource, 'ERP')\r\n                    ).reduce(\r\n                        (acc, item) => Addition(acc, item?.Amount), 0\r\n                    );\r\n                    const erpCount = toArray(o?.groupedData).filter(\r\n                        mod => stringCompare(mod.dataSource, 'ERP')\r\n                    ).reduce(\r\n                        (acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0\r\n                    );\r\n                    const tallyTotal = toArray(o?.groupedData).filter(\r\n                        mod => stringCompare(mod.dataSource, 'TALLY')\r\n                    ).reduce(\r\n                        (acc, item) => Addition(acc, item?.Amount), 0\r\n                    );\r\n                    const tallyCount = toArray(o?.groupedData).filter(\r\n                        mod => stringCompare(mod.dataSource, 'TALLY')\r\n                    ).reduce(\r\n                        (acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0\r\n                    );\r\n                    return (\r\n                        <div className={`col-xxl-3 col-lg-4 col-md-6 col-sm-12 p-2`} key={i}>\r\n                            <div className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + (i + 7)}>\r\n                                <div className=\"flex-grow-1 p-3 table-responsive\">\r\n                                    <h5 style={{ fontSize: '18px' }}>{o?.ModuleName ? getIcons(o?.ModuleName).str : undefined}</h5>\r\n\r\n                                    <table className=\"table table-borderless text-white\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className={`${cls} fa-13`}>ERP</td>\r\n                                                <td className={`${cls} text-end`}>\r\n                                                    <span className=\"fa-19 me-1\">\r\n                                                        {NumberFormat(parseInt(erpTotal))}\r\n                                                    </span>\r\n                                                    <span className=\"fa-11\">\r\n                                                        / {NumberFormat(parseInt(erpCount))}\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className={`${cls} fa-13`}>TALLY</td>\r\n                                                <td className={`${cls} text-end`}>\r\n                                                    <span className=\"fa-19 me-1\">\r\n                                                        {NumberFormat(parseInt(tallyTotal))}\r\n                                                    </span>\r\n                                                    <span className=\"fa-11\">\r\n                                                        / {NumberFormat(parseInt(tallyCount))}\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                {o?.ModuleName ? getIcons(o?.ModuleName).icon : ''}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })} */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManagementDashboard;","import { Addition, checkIsNumber, getSessionUser, ISOString, isValidDate } from \"../../Components/functions\";\r\nimport { useState, useEffect } from 'react'\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nconst StaffInvolvedCostCenterDetails = ({ loadingOn, loadingOff, reqDate = ISOString() }) => {\r\n    const { user } = getSessionUser()\r\n    const [staffData, setStaffData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        fetchReqDate: reqDate\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isValidDate(filters.fetchReqDate) && checkIsNumber(user.UserId)) {\r\n            setStaffData([])\r\n            if (loadingOn) loadingOn();\r\n            fetchLink({\r\n                address: `dataEntry/costCenter/report/employee?userid=${user.UserId}&reqDate=${filters.fetchReqDate}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setStaffData(data.data)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters.fetchReqDate, user.UserId])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"d-flex flex-wrap align-items-center border-bottom px-3 py-2\">\r\n                    <span className=\"flex-grow-1 fa-16\">ERP Activity</span>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={filters.fetchReqDate}\r\n                        onChange={e => setFilters(pre => ({ ...pre, fetchReqDate: e.target.value }))}\r\n                        className=\"cus-inpt w-auto p-2\"\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex flex-wrap align-items-center px-3 py-2 fa-15\">\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff.StockJournalTotal), 0)}\r\n                            </h4>\r\n                            <h6>Stock Handled KGs</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff?.Stock_Journals?.length), 0)}\r\n                            </h4>\r\n                            <h6>Movement Activity</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff.TripSheetTotal), 0)}\r\n                            </h4>\r\n                            <h6>Trip Sheet KGs</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n                    \r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff?.Trip_Sheet?.length), 0)}\r\n                            </h4>\r\n                            <h6>Total Trips</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffInvolvedCostCenterDetails;","import { useEffect, useState } from \"react\"\r\nimport { CiCalendarDate } from \"react-icons/ci\";\r\nimport { CgSandClock } from \"react-icons/cg\";\r\nimport { HiUsers } from \"react-icons/hi2\";\r\nimport { RxLapTimer } from \"react-icons/rx\";\r\nimport { TbTargetArrow } from \"react-icons/tb\";\r\nimport { BiTask } from \"react-icons/bi\";\r\nimport PieChartComp from \"./chartComp\";\r\nimport { Card, CardHeader, CardContent, Paper, FormControlLabel, Switch } from '@mui/material'\r\nimport SOAComp from \"./erp/SOA\";\r\nimport AttendanceComp from \"../Attendance/attendanceComp\";\r\nimport ManagementDashboard from \"./managementDashboard\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\nimport { ISOString } from \"../../Components/functions\";\r\nimport StaffInvolvedCostCenterDetails from \"./staffInvolvedCostCenter\";\r\n\r\nconst CommonDashboard = ({ loadingOn, loadingOff }) => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [dashboardData, setDashboardData] = useState({});\r\n    const [workedDetais, setWorkedDetais] = useState([]);\r\n    const [myTasks, setMyTasks] = useState([]);\r\n    const [tallyDetails, setTallyDetails] = useState([]);\r\n    const isAdmin = Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1\r\n    const isMangement = Number(parseData?.UserTypeId) === 2\r\n    const isEmp = Number(parseData?.UserTypeId) === 6 || Number(parseData?.UserTypeId) === 3;\r\n    const isCustomer = Number(parseData?.UserTypeId) === 4 || Number(parseData?.UserTypeId) === 5;\r\n    const [dispTask, setDispTask] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || isEmp || isMangement) {\r\n            fetchLink({\r\n                address: `dashboard/dashboardData?UserType=${parseData?.UserTypeId}&Emp_Id=${parseData?.UserId}`\r\n            })\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setDashboardData(data.data[0]);\r\n                    } else {\r\n                        setDashboardData({});\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                });\r\n        }\r\n    }, [parseData?.UserId, parseData?.UserTypeId, isAdmin, isMangement, isEmp]);\r\n\r\n    useEffect(() => {\r\n        if (isEmp) {\r\n            fetchLink({\r\n                address: `dashboard/getTallyData?UserId=${parseData?.UserId}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setTallyDetails(data.data);\r\n                } else {\r\n                    setTallyDetails([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [isEmp])\r\n\r\n    useEffect(() => {\r\n        if (isEmp) {\r\n            fetchLink({\r\n                address: `taskManagement/task/work?Emp_Id=${parseData?.UserId}&from=${ISOString()}&to=${ISOString()}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setWorkedDetais(data.data);\r\n                } else {\r\n                    setTallyDetails([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n\r\n            fetchLink({\r\n                address: `taskManagement/tasks/myTasks?Emp_Id=${parseData?.UserId}&reqDate=${ISOString()}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    data.data.sort((a, b) => {\r\n                        const [aHours, aMinutes] = a?.Sch_Time.split(':').map(Number);\r\n                        const [bHours, bMinutes] = b?.Sch_Time.split(':').map(Number);\r\n                        if (aHours !== bHours) {\r\n                            return aHours - bHours;\r\n                        }\r\n                        return aMinutes - bMinutes;\r\n                    });\r\n                    setMyTasks(data.data);\r\n                } else {\r\n                    setMyTasks([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [isEmp, parseData?.UserId])\r\n\r\n    const CardComp = ({ title, icon, firstVal, secondVal, classCount }) => {\r\n        return (\r\n            <>\r\n                <div className={`${(isAdmin || isMangement) && 'col-xxl-3'} col-lg-4 col-md-6 col-sm-12 p-2`}>\r\n                    <div className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + classCount}>\r\n                        <div className=\"flex-grow-1 p-3\">\r\n                            <h5 className=\"text-uppercase\">{title}</h5>\r\n                            <h3 className=\"fa-16 text-end pe-3\">\r\n                                <span style={{ fontSize: '30px' }}>{firstVal ? firstVal : 0} </span>\r\n                                {secondVal && '/' + secondVal}\r\n                            </h3>\r\n                        </div>\r\n                        {icon}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const minFormat = (val) => {\r\n        const hour = Math.floor(Number(val) / 60);\r\n        const minutes = Number(val) % 60;\r\n        const formatHour = hour < 10 ? '0' + hour : hour;\r\n        const formatMinute = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n        return (formatHour && formatMinute) ? formatHour + ':' + formatMinute : '00:00';\r\n    }\r\n\r\n    const statusColor = (id) => {\r\n        const numId = Number(id);\r\n        const color = ['bg-dark', 'bg-info', 'bg-warning', 'bg-success', 'bg-danger'];\r\n        return color[numId]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isCustomer && <SOAComp />}\r\n\r\n            {(isMangement || isAdmin) && <ManagementDashboard />}\r\n\r\n            {(isAdmin || isMangement) && (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={dispTask}\r\n                            onChange={e => setDispTask(e.target.checked)}\r\n                        />\r\n                    }\r\n                    label=\"Show Task Management\"\r\n                    className=\" fw-bold text-primary\"\r\n                />\r\n            )}\r\n\r\n            <div className=\"px-1\">\r\n                {((isAdmin || isMangement) && dispTask) && (\r\n                    <div className=\"row\">\r\n                        <CardComp\r\n                            title={'Projects'}\r\n                            icon={<TbTargetArrow style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.ActiveProjects}\r\n                            secondVal={dashboardData?.AllProjects}\r\n                            classCount={'1'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Schedule'}\r\n                            icon={<CiCalendarDate style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.ActiveSchedule}\r\n                            secondVal={dashboardData?.AllSchedule}\r\n                            classCount={'2'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Completed Tasks'}\r\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.TaskCompleted}\r\n                            // secondVal={dashboardData?.TaskAssigned}\r\n                            classCount={'3'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Employee'}\r\n                            icon={<HiUsers style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.EmployeeCounts}\r\n                            secondVal={Number(dashboardData?.EmployeeCounts) + dashboardData?.OtherUsers}\r\n                            classCount={'4'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Worked Hours'}\r\n                            icon={<RxLapTimer style={{ fontSize: '80px' }} />}\r\n                            firstVal={minFormat(dashboardData?.TotalMinutes)}\r\n                            classCount={'5'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Today Tasks'}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.TodayTaskCompleted}\r\n                            secondVal={dashboardData?.TodayTasks}\r\n                            classCount={'6'}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {isEmp && (\r\n                    <div className=\"row\">\r\n                        <CardComp\r\n                            title={'Completed Tasks'}\r\n                            firstVal={dashboardData?.TaskCompleted}\r\n                            secondVal={dashboardData?.TotalTasks}\r\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\r\n                            classCount={'1'} />\r\n                        <CardComp\r\n                            title={'Today Tasks'}\r\n                            firstVal={dashboardData?.TodayTaskCompleted}\r\n                            secondVal={dashboardData?.TodayTasks}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            classCount={'2'} />\r\n                        <CardComp\r\n                            title={'Total Work Hours'}\r\n                            firstVal={minFormat(dashboardData?.WorkedMinutes)}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            classCount={'3'} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <br />\r\n\r\n            {isEmp && <AttendanceComp />}\r\n\r\n            <br />\r\n\r\n            {(isEmp && workedDetais.length > 0) && (\r\n                <>\r\n                    <Card>\r\n                        <CardContent sx={{ pb: 2 }}>\r\n                            <h5>Today Activity</h5>\r\n                            <PieChartComp TasksArray={workedDetais} />\r\n                            <br />\r\n                        </CardContent>\r\n                    </Card>\r\n                    <br />\r\n                </>\r\n            )}\r\n\r\n            <StaffInvolvedCostCenterDetails loadingOn={loadingOn} loadingOff={loadingOff} />\r\n\r\n            {(isEmp && myTasks.length > 0) && (\r\n                <Card>\r\n                    <CardHeader title={'Today Tasks:' + myTasks.length} sx={{ pb: 0 }} />\r\n                    <CardContent>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table mb-1 \">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"fa-13 border\">SNo</th>\r\n                                        <th className=\"fa-13 border\">Task</th>\r\n                                        <th className=\"fa-13 border\">Timer Based</th>\r\n                                        <th className=\"fa-13 border\">Schedule</th>\r\n                                        <th className=\"fa-13 border\">Duration</th>\r\n                                        <th className=\"fa-13 border\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {myTasks.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-13 border\">{i + 1}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Task_Name}</td>\r\n                                            <td className=\"fa-13 border text-center\">\r\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(Number(o?.Timer_Based) === 1 ? 3 : 1)}`}>\r\n                                                    {Number(o?.Timer_Based) === 1 ? 'Yes' : 'No'}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Time} - {o?.EN_Time}</td>\r\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Period}</td>\r\n                                            <td className=\"fa-13 border text-center\">\r\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(o?.Work_Id ? 3 : 1)}`}>\r\n                                                    {o?.Work_Id ? 'Completed' : 'Pending'}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n            <br />\r\n\r\n            {(isEmp && tallyDetails?.length > 0) && (\r\n                <Card component={Paper}>\r\n                    <CardHeader title=\"Tally Entries\" sx={{ pb: 0 }} />\r\n                    <CardContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"fa-13 border\">Sno</th>\r\n                                        <th className=\"fa-13 border\">Particulars</th>\r\n                                        <th className=\"fa-13 border\">Value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {tallyDetails?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-13 border\">{i + 1}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Particulars}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Tally_Count}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CommonDashboard","import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\n\r\nconst PieChartComp = ({ TasksArray }) => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n    const [totalTime, setTotalTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (TasksArray.length > 0) {\r\n            const totalDuration = TasksArray.reduce((acc, task) => {\r\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\r\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\r\n                return acc + (end - start);\r\n            }, 0);\r\n\r\n            const firstTaskStart = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[0].Start_Time);\r\n            const lastTaskEnd = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[TasksArray.length - 1].End_Time);\r\n            const totalTime = lastTaskEnd - firstTaskStart;\r\n            const freeTime = totalTime - totalDuration;\r\n\r\n            const totalSeconds = Math.floor(totalTime / 1000);\r\n            const hours = Math.floor(totalSeconds / 3600);\r\n            const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n            const seconds = totalSeconds % 60;\r\n            setTotalTime(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);\r\n\r\n            const taskData = TasksArray.map(task => {\r\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\r\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\r\n                const duration = end - start;\r\n                return {\r\n                    label: `${task.Task_Name} (${task.Start_Time} - ${task.End_Time})`,\r\n                    duration,\r\n                    backgroundColor: getRandomColor()\r\n                };\r\n            });\r\n\r\n            const chartData = {\r\n                labels: taskData.map(task => task.label),\r\n                datasets: [{\r\n                    data: taskData.map(task => task.duration),\r\n                    backgroundColor: taskData.map(task => task.backgroundColor),\r\n                    borderColor: 'rgba(255, 255, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            };\r\n\r\n            chartData.labels.push('Free Time');\r\n            chartData.datasets[0].data.push(freeTime);\r\n            chartData.datasets[0].backgroundColor.push('#ADD8E6');\r\n\r\n            setChartData(chartData);\r\n        }\r\n    }, [TasksArray]);\r\n\r\n    useEffect(() => {\r\n        if (chartData) {\r\n            if (chartInstance) {\r\n                chartInstance.destroy();\r\n            }\r\n\r\n            const ctx = document.getElementById('empWokHours');\r\n            const newChartInstance = new Chart(ctx, {\r\n                type: 'pie',\r\n                data: chartData,\r\n                options: {\r\n                    responsive: true,\r\n                    plugins: {\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: function (context) {\r\n                                    // const label = context.label || '';\r\n                                    const value = context.parsed || 0;\r\n                                    const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\r\n                                    const percentage = Math.round((value / total) * 100);\r\n                                    const minutes = Math.round(value / (1000 * 60));\r\n                                    return `${minutes} minutes (${percentage}%)`;\r\n                                }\r\n                            }\r\n                        },\r\n                        datalabels: {\r\n                            color: '#fff',\r\n                            formatter: (value, context) => {\r\n                                const label = context.chart.data.labels[context.dataIndex];\r\n                                const value1 = context.parsed || 0;\r\n                                const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\r\n                                const percentage = Math.round((value1 / total) * 100);\r\n                                return `${label}: ${value} (${percentage}%)`;\r\n                            }\r\n                        }                        \r\n                    }\r\n                }\r\n            });\r\n\r\n            setChartInstance(newChartInstance);\r\n        }\r\n    }, [chartData]);\r\n\r\n    // for Dynamic background colors\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    return TasksArray.length > 0 ? (\r\n        <div className='d-flex flex-column align-items-center my-3' style={{ maxHeight: '500px' }}>\r\n            {totalTime && <p className='my-2'>Total Time: {totalTime}</p>}\r\n            <canvas id=\"empWokHours\" width=\"400\" height=\"100\"></canvas>\r\n        </div>\r\n    ) : (\r\n        <h5 className=\"text-center my-5\">No Data For PieChart!</h5>\r\n    )\r\n};\r\n\r\nexport default PieChartComp;\r\n"],"names":["SOAComp","_SOA$","_SOA$2","_SOA$3","_SOA$4","_SOA$5","_SOA$6","_SOA$7","_SOA$8","_SOA$9","_SOA$10","parseData","JSON","parse","localStorage","getItem","isCustomer","setIsCustomer","useState","dataArray","setDataArray","UserId","total","setTotal","dialog","setDialog","SOA","setSOA","clickedRow","setClickedRow","today","Date","firstDayOfMonth","getFullYear","getMonth","selectedRange","setSelectedRange","from","toISOString","split","to","imageSource","logo","closingBalance","setClosingBalance","debit","credit","printRef","useRef","useEffect","fetchLink","address","concat","then","data","status","_data$data","temp","forEach","obj","Number","Bal_Amount","catch","e","console","error","getInfo","prop","mode","_rowData","_rowData2","_rowData3","rowData","Cust_Id","tally_id","Company_Id","_data$data2","bal","Debit_Amt","Credit_Amt","handleClose","handlePrint","useReactToPrint","content","current","_jsxs","_Fragment","children","className","_jsx","Name","toLocaleString","style","fontSize","map","o","i","_o$Bal_Amount","onClick","LaunchOutlined","sx","Company_Name","ledger_name","CR_DR","Dialog","open","onClose","fullScreen","fullWidth","DialogTitle","Customer_name","Button","worksheet","XLSXUtils","json_to_sheet","workbook","book_new","book_append_sheet","writeXLSX","toLocaleDateString","day","month","year","hour","minute","second","generateExcel","Sno","Ledger_Date","Purticular","Ledger_Desc","InvoiceNo","invoice_no","Debit","Boolean","Credit","Company","Ledger","Ledger_Name","Mobile_Number","Mobile_no","DialogContent","src","alt","Contact_Person","type","onChange","_objectSpread","target","value","window","alert","disabled","backgroundColor","ref","DialogActions","variant","color","AttendanceComp","storage","initialValue","Latitude","Longitude","Description","lastAttendance","setLastAttendance","reload","setReload","inputValue","setInputValue","success","length","resetValues","Card","StartDay","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","pre","code","PERMISSION_DENIED","toast","warn","message","getLocation","hasLocationAccess","method","bodyData","Active_Status","CardContent","Start_Date","LocalDate","LocalTime","maxWidth","rows","placeholder","EndDay","Id","moduleIcons","actualName","str","icon","FaCubesStacked","orderBy","Assignment","ReceiptLong","AssignmentTurnedIn","RequestQuote","PiHandCoinsFill","Paid","AttachMoney","MenuBook","Inventory2","CompareArrows","ManagementDashboard","UserAccess","UserTypeId","dayBookData","setDayBookData","otherData","setOtherData","EXPENCES","STOCKVALUE","cls","filter","setFilter","date","ISOString","Company_id","headers","_data$data$1$","_data$data$2$","toNumber","Total_Cost_Vlaue","Stock_Value","IconButton","size","Sync","iconData","stringCompare","ModuleName","groupedData","VoucherBreakUpCount","Voucher_Type","Amount","navLink","dataSource","find","entry","grouped","toArray","erpData","mod","tallyData","erpTotal","reduce","acc","item","Addition","erpCount","tallyTotal","tallyCount","NumberFormat","parseInt","_ref","loadingOn","loadingOff","reqDate","user","getSessionUser","staffData","setStaffData","filters","setFilters","fetchReqDate","isValidDate","checkIsNumber","finally","minWidth","sTacc","staff","StockJournalTotal","_staff$Stock_Journals","Stock_Journals","TripSheetTotal","_staff$Trip_Sheet","Trip_Sheet","dashboardData","setDashboardData","workedDetais","setWorkedDetais","myTasks","setMyTasks","tallyDetails","setTallyDetails","isAdmin","isMangement","isEmp","dispTask","setDispTask","sort","a","b","aHours","aMinutes","Sch_Time","bHours","bMinutes","CardComp","_ref2","title","firstVal","secondVal","classCount","minFormat","val","Math","floor","minutes","formatHour","formatMinute","statusColor","id","FormControlLabel","control","Switch","checked","label","TbTargetArrow","ActiveProjects","AllProjects","CiCalendarDate","ActiveSchedule","AllSchedule","BiTask","TaskCompleted","HiUsers","EmployeeCounts","OtherUsers","RxLapTimer","TotalMinutes","CgSandClock","TodayTaskCompleted","TodayTasks","TotalTasks","WorkedMinutes","pb","PieChartComp","TasksArray","StaffInvolvedCostCenterDetails","CardHeader","Task_Name","Timer_Based","EN_Time","Sch_Period","Work_Id","component","Paper","Particulars","Tally_Count","chartData","setChartData","chartInstance","setChartInstance","totalTime","setTotalTime","totalDuration","task","start","Start_Time","End_Time","firstTaskStart","freeTime","totalSeconds","hours","seconds","String","padStart","taskData","duration","getRandomColor","labels","datasets","borderColor","borderWidth","push","destroy","ctx","document","getElementById","newChartInstance","Chart","options","responsive","plugins","tooltip","callbacks","context","parsed","dataset","curr","percentage","round","datalabels","formatter","chart","dataIndex","value1","random","maxHeight","width","height"],"sourceRoot":""}