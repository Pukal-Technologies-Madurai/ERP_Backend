{"version":3,"file":"static/js/528.ab8c1fc2.chunk.js","mappings":"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","sources":["Pages/Sales/convertedStatus.js","Pages/Sales/SalesReportComponent/newInvoiceTemplate.jsx","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/SalesReportComponent/previewInvoice.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx"],"sourcesContent":["export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]\r\n\r\nexport const dbStatus = [\r\n    {\r\n        id: 1,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Progess',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Completed',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.So_Id,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.So_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n\r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='lg'>\r\n\r\n                <DialogTitle>Order Preview</DialogTitle>\r\n\r\n                <DialogContent ref={printRef}>\r\n                    <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                    {/* General Info */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 p-0 border border-bottom-0 border-end-0\"> {/* Company Info */}\r\n                            <div className=\"border-bottom p-2\">\r\n                                <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                {/* <p className='m-0 fa-14'></p> */}\r\n                                <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                <p className='m-0 fa-14'>Code: </p>\r\n                            </div>\r\n                            <div className=\"p-2\"> {/* buyer info */}\r\n                                <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                <p className='m-0 fa-14'>Code: </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6 p-0 border border-bottom-0\">\r\n                            <table className=\"table m-0\">\r\n                                <tbody>\r\n                                    {extraDetails.map((detail, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                            </td>\r\n                                            <td className='fa-12 p-0 px-1'>\r\n                                                <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                    <tr>\r\n                                        <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                            <p className=\"m-0\">Terms of Delivery</p>\r\n                                            <p className=\"m-0\"></p>\r\n                                            <br />\r\n                                            <br />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Product Info */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 p-0\">\r\n                            <table className=\"table m-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td className='border bg-light fa-14'>Sno</td>\r\n                                        <td className='border bg-light fa-14'>Product</td>\r\n                                        <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                        <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                        <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                        <td className='border bg-light fa-14 text-end'>\r\n                                            <p className='m-2 '>Rate</p>\r\n                                            <p className='m-0 '>\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                            </p>\r\n                                        </td>\r\n                                        <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    {includedProducts.map((o, i) => {\r\n                                        const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                        const quantity = Number(o?.Bill_Qty || 0);\r\n                                        const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                        const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage)\r\n                                        return (\r\n                                            <tr key={i}>\r\n                                                <td className='border fa-13'>{i + 1}</td>\r\n                                                <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                <td className='border fa-13'>{o?.HSN_Code}</td>\r\n\r\n                                                <td className='border fa-13 text-end'>\r\n                                                    {NumberFormat(quantity)}\r\n                                                    {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* taxable item value */}\r\n                                                    {NumberFormat(isEqualNumber(\r\n                                                        orderDetails.GST_Inclusive, 1\r\n                                                    ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* rate per item */}\r\n                                                    {NumberFormat(isEqualNumber(\r\n                                                        orderDetails.GST_Inclusive, 1\r\n                                                    ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* taxable amount (qty * rate) */}\r\n                                                    {NumberFormat(o?.Taxable_Amount)}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n\r\n                                    <tr>\r\n                                        <td\r\n                                            className=\"border p-2\"\r\n                                            rowSpan={IS_IGST ? 4 : 5}\r\n                                            colSpan={4}\r\n                                        >\r\n                                            <p className='m-0'>Amount Chargeable (in words):</p>\r\n                                            <p className='m-0'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                        </td>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                        <td className=\"border p-2 text-end fa-14\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    {!IS_IGST ? (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                <td className=\"border p-2 text-end fa-14\">\r\n                                                    {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                    {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </>\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                            <td className=\"border p-2 fa-14 text-end\">\r\n                                                {NumberFormat(orderDetails.IGST_Total)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n\r\n                                    <tr>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                        <td className=\"border p-2 fa-14 text-end\">\r\n                                            {NumberFormat(orderDetails?.Round_off)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                        <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                            {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Tax Calculations */}\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                    </>\r\n                                )}\r\n                                <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                            </tr>\r\n                            <tr>\r\n                                {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                    </>\r\n                                )}\r\n                                <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TaxData.map((o, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                        <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                        {orderDetails.IS_IGST ? (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            </>\r\n                                        )}\r\n                                        <td className=\"border fa-13 text-end\">\r\n                                            {NumberFormat(o?.totalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td className=\"border fa-13 text-end\">Total</td>\r\n                                <td className=\"border fa-13 text-end fw-bold\">\r\n                                    {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                </td>\r\n\r\n                                {orderDetails.IS_IGST ? (\r\n                                    <>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                        </td>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                        </td>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                        </td>\r\n                                    </>\r\n                                )}\r\n\r\n                                <td className=\"border fa-13 text-end fw-bold\">\r\n                                    {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td\r\n                                    colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                    className='border fa-13 fw-bold'\r\n                                >\r\n                                    Tax Amount (in words) : INR &nbsp;\r\n                                    {numberToWords(\r\n                                        parseInt(\r\n                                            TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                        )\r\n                                    )} only.\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"col-12 text-center\">\r\n                        <p>This is a Computer Generated Invoice</p>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button startIcon={<Close />} variant='outlined' color='error' onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {download && (\r\n                        <Button\r\n                            startIcon={<Download />}\r\n                            variant='outlined'\r\n                            onClick={handlePrint}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    isEqualNumber,\r\n    isGraterNumber,\r\n    isValidObject,\r\n    ISOString,\r\n    getUniqueData,\r\n    Multiplication,\r\n    Division,\r\n    NumberFormat,\r\n    numberToWords,\r\n    Addition,\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\n\r\nconst findProductDetails = (arr = [], productid) =>\r\n    arr.find((obj) => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({\r\n    editValues,\r\n    loadingOn,\r\n    loadingOff,\r\n    reload,\r\n    switchScreen,\r\n    editOn,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        salesPerson: [],\r\n        brand: [],\r\n    });\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: \"\",\r\n        Retailer_Id: \"\",\r\n        Retailer_Name: \"Select\",\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: \"\",\r\n        Payment_Ref_No: \"\",\r\n        Delivery_Person_Name: \"\",\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: \"\",\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    };\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: \"\",\r\n        ItemName: \"Search Item\",\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: \"\",\r\n        Units: \"\",\r\n        Product: {},\r\n        Group: \"Search Group\",\r\n        GroupID: \"\",\r\n        Brand: \"Search Brand\",\r\n        BrandID: \"\",\r\n        Amount: 0,\r\n    };\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue);\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    // const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    // const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const deliveryPerson = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails((pre) => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                toast.warn(\"Unable to fetch location. Allow location access.\");\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails((pre) => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(\r\n                editValues?.Products_List?.map((pro) => ({\r\n                    ...pro,\r\n                    Item_Id: pro.Item_Id ?? \"\",\r\n                    ItemName: pro?.Product_Name ?? \"\",\r\n                    Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                    Item_Rate: pro?.Item_Rate ?? 0,\r\n                    UOM: pro?.Unit_Id ?? \"\",\r\n                    Units: pro?.Units ?? \"\",\r\n                    Product: {\r\n                        ...pro,\r\n                        Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                        Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                        Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                        Gst_P: Addition(\r\n                            findProductDetails(products, pro.Item_Id)?.Cgst_P,\r\n                            findProductDetails(products, pro.Item_Id)?.Sgst_P\r\n                        ) ?? 0,\r\n                    },\r\n                    Group: \"Search Group\",\r\n                    GroupID: \"\",\r\n                    Brand: \"Search Brand\",\r\n                    BrandID: \"\",\r\n                    Amount: pro?.Amount ?? 0,\r\n                }))\r\n            );\r\n            setIsEdit(true);\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([]);\r\n            setIsEdit(false);\r\n        }\r\n    }, [editValues, products]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setRetailers(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProductUOM(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/products`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProducts(data.data);\r\n                    const uniqueBrand = getUniqueData(data.data, \"Brand\", [\"Brand_Name\"]);\r\n                    setProductBrand(uniqueBrand);\r\n                } else {\r\n                    setProducts([]);\r\n                    setProductBrand([]);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setCompanyInfo(data?.data[0] ? data?.data[0] : {});\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setVoucherType(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setBranch(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, [storage?.Company_id]);\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productMaster = findProductDetails(baseData.products, productId);\r\n        const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n        const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n        \r\n        const amount = Multiplication(value, rate);\r\n        const gstInfo = calculateGSTDetails(\r\n            amount,\r\n            gstPercentage,\r\n            isInclusive ? \"remove\" : \"add\"\r\n        );\r\n\r\n        const productIndex = orderProducts.findIndex(item => \r\n            isEqualNumber(item.Item_Id, productId)\r\n        );\r\n\r\n        const productData = {\r\n            Item_Id: productId,\r\n            Bill_Qty: Number(value),\r\n            Item_Rate: Number(rate),\r\n            UOM: UOM_Id,\r\n            Units: Units,\r\n            Amount: amount,\r\n            Product: obj,\r\n            Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n            Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n            Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n            Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n            Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n            Tax_Rate: gstPercentage,\r\n            Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n            Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n            Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n            Taxble: isTaxable ? 1 : 0\r\n        };\r\n\r\n        if (productIndex !== -1) {\r\n            setOrderProducts(prev => [\r\n                ...prev.slice(0, productIndex),\r\n                productData,\r\n                ...prev.slice(productIndex + 1)\r\n            ]);\r\n        } else {\r\n            setOrderProducts(prev => [...prev, productData]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre.map(product => {\r\n            const productMaster = findProductDetails(baseData.products, product.Item_Id);\r\n            const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n            const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n            \r\n            const amount = Multiplication(product.Item_Rate, product.Bill_Qty);\r\n            const gstInfo = calculateGSTDetails(\r\n                amount,\r\n                gstPercentage,\r\n                isInclusive ? \"remove\" : \"add\"\r\n            );\r\n\r\n            return {\r\n                ...product,\r\n                Amount: amount,\r\n                Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n                Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n                Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n                Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n                Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n                Tax_Rate: gstPercentage,\r\n                Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n                Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n                Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n                Taxble: isTaxable ? 1 : 0\r\n            };\r\n        }));\r\n    }, [orderDetails.GST_Inclusive, orderDetails.IS_IGST]);\r\n\r\n    const calculateTotals = (orderProducts) => {\r\n        return orderProducts.reduce((acc, product) => {\r\n            return {\r\n                taxableAmount: acc.taxableAmount + (product.Taxable_Amount || 0),\r\n                cgst: acc.cgst + (product.Cgst_Amo || 0),\r\n                sgst: acc.sgst + (product.Sgst_Amo || 0),\r\n                igst: acc.igst + (product.Igst_Amo || 0),\r\n                finalAmount: acc.finalAmount + (product.Final_Amo || 0)\r\n            };\r\n        }, { taxableAmount: 0, cgst: 0, sgst: 0, igst: 0, finalAmount: 0 });\r\n    };\r\n\r\n    const totals = calculateTotals(orderProducts);\r\n    const roundOff = Math.round(totals.finalAmount) - totals.finalAmount;\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: isEdit && !editOn ? \"PUT\" : \"POST\",\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter((o) =>\r\n                        isGraterNumber(o?.Bill_Qty, 0)\r\n                    ),\r\n                    Delivery_Person_Id:\r\n                        deliveryPerson ?? Number(orderDetails?.Delivery_Person_Id) ?? 0,\r\n                    Payment_Status: orderDetails?.Payment_Status\r\n                        ? Number(orderDetails?.Payment_Status)\r\n                        : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: orderDetails?.Delivery_Status\r\n                        ? Number(orderDetails?.Delivery_Status)\r\n                        : 1,\r\n                    Payment_Mode: orderDetails?.Payment_Mode\r\n                        ? Number(orderDetails?.Payment_Mode)\r\n                        : 1,\r\n                },\r\n            })\r\n                .then((data) => {\r\n                    if (data.success) {\r\n                        toast.success(data?.message);\r\n                        setOrderDetails(initialValue);\r\n                        setOrderProducts([]);\r\n                        reload();\r\n                    } else {\r\n                        toast.error(data?.message);\r\n                    }\r\n                })\r\n                .catch((e) => console.error(e))\r\n                .finally(() => loadingOff());\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error(\"Enter any one product quantity\");\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error(\"Select Retailer\");\r\n                return toast.error(\"Select Retailer\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                        Create Delivery Order\r\n                    </h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* Company Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Company_Address}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Telephone_Number}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={\r\n                                                    orderDetails?.Do_Date\r\n                                                        ? ISOString(orderDetails?.Do_Date)\r\n                                                        : \"\"\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Do_Date: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        GST_Inclusive: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        IS_IGST: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value=\"0\">GST</option>\r\n                                                <option value=\"1\">IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Voucher Type <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        VoucherType: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select voucher\r\n                                                </option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option value={vou.Vocher_Type_Id} key={ind}>\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Branch <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Branch_Id: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select Branch\r\n                                                </option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>\r\n                                                        {branch.BranchName}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{\r\n                                                    value: orderDetails?.Retailer_Id,\r\n                                                    label: orderDetails?.Retailer_Name,\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Retailer_Id: e.value,\r\n                                                        Retailer_Name: e.label,\r\n                                                    })\r\n                                                }\r\n                                                options={[\r\n                                                    { value: \"\", label: \"select\", isDisabled: true },\r\n                                                    ...retailers.map((obj) => ({\r\n                                                        value: obj?.Retailer_Id,\r\n                                                        label: obj?.Retailer_Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Delivery_Status: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={\r\n                                                    orderDetails.Delivery_Status\r\n                                                        ? orderDetails.Delivery_Status\r\n                                                        : 1\r\n                                                }\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Mode: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Status: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Ref_No: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails?.Payment_Ref_No}\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        startIcon={<Add />}\r\n                    >\r\n                        Add Product\r\n                    </Button>\r\n                </div>\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: \"Product\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: \"HSN Code\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + (row?.Units ?? \"\"),\r\n                            ColumnHeader: \"Quantity\",\r\n                            isVisible: 1,\r\n                            align: \"center\",\r\n                        },\r\n                        {\r\n                            Field_Name: \"Item_Rate\",\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: \"number\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Taxable Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return NumberFormat(row.Taxable_Amount || 0);\r\n                            },\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const taxAmount = Addition(\r\n                                    row.Cgst_Amo || 0,\r\n                                    row.Sgst_Amo || 0,\r\n                                    row.Igst_Amo || 0\r\n                                );\r\n                                return `${NumberFormat(taxAmount)} (${row.Product?.Tax_Rate || 0}%)`;\r\n                            },\r\n                            ColumnHeader: \"Tax\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => NumberFormat(row.Final_Amo || 0),\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                const product = row.Product || {};\r\n                                                const latestUOM_Id = row.UOM || product.Unit_Id;\r\n                                                const latestUnitName =\r\n                                                    row.Unit_Name || product.Units || product.Unit_Name;\r\n\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: product.Product_Name || row.ItemName,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: latestUOM_Id,\r\n                                                    Units: latestUnitName,\r\n                                                    Product: product,\r\n                                                    Group: product.Pro_Group || row.Group || \"\",\r\n                                                    GroupID: product.Product_Group || row.GroupID || \"\",\r\n                                                    Brand: product.Brand_Name || row.Brand || \"\",\r\n                                                    BrandID: product.Brand || row.BrandID || \"\",\r\n                                                    Amount: row.Amount,\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts((pre) =>\r\n                                                    pre.filter(\r\n                                                        (obj) => !isEqualNumber(obj.Item_Id, row.Item_Id)\r\n                                                    )\r\n                                                );\r\n                                            }}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                );\r\n                            },\r\n                            ColumnHeader: \"Action\",\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n                {/* Invoice Summary */}\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={orderDetails.IS_IGST === 1 ? 4 : 5}>\r\n                                        Total in words: {numberToWords(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(totals.taxableAmount.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                {orderDetails.IS_IGST === 1 ? (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2 text-end\">\r\n                                            {NumberFormat(totals.igst.toFixed(2))}\r\n                                        </td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.cgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.sgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(roundOff.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2 fw-bold\">Total</td>\r\n                                    <td className=\"border p-2 text-end fw-bold\">\r\n                                        {NumberFormat(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={(e) =>\r\n                        setOrderDetails((pre) => ({ ...pre, Narration: e.target.value }))\r\n                    }\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {\"cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        color=\"success\"\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Add Product Dialog */}\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        if (\r\n                            productDetails.Item_Id &&\r\n                            productDetails.Bill_Qty &&\r\n                            productDetails.Item_Rate\r\n                        ) {\r\n                            handleProductInputChange(\r\n                                productDetails.Item_Id,\r\n                                productDetails.Bill_Qty,\r\n                                productDetails.Item_Rate,\r\n                                productDetails.Product,\r\n                                productDetails.UOM,\r\n                                productDetails.Units\r\n                            );\r\n                            closeAddProduct();\r\n                        } else {\r\n                            toast.warn(\r\n                                !productDetails.Item_Id\r\n                                    ? \"Select Product\"\r\n                                    : !productDetails.Bill_Qty\r\n                                        ? \"Enter Quantity\"\r\n                                        : \"Enter Rate or Amount\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.BrandID,\r\n                                        label: productDetails.Brand,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            BrandID: e.value,\r\n                                            Brand: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productBrand.map((obj) => ({\r\n                                            value: obj?.Brand,\r\n                                            label: obj?.Brand_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.GroupID,\r\n                                        label: productDetails.Group,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            GroupID: e.value,\r\n                                            Group: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...products\r\n                                            .filter((pro) =>\r\n                                                productDetails.BrandID\r\n                                                    ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                    : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>\r\n                                    Item Name <RequiredStar />\r\n                                </label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: productDetails.ItemName,\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        const productInfo = products.find((pro) =>\r\n                                            isEqualNumber(pro.Product_Id, e.value)\r\n                                        );\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter((pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                                )\r\n                                                .filter((pro) =>\r\n                                                    productDetails.GroupID\r\n                                                        ? isEqualNumber(\r\n                                                            pro.Product_Group,\r\n                                                            productDetails.GroupID\r\n                                                        )\r\n                                                        : true\r\n                                                ),\r\n                                        ].map((obj) => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled:\r\n                                                orderProducts.findIndex((ind) =>\r\n                                                    isEqualNumber(ind?.Item_Id, obj?.Product_Id)\r\n                                                ) === -1\r\n                                                    ? false\r\n                                                    : true,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Quantity <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"input\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    productDetails.Item_Rate,\r\n                                                    e.target.value\r\n                                                                                               ),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Quantity\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Rate <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Rate\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Amount\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.UOM,\r\n                                        label: productDetails.Units,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            UOM: e.value,\r\n                                            Units: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productUOM.map((obj) => ({\r\n                                            value: obj?.UOM_Id,\r\n                                            label: obj?.UOM_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select UOM\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>HSN Code</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={productDetails.Product?.HSN_Code || \"\"}\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>GST %</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        orderDetails.IS_IGST\r\n                                            ? productDetails.Product?.Igst_P || 0\r\n                                            : Addition(\r\n                                                productDetails.Product?.Cgst_P || 0,\r\n                                                productDetails.Product?.Sgst_P || 0\r\n                                            )\r\n                                    }\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions className=\"border-top\">\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            startIcon={<ClearAll />}\r\n                            onClick={closeAddProduct}\r\n                        >\r\n                            Clear\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"success\"\r\n                            startIcon={<Save />}\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewDeliveryOrder;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n\r\n\r\n\r\n    const [pageSize, setPageSize] = useState('A5');\r\n\r\n\r\n    // const a4Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '297mm',\r\n    //     padding: '10mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '7px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.2,\r\n    //     overflow: 'visible',\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n    //     flexGrow: 1,\r\n    //     paddingTop: '1px',\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '210mm',\r\n    //         height: '297mm',\r\n    //         margin: 0,\r\n    //         padding: '8mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n    // const a5Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '148.5mm',\r\n    //     padding: '6mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '5px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.0,\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n\r\n    //     flexGrow: 1,\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '148mm',\r\n    //         height: '210mm',\r\n    //         margin: 0,\r\n    //         padding: '5mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const a4Styles = {\r\n        width: '200mm',\r\n        minHeight: '290mm',\r\n        padding: '10mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '7px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.2,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n    };\r\n\r\n    const a5Styles = {\r\n        width: '200mm',\r\n        minHeight: '146mm',\r\n        padding: '8mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '5px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n        pageStyle: `\r\n    @page {\r\n      size: ${pageSize === 'A4' ? 'A4' : 'A5'};\r\n      margin-top: 10px;\r\n      margin-right: 0;\r\n      margin-bottom: 0;\r\n      margin-left: 0;\r\n      \r\n    }\r\n\r\n    @media print {\r\n      body {\r\n        margin: 0;\r\n        padding: 0;\r\n         margin-top: 10px;\r\n      }\r\n\r\n      .MuiDialog-root,\r\n      .MuiDialog-container,\r\n      .MuiPaper-root,\r\n      .MuiDialogTitle-root {\r\n        display: none !important;\r\n      }\r\n\r\n    .pagebreak {\r\n        clear: both;\r\n        page-break-after: always;\r\n    }\r\n\r\n      .print-content {\r\n        padding-top: 0;\r\n         margin-top: 10px;\r\n      }\r\n    }\r\n  `\r\n    });\r\n\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.Do_Inv_No,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.Do_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    const getInlineStyles = () => (pageSize === 'A4' ? a4Styles : a5Styles);\r\n\r\n    const handleToggle = () => {\r\n        setPageSize((prev) => (prev === 'A5' ? 'A4' : 'A5'));\r\n    };\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xl\"\r\n                sx={{\r\n                    '& .MuiDialog-container': {\r\n                        alignItems: 'flex-start',\r\n                        padding: '20px 0',\r\n                        overflow: 'auto',\r\n                    },\r\n                    '& .MuiPaper-root': {\r\n                        width: 'auto',\r\n                        maxWidth: '95vw',\r\n                        maxHeight: '95vh',\r\n                        margin: 0,\r\n                        overflow: 'visible',\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle sx={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                    width: '100%',\r\n                    position: 'sticky',\r\n                    marginTop: '2px',\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1,\r\n                }}>\r\n                    Order Preview\r\n                </DialogTitle>\r\n\r\n                <DialogContent\r\n                    ref={printRef}\r\n                    sx={{\r\n                        padding: 0,\r\n                        margin: 0,\r\n                        overflow: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        '@media print': {\r\n                            overflow: 'visible',\r\n                            display: 'block',\r\n                            height: 'auto',\r\n                            marginTop: '2px'\r\n                        }\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={getInlineStyles()}\r\n                        className=\"print-container\"\r\n                    >\r\n                        <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                        {/* General Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 p-0 border border-bottom-0 border-end-0\">\r\n                                <div className=\"border-bottom p-2\">\r\n                                    <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                    <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                    <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                    <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                    <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                    <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6 p-0 border border-bottom-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <tbody>\r\n                                        {extraDetails.map((detail, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                    <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                                </td>\r\n                                                <td className='fa-12 p-0 px-1'>\r\n                                                    <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                                <p className=\"m-0\">Terms of Delivery</p>\r\n                                                <p className=\"m-0\"></p>\r\n                                                <br />\r\n                                                <br />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Product Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 p-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td className='border bg-light fa-14'>Sno</td>\r\n                                            <td className='border bg-light fa-14'>Product</td>\r\n                                            <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                            <td className='border bg-light fa-14 text-end'>\r\n                                                <p className='m-2 '>Rate</p>\r\n                                                <p className='m-0 '>\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {(() => {\r\n                                            const chunkSize = 15;\r\n                                            const productChunks = [];\r\n                                            for (let i = 0; i < includedProducts.length; i += chunkSize) {\r\n                                                productChunks.push(includedProducts.slice(i, i + chunkSize));\r\n                                            }\r\n\r\n                                            return productChunks.map((chunk, chunkIndex) => (\r\n                                                <React.Fragment key={chunkIndex}>\r\n                                                    {chunk.map((o, i) => {\r\n                                                        const globalIndex = chunkIndex * chunkSize + i;\r\n                                                        const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                                        const quantity = Number(o?.Bill_Qty || 0);\r\n                                                        const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                                        const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage);\r\n\r\n                                                        return (\r\n                                                            <tr key={globalIndex}>\r\n                                                                <td className='border fa-13'>{globalIndex + 1}</td>\r\n                                                                <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                                <td className='border fa-13'>{o?.HSN_Code}</td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(quantity)}\r\n                                                                    {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(o?.Taxable_Amount)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                    {/* Summary section only after last chunk */}\r\n                                                    {chunkIndex === productChunks.length - 1 && (\r\n                                                        <>\r\n                                                            <tr>\r\n                                                                <td\r\n                                                                    className=\"border p-2\"\r\n                                                                    rowSpan={IS_IGST ? 4 : 5}\r\n                                                                    colSpan={4}\r\n                                                                >\r\n                                                                    <p className='m-0 mx-2 p-2 fa-13 fw-bold'>Amount Chargeable (in words):</p>\r\n                                                                    <p className='m-0 fa-13 fw-bold'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                                                </td>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                                                <td className=\"border p-2 text-end fa-14\">\r\n                                                                    {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            {!IS_IGST ? (\r\n                                                                <>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                                        <td className=\"border p-2 text-end fa-14\">\r\n                                                                            {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                                        <td className=\"border p-2 fa-14 text-end\">\r\n                                                                            {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <tr>\r\n                                                                    <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                                                    <td className=\"border p-2 fa-14 text-end\">\r\n                                                                        {NumberFormat(orderDetails.IGST_Total)}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )}\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                                    {NumberFormat(orderDetails?.Round_off)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                                                    {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                                    {/* Page break after each chunk except last */}\r\n                                                    {chunkIndex < productChunks.length - 1 && (\r\n                                                        <tr style={{\r\n                                                            pageBreakAfter: 'always',\r\n                                                            height: '0',\r\n                                                            visibility: 'hidden',\r\n                                                            border: 'none'\r\n                                                        }}>\r\n                                                            <td colSpan=\"7\" style={{ border: 'none' }}></td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            ));\r\n                                        })()}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tax Table */}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {TaxData.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                        <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                        {orderDetails.IS_IGST ? (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            </>\r\n                                        )}\r\n                                        <td className=\"border fa-13 text-end\">\r\n                                            {NumberFormat(o?.totalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td className=\"border fa-13 text-end\">Total</td>\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                    </td>\r\n                                    {orderDetails.IS_IGST ? (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                        className='border fa-13 fw-bold'\r\n                                    >\r\n                                        Tax Amount (in words) : INR &nbsp;\r\n                                        {numberToWords(\r\n                                            parseInt(\r\n                                                TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                            )\r\n                                        )} only.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>This is a Computer Generated Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"pageSizeSwitch\"\r\n                            checked={pageSize === 'A4'}\r\n                            onChange={handleToggle}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"pageSizeSwitch\">\r\n                            {pageSize} selected\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                        <Button\r\n                            startIcon={<Close />}\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                        {download && (\r\n                            <Button\r\n                                startIcon={<Download />}\r\n                                variant=\"outlined\"\r\n                                onClick={handlePrint}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;","// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//     Card,\r\n//     CardContent,\r\n//     Button,\r\n//     Dialog,\r\n//     Tooltip,\r\n//     IconButton,\r\n//     DialogTitle,\r\n//     DialogContent,\r\n//     DialogActions,\r\n//     Switch,\r\n// } from \"@mui/material\";\r\n// // import '../common.css'\r\n// import Select from \"react-select\";\r\n// import { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n// import {\r\n//     getPreviousDate,\r\n//     isEqualNumber,\r\n//     ISOString,\r\n//     isValidObject,\r\n// } from \"../../../Components/functions\";\r\n// // import DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\n// import { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\n// import { fetchLink } from \"../../../Components/fetchComponent\";\r\n// import FilterableTable from \"../../../Components/filterableTable2\";\r\n// // import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\n// import { toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import NewDeliveryOrder from \"./NewDeliveryOrder\";\r\n// import DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\";\r\n// const DeliveryDetailsList = ({\r\n//     loadingOn,\r\n//     loadingOff,\r\n//     onToggle,\r\n//     reload,\r\n//     triggerReload,\r\n// }) => {\r\n//     const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n//     const [saleOrders, setSaleOrders] = useState([]);\r\n//     const [retailers, setRetailers] = useState([]);\r\n//     const [salesPerson, setSalePerson] = useState([]);\r\n//     const [users, setUsers] = useState([]);\r\n//     const [screen, setScreen] = useState(true);\r\n//     const [orderInfo, setOrderInfo] = useState({});\r\n//     const [viewOrder, setViewOrder] = useState({});\r\n\r\n//     const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n//     const [itemTodelete, setItemToDelete] = useState({});\r\n//     const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] =\r\n//         useState(false);\r\n//     const [deliveryPerson, setDeliveryPerson] = useState([]);\r\n//     const [filters, setFilters] = useState({\r\n//         Fromdate: getPreviousDate(7),\r\n//         Todate: ISOString(),\r\n//         Retailer_Id: \"\",\r\n//         RetailerGet: \"ALL\",\r\n//         Created_by: \"\",\r\n//         CreatedByGet: \"ALL\",\r\n//         Delivery_Person_Id: \"\",\r\n//         Delivery_Person_Name: \"ALL\",\r\n//         Sales_Person_Id: \"\",\r\n//         Sales_Person_Name: \"ALL\",\r\n//         Cancel_status: 0,\r\n//     });\r\n\r\n//     const [pageLoad, setPageLoad] = useState(false);\r\n\r\n//     const [dialog, setDialog] = useState({\r\n//         filters: false,\r\n//         orderDetails: false,\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         fetchLink({\r\n//             address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setSaleOrders(data?.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n//     }, [\r\n//         filters.Fromdate,\r\n//         filters?.Todate,\r\n//         filters?.Retailer_Id,\r\n//         filters?.Delivery_Person_Id,\r\n//         filters?.Created_by,\r\n//         filters?.Cancel_status,\r\n//         filters?.Sales_Person_Id,\r\n//         reload,\r\n//         pageLoad,\r\n//     ]);\r\n\r\n//     useEffect(() => {\r\n//         fetchLink({\r\n//             address: `dataEntry/costCenter`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setDeliveryPerson(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setRetailers(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setSalePerson(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/user/dropDown?Company_id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setUsers(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n//     }, []);\r\n//     const openDeleteDialog = (itemData) => {\r\n//         setItemToDelete({\r\n//             So_No: itemData.So_No,\r\n//             Do_Id: itemData.Do_Id,\r\n//         });\r\n//         setDeleteConfirm(true);\r\n//     };\r\n\r\n//     const saleOrderColumn = [\r\n//         {\r\n//             Field_Name: \"Do_Id\",\r\n//             ColumnHeader: \"Delivery ID\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n//         {\r\n//             Field_Name: \"So_No\",\r\n//             ColumnHeader: \"Sale Order ID\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Do_Inv_No\",\r\n//             ColumnHeader: \"Do_Inv_No \",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Retailer_Name\",\r\n//             ColumnHeader: \"Customer\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n//         {\r\n//             Field_Name: \"SalesDate\",\r\n//             ColumnHeader: \"Sale Order Date\",\r\n//             Fied_Data: \"date\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Do_Date\",\r\n//             ColumnHeader: \"Delivery Date\",\r\n//             Fied_Data: \"date\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Total_Before_Tax\",\r\n//             ColumnHeader: \"Before Tax\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Total_Tax\",\r\n//             ColumnHeader: \"Tax\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Total_Invoice_value\",\r\n//             ColumnHeader: \"Invoice Value\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"DeliveryStatusName\",\r\n//             ColumnHeader: \"Delivery Status \",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Action\",\r\n//             isVisible: 1,\r\n//             isCustomCell: true,\r\n//             Cell: ({ row }) => {\r\n//                 return (\r\n//                     <>\r\n//                         <Tooltip title=\"View Order\">\r\n//                             <IconButton\r\n//                                 onClick={() => {\r\n//                                     setViewOrder({\r\n//                                         orderDetails: row,\r\n//                                         orderProducts: row?.Products_List ? row?.Products_List : [],\r\n//                                     });\r\n//                                 }}\r\n//                                 onFocus={(e) => {\r\n//                                     e.target.blur();\r\n//                                 }}\r\n//                                 color=\"primary\"\r\n//                                 size=\"small\"\r\n//                             >\r\n//                                 <Visibility className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Tooltip title=\"Edit\">\r\n//                             <IconButton\r\n//                                 onClick={() => {\r\n//                                     switchScreen();\r\n//                                     setOrderInfo({ ...row, isEdit: true });\r\n//                                 }}\r\n//                                 size=\"small\"\r\n//                             >\r\n//                                 <Edit className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Tooltip title=\"Delete\">\r\n//                             <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n//                                 <Delete className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                     </>\r\n//                 );\r\n//             },\r\n//         },\r\n//     ];\r\n\r\n//     const ExpendableComponent = ({ row }) => {\r\n//         return (\r\n//             <>\r\n//                 <table className=\"table\">\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Branch</td>\r\n//                             <td className=\"border p-2\">{row.Branch_Name}</td>\r\n//                             <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n//                             <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n//                             <td className=\"border p-2 bg-light\">Round off</td>\r\n//                             <td className=\"border p-2\">{row.Round_off}</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n//                             <td className=\"border p-2\">\r\n//                                 {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n//                                 {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n//                             </td>\r\n//                             <td className=\"border p-2 bg-light\">Tax Type</td>\r\n//                             <td className=\"border p-2\">\r\n//                                 {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n//                                 {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n//                             </td>\r\n//                             <td className=\"border p-2 bg-light\">Sales Person</td>\r\n//                             <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Narration</td>\r\n//                             <td className=\"border p-2\" colSpan={5}>\r\n//                                 {row.Narration}\r\n//                             </td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//             </>\r\n//         );\r\n//     };\r\n\r\n//     const switchScreen = () => {\r\n//         setScreen(!screen);\r\n//         setOrderInfo({});\r\n//         setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n//     };\r\n\r\n//     const closeDialog = () => {\r\n//         setDialog({\r\n//             ...dialog,\r\n//             filters: false,\r\n//             orderDetails: false,\r\n//         });\r\n//         setOrderInfo({});\r\n//         setDeleteConfirm(false);\r\n//     };\r\n\r\n//     const confirmData = async () => {\r\n//         if (!itemTodelete) return;\r\n\r\n//         try {\r\n//             const data = await fetchLink({\r\n//                 address: \"delivery/deliveryOrder\",\r\n//                 method: \"DELETE\",\r\n//                 bodyData: {\r\n//                     Order_Id: itemTodelete.So_No,\r\n//                     Do_Id: itemTodelete.Do_Id,\r\n//                 },\r\n//             });\r\n\r\n//             if (data.success) {\r\n//                 toast.success(\"Delivery Deleted successfully\");\r\n\r\n//                 triggerReload();\r\n//                 setDeleteConfirm(false);\r\n\r\n//                 setPageLoad((prev) => !prev);\r\n//                 setIsDeliveryDetailsVisible(false);\r\n//             } else {\r\n//                 toast.error(data?.message || \"Deletion failed\");\r\n//             }\r\n//             // throw error\r\n//         } catch (error) {\r\n//             toast.error(\"An error occurred while deleting.\", error);\r\n//         } finally {\r\n//             setDeleteConfirm(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <Card>\r\n//                 <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n//                     <h6 className=\"fa-18 m-0 p-0\">\r\n//                         {screen\r\n//                             ? \"Delivery Orders\"\r\n//                             : isValidObject(orderInfo)\r\n//                                 ? \"Modify Delivery Order\"\r\n//                                 : \"\"}\r\n//                     </h6>\r\n//                     <span>\r\n//                         {screen && (\r\n//                             <Tooltip title=\"Filters\">\r\n//                                 <IconButton\r\n//                                     size=\"small\"\r\n//                                     onClick={() => setDialog({ ...dialog, filters: true })}\r\n//                                 >\r\n//                                     <FilterAlt />\r\n//                                 </IconButton>\r\n//                             </Tooltip>\r\n//                         )}\r\n\r\n//                         {screen && (\r\n//                             <Switch\r\n//                                 checked={!screen}\r\n//                                 onChange={onToggle}\r\n//                                 label={\"Delivery Details\"}\r\n//                                 inputProps={{ \"aria-label\": \"controlled\" }}\r\n//                             />\r\n//                         )}\r\n//                     </span>\r\n//                 </div>\r\n\r\n//                 <CardContent className=\"p-0 \">\r\n//                     {screen ? (\r\n//                         <FilterableTable\r\n//                             dataArray={saleOrders}\r\n//                             columns={saleOrderColumn}\r\n//                             // EnableSerialNumber={true}\r\n//                             isExpendable={true}\r\n//                             tableMaxHeight={550}\r\n//                             expandableComp={ExpendableComponent}\r\n//                         />\r\n//                     ) : (\r\n//                         <NewDeliveryOrder\r\n//                             editValues={orderInfo}\r\n//                             loadingOn={loadingOn}\r\n//                             loadingOff={loadingOff}\r\n//                             reload={() => {\r\n//                                 setScreen((pre) => !pre);\r\n//                             }}\r\n//                             switchScreen={switchScreen}\r\n//                         />\r\n//                     )}\r\n//                 </CardContent>\r\n//             </Card>\r\n\r\n//             {Object.keys(viewOrder).length > 0 && (\r\n//                 <DeliveryInvoiceTemplate\r\n//                     orderDetails={viewOrder?.orderDetails}\r\n//                     orderProducts={viewOrder?.orderProducts}\r\n//                     download={true}\r\n//                     actionOpen={true}\r\n//                     clearDetails={() => setViewOrder({})}\r\n//                     TitleText={\"Delivery Order\"}\r\n//                 />\r\n//             )}\r\n\r\n//             <Dialog open={deleteConfirm} fullWidth maxWidth=\"sm\">\r\n//                 <DialogTitle>Delete</DialogTitle>\r\n//                 <DialogContent>\r\n//                     <div>Are You Want to Delete Delivery Details</div>\r\n//                 </DialogContent>\r\n//                 <DialogActions>\r\n//                     <Button onClick={closeDialog}>close</Button>\r\n//                     <Button onClick={confirmData}>Delete</Button>\r\n//                 </DialogActions>\r\n//             </Dialog>\r\n\r\n//             <Dialog\r\n//                 open={dialog.filters}\r\n//                 onClose={closeDialog}\r\n//                 fullWidth\r\n//                 maxWidth=\"sm\"\r\n//             >\r\n//                 <DialogTitle>Filters</DialogTitle>\r\n//                 <DialogContent>\r\n//                     <div className=\"table-responsive pb-4\">\r\n//                         <table className=\"table\">\r\n//                             <tbody>\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Retailer_Id,\r\n//                                                 label: filters?.RetailerGet,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Retailer_Id: e.value,\r\n//                                                     RetailerGet: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...retailers.map((obj) => ({\r\n//                                                     value: obj?.Retailer_Id,\r\n//                                                     label: obj?.Retailer_Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Retailer Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Delivery Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Delivery_Person_Id,\r\n//                                                 label: filters?.Delivery_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Delivery_Person_Id: e.value,\r\n//                                                     Delivery_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...deliveryPerson.map((obj) => ({\r\n//                                                     value: obj?.User_Id,\r\n//                                                     label: obj?.UserGet,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n//                                 {/* <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Sales_Person_Id,\r\n//                                                 label: filters?.Sales_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Sales_Person_Id: e.value,\r\n//                                                     Sales_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...salesPerson.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr> */}\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Sales_Person_Id,\r\n//                                                 label: filters?.Sales_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Sales_Person_Id: e.value,\r\n//                                                     Sales_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...salesPerson.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={{\r\n//                                                 ...customSelectStyles,\r\n//                                                 menu: (provided) => ({\r\n//                                                     ...provided,\r\n//                                                     zIndex: 9999,\r\n//                                                 }),\r\n//                                             }}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Sales Person Name\"}\r\n//                                             menuPortalTarget={document.body}\r\n//                                             menuPosition=\"fixed\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Created By</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Created_by,\r\n//                                                 label: filters?.CreatedByGet,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Created_by: e.value,\r\n//                                                     CreatedByGet: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...users.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n//                                     <td>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             value={filters.Fromdate}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({ ...filters, Fromdate: e.target.value })\r\n//                                             }\r\n//                                             className=\"cus-inpt\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n//                                     <td>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             value={filters.Todate}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({ ...filters, Todate: e.target.value })\r\n//                                             }\r\n//                                             className=\"cus-inpt\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </DialogContent>\r\n//                 <DialogActions>\r\n//                     <Button onClick={closeDialog}>close</Button>\r\n//                 </DialogActions>\r\n//             </Dialog>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default DeliveryDetailsList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Dialog,\r\n    Tooltip,\r\n    IconButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Switch,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport {\r\n    getPreviousDate,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidObject,\r\n} from \"../../../Components/functions\";\r\nimport { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\";\r\n\r\nconst DeliveryDetailsList = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    onToggle,\r\n    reload,\r\n    triggerReload,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n    const [itemTodelete, setItemToDelete] = useState({});\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] =\r\n        useState(false);\r\n    const [deliveryPerson, setDeliveryPerson] = useState([]);\r\n\r\n    // filters state (applied filters)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: \"\",\r\n        RetailerGet: \"ALL\",\r\n        Created_by: \"\",\r\n        CreatedByGet: \"ALL\",\r\n        Delivery_Person_Id: \"\",\r\n        Delivery_Person_Name: \"ALL\",\r\n        Sales_Person_Id: \"\",\r\n        Sales_Person_Name: \"ALL\",\r\n        Cancel_status: 0,\r\n    });\r\n\r\n    // temp filters (used in dialog before applying)\r\n    const [tempFilters, setTempFilters] = useState(filters);\r\n\r\n    const [pageLoad, setPageLoad] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    if (loadingOn) loadingOn();\r\n\r\n    fetchLink({\r\n        address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`,\r\n    })\r\n        .then((data) => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data);\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            console.error(\"Error fetching delivery orders:\", e);\r\n        })\r\n        .finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n}, [filters, pageLoad]);\r\n\r\n    // fetch dropdown data\r\n    useEffect(() => {\r\n        fetchLink({ address: `dataEntry/costCenter` })\r\n            .then((data) => data.success && setDeliveryPerson(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setRetailers(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setSalePerson(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/user/dropDown?Company_id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setUsers(data.data))\r\n            .catch((e) => console.error(e));\r\n    }, []);\r\n\r\n    const openDeleteDialog = (itemData) => {\r\n        setItemToDelete({ So_No: itemData.So_No, Do_Id: itemData.Do_Id });\r\n        setDeleteConfirm(true);\r\n    };\r\n\r\n    // const saleOrderColumn = [\r\n    //     { Field_Name: \"Do_Id\", ColumnHeader: \"Delivery ID\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"So_No\", ColumnHeader: \"Sale Order ID\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"Do_Inv_No\", ColumnHeader: \"Do_Inv_No\", Fied_Data: \"string\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Retailer_Name\", ColumnHeader: \"Customer\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"SalesDate\", ColumnHeader: \"Sale Order Date\", Fied_Data: \"date\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Do_Date\", ColumnHeader: \"Delivery Date\", Fied_Data: \"date\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Before_Tax\", ColumnHeader: \"Before Tax\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Tax\", ColumnHeader: \"Tax\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Invoice_value\", ColumnHeader: \"Invoice Value\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"DeliveryStatusName\", ColumnHeader: \"Delivery Status\", Fied_Data: \"string\", isVisible: 1, align: \"center\" },\r\n    //     {\r\n    //         Field_Name: \"Action\",\r\n    //         isVisible: 1,\r\n    //         isCustomCell: true,\r\n    //         Cell: ({ row }) => (\r\n    //             <>\r\n    //                 <Tooltip title=\"View Order\">\r\n    //                     <IconButton\r\n    //                         onClick={() => {\r\n    //                             setViewOrder({\r\n    //                                 orderDetails: row,\r\n    //                                 orderProducts: row?.Products_List ? row?.Products_List : [],\r\n    //                             });\r\n    //                         }}\r\n    //                         onFocus={(e) => e.target.blur()}\r\n    //                         color=\"primary\"\r\n    //                         size=\"small\"\r\n    //                     >\r\n    //                         <Visibility className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //                 <Tooltip title=\"Edit\">\r\n    //                     <IconButton\r\n    //                         onClick={() => {\r\n    //                             switchScreen();\r\n    //                             setOrderInfo({ ...row, isEdit: true });\r\n    //                         }}\r\n    //                         size=\"small\"\r\n    //                     >\r\n    //                         <Edit className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //                 <Tooltip title=\"Delete\">\r\n    //                     <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n    //                         <Delete className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //             </>\r\n    //         ),\r\n    //     },\r\n    // ];\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: \"Do_Id\",\r\n            ColumnHeader: \"Delivery ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"So_No\",\r\n            ColumnHeader: \"Sale Order ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Do_Inv_No\",\r\n            ColumnHeader: \"Do_Inv_No \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Retailer_Name\",\r\n            ColumnHeader: \"Customer\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"SalesDate\",\r\n            ColumnHeader: \"Sale Order Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Do_Date\",\r\n            ColumnHeader: \"Delivery Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Total_Before_Tax\",\r\n            ColumnHeader: \"Before Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Tax\",\r\n            ColumnHeader: \"Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Invoice_value\",\r\n            ColumnHeader: \"Invoice Value\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"DeliveryStatusName\",\r\n            ColumnHeader: \"Delivery Status \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Action\",\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title=\"View Order\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    });\r\n                                }}\r\n                                onFocus={(e) => {\r\n                                    e.target.blur();\r\n                                }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const ExpendableComponent = ({ row }) => (\r\n        <table className=\"table\">\r\n            <tbody>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Branch</td>\r\n                    <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                    <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                    <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                    <td className=\"border p-2 bg-light\">Round off</td>\r\n                    <td className=\"border p-2\">{row.Round_off}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                    <td className=\"border p-2\">\r\n                        {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n                        {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n                    </td>\r\n                    <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                    <td className=\"border p-2\">\r\n                        {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n                        {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n                    </td>\r\n                    <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                    <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Narration</td>\r\n                    <td className=\"border p-2\" colSpan={5}>\r\n                        {row.Narration}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen);\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog({ ...dialog, filters: false, orderDetails: false });\r\n        setOrderInfo({});\r\n        setDeleteConfirm(false);\r\n    };\r\n\r\n    const confirmData = async () => {\r\n        if (!itemTodelete) return;\r\n        try {\r\n            const data = await fetchLink({\r\n                address: \"delivery/deliveryOrder\",\r\n                method: \"DELETE\",\r\n                bodyData: {\r\n                    Order_Id: itemTodelete.So_No,\r\n                    Do_Id: itemTodelete.Do_Id,\r\n                },\r\n            });\r\n            if (data.success) {\r\n                toast.success(\"Delivery Deleted successfully\");\r\n                triggerReload();\r\n                setDeleteConfirm(false);\r\n                setPageLoad((prev) => !prev);\r\n                setIsDeliveryDetailsVisible(false);\r\n            } else {\r\n                toast.error(data?.message || \"Deletion failed\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"An error occurred while deleting.\", error);\r\n        } finally {\r\n            setDeleteConfirm(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">\r\n                        {screen\r\n                            ? \"Delivery Orders\"\r\n                            : isValidObject(orderInfo)\r\n                                ? \"Modify Delivery Order\"\r\n                                : \"\"}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        {screen && (\r\n                            <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={\"Delivery Details\"}\r\n                                inputProps={{ \"aria-label\": \"controlled\" }}\r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen((pre) => !pre);\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={\"Delivery Order\"}\r\n                />\r\n            )}\r\n\r\n            {/* Delete Confirmation Dialog */}\r\n            <Dialog open={deleteConfirm} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <div>Are You Want to Delete Delivery Details</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>Close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Filters Dialog */}\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Retailer_Id,\r\n                                                label: tempFilters?.RetailerGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Retailer_Id: e.value,\r\n                                                    RetailerGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...retailers.map((obj) => ({\r\n                                                    value: obj?.Retailer_Id,\r\n                                                    label: obj?.Retailer_Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Delivery_Person_Id,\r\n                                                label: tempFilters?.Delivery_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Delivery_Person_Id: e.value,\r\n                                                    Delivery_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...deliveryPerson.map((obj) => ({\r\n                                                    value: obj?.User_Id,\r\n                                                    label: obj?.UserGet,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Sales_Person_Id,\r\n                                                label: tempFilters?.Sales_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Sales_Person_Id: e.value,\r\n                                                    Sales_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...salesPerson.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={{\r\n                                                ...customSelectStyles,\r\n                                                menu: (provided) => ({\r\n                                                    ...provided,\r\n                                                    zIndex: 9999,\r\n                                                }),\r\n                                            }}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            menuPosition=\"fixed\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Created_by,\r\n                                                label: tempFilters?.CreatedByGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Created_by: e.value,\r\n                                                    CreatedByGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...users.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Created By\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={tempFilters.Fromdate}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({ ...tempFilters, Fromdate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={tempFilters.Todate}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({ ...tempFilters, Todate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>Close</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            setFilters(tempFilters);\r\n                            setDialog({ ...dialog, filters: false });\r\n                        }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeliveryDetailsList;\r\n\r\n\r\n\r\n\r\n"],"names":["convertedStatus","id","label","color","dbStatus","taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","_ref","orderDetails","orderProducts","download","actionOpen","clearDetails","children","TitleText","storage","JSON","parse","localStorage","getItem","open","setOpen","useState","retailerInfo","setRetailerInfo","companyInfo","setCompanyInfo","printRef","useRef","isExclusiveBill","isEqualNumber","GST_Inclusive","isInclusive","isNotTaxableBill","IS_IGST","useEffect","fetchLink","address","concat","Company_id","then","data","success","catch","e","console","error","Retailer_Id","handleClose","includedProducts","filter","orderProduct","isGraterNumber","Bill_Qty","totalValueBeforeTax","reduce","acc","item","itemRate","Item_Rate","billQty","parseInt","TotalValue","Multiplication","gstPercentage","Igst","Addition","Sgst","Cgst","itemTax","basePrice","Subraction","TotalTax","handlePrint","useReactToPrint","content","current","extraDetails","labelOne","dataOne","So_Id","labelTwo","dataTwo","LocalDate","So_Date","TaxData","HSNindex","findIndex","obj","hsnCode","HSN_Code","Taxable_Amount","Cgst_Amo","Sgst_Amo","Igst_Amo","prev","newValue","_objectSpread","taxableValue","cgst","sgst","igst","totalTax","Number","newEntry","cgstPercentage","sgstPercentage","igstPercentage","_jsxs","_Fragment","_jsx","onClick","handleOpen","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","ref","className","Company_Name","Company_Address","Region","Pincode","Gst_Number","State","Retailer_Name","Mobile_No","Reatailer_Address","Reatailer_City","PinCode","Gstno","StateGet","map","detail","index","colSpan","o","i","_ref2","Igst_P","quantity","Product_Name","NumberFormat","UOM","rowSpan","numberToWords","Total_Invoice_value","IGST_Total","CSGT_Total","SGST_Total","Round_off","style","verticalAlign","sum","DialogActions","Button","startIcon","Close","variant","Download","findProductDetails","_arr$find","productid","find","Product_Id","_productDetails$Produ","_productDetails$Produ2","_productDetails$Produ3","_productDetails$Produ4","editValues","loadingOn","loadingOff","reload","switchScreen","editOn","baseData","setBaseData","products","branch","retailers","voucherType","uom","staff","staffType","salesPerson","brand","setRetailers","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","setVoucherType","setBranch","initialValue","Company_Id","Do_Date","ISOString","VoucherType","Delivery_Status","Delivery_Person_Id","Payment_Ref_No","Delivery_Person_Name","Payment_Mode","Payment_Status","Branch_Id","BranchId","Narration","Created_by","UserId","Product_Array","So_No","productInitialDetails","Item_Id","ItemName","Units","Product","Group","GroupID","Brand","BrandID","Amount","setOrderDetails","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","deliveryPerson","_editValues$Products_","isValidObject","pre","_editValues$Do_Date","Do_Id","Voucher_Type","Products_List","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Unit_Id","Cgst_P","Sgst_P","Gst_P","Latitude","Longitude","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","toast","warn","fetchLocation","uniqueBrand","getUniqueData","product","productMaster","isTaxable","gstInfo","calculateGSTDetails","without_tax","cgst_amount","sgst_amount","igst_amount","Final_Amo","with_tax","Tax_Rate","cgst_per","sgst_per","igst_per","Taxble","totals","taxableAmount","finalAmount","calculateTotals","roundOff","Math","round","closeAddProduct","Telephone_Number","type","value","onChange","target","disabled","vou","ind","Vocher_Type_Id","BranchName","Select","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","Name","sx","ml","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref3","_row$Product","row","ColumnHeader","isVisible","_ref4","_row$Product2","_ref5","_row$Units","align","Field_Name","Fied_Data","_ref6","_ref7","_row$Product3","taxAmount","_ref8","_ref9","IconButton","latestUOM_Id","latestUnitName","Unit_Name","Pro_Group","Product_Group","Brand_Name","size","Edit","Delete","EnableSerialNumber","CellSize","disablePagination","toFixed","Clear","postSaleOrder","method","bodyData","message","finally","Save","onSubmit","preventDefault","handleProductInputChange","productId","rate","UOM_Id","productIndex","productData","slice","some","grp","push","RequiredStar","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","UOM_Name","readOnly","ClearAll","pageSize","setPageSize","a4Styles","width","minHeight","padding","backgroundColor","fontSize","boxSizing","boxShadow","fontFamily","lineHeight","display","flexDirection","flexGrow","margin","a5Styles","pageStyle","Do_Inv_No","alignItems","overflow","maxHeight","textAlign","fontWeight","marginTop","zIndex","justifyContent","height","productChunks","chunk","chunkIndex","React","globalIndex","pageBreakAfter","visibility","border","px","checked","handleToggle","htmlFor","gap","onToggle","triggerReload","saleOrders","setSaleOrders","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","setDeliveryPerson","filters","setFilters","Fromdate","getPreviousDate","Todate","RetailerGet","CreatedByGet","Sales_Person_Id","Sales_Person_Name","Cancel_status","tempFilters","setTempFilters","pageLoad","setPageLoad","dialog","setDialog","saleOrderColumn","Tooltip","title","onFocus","blur","Visibility","openDeleteDialog","itemData","closeDialog","Card","FilterAlt","Switch","inputProps","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","NewDeliveryOrder","Object","keys","DeliveryInvoiceTemplate","Order_Id","User_Id","UserGet","menu","provided","menuPortalTarget","document","body","menuPosition"],"sourceRoot":""}