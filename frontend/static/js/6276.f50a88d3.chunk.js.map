{"version":3,"file":"static/js/6276.f50a88d3.chunk.js","mappings":"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","sources":["Pages/Journal/JournalMaster/variable.js","../node_modules/@mui/icons-material/esm/ClearAll.js","Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","Components/tablecolumn.js","Pages/Journal/JournalMaster/journalList.jsx","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const journalGeneralInfoIV = {\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    Year_Id: '',\r\n    VoucherType: '',\r\n    VoucherTypeGet: '',\r\n    JournalNo: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: ISOString(),\r\n    BranchId: '',\r\n    Narration: '',\r\n    JournalStatus: 1,\r\n    CreatedBy: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    CreatedAt: '',\r\n    UpdatedAt: '',\r\n    AlterId: '',\r\n}\r\n\r\nexport const journalEntriesInfoIV = {\r\n    LineId: '',\r\n    LineNum: '',\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: '',\r\n    Acc_Id: null,\r\n    AccountGet: '',\r\n    isSundryParty: 0,\r\n    DrCr: '',\r\n    Amount: 0,\r\n    Remarks: '',\r\n    Entries: [],\r\n}\r\n\r\nexport const journalBillReferenceIV = {\r\n    autoGenId: '',\r\n    LineId: '',\r\n    LineNum: '',\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: '',\r\n    Acc_Id: '',\r\n    DrCr: '',\r\n    RefId: '',\r\n    RefNo: '',\r\n    RefType: '',\r\n    BillRefNo: '',\r\n    Amount: '',\r\n}\r\n\r\nexport const journalStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\"\r\nimport FilterableTable, { createCol, formatString } from \"../../../Components/filterableTable2\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, checkIsNumber, getSessionFiltersByPageId, isEqualNumber, ISOString, NumberFormat, reactSelectFilterLogic, setSessionFilters, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll, Edit, FilterAlt, Search } from \"@mui/icons-material\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from \"react-select\";\r\nimport { journalStatus } from \"./variable\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst JournalList = ({ loadingOn, loadingOff, pageID, AddRights, EditRights }) => {\r\n    const nav = useNavigate();\r\n    // const [dataArray, setDataArray] = useState([]);\r\n    const [generalInfo, setGeneralInfo] = useState([]);\r\n    const [entriesInfo, setEntriesInfo] = useState([]);\r\n    const [billReferenceInfo, setBillReferenceInfo] = useState([]);\r\n\r\n    const sessionValue = sessionStorage.getItem('filterValues');\r\n\r\n    const defaultFilters = {\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        voucherType_Filter: { label: 'ALL', value: '' },\r\n        debit_accounts_Filter: { label: 'ALL', value: '' },\r\n        credit_accounts_Filter: { label: 'ALL', value: '' },\r\n        created_by_Filter: { label: 'ALL', value: '' },\r\n        journalStatus: '',\r\n    };\r\n\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFilters,\r\n        filterDialog: false,\r\n    });\r\n\r\n    const [filterDropDown, setFilterDropDown] = useState({\r\n        voucherType: [],\r\n        debit_accounts: [],\r\n        credit_accounts: [],\r\n        created_by: [],\r\n    })\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            journalStatus = defaultFilters.journalStatus,\r\n        } = sessionFilterValues;\r\n\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            Fromdate: Fromdate,\r\n            Todate: Todate,\r\n            voucherType_Filter,\r\n            debit_accounts_Filter,\r\n            credit_accounts_Filter,\r\n            created_by_Filter,\r\n            journalStatus,\r\n        }));\r\n\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            journalStatus = defaultFilters.journalStatus\r\n        } = sessionFilterValues;\r\n\r\n        fetchLink({\r\n            address: `journal/journalMaster?\r\n                Fromdate=${Fromdate}&\r\n                Todate=${Todate}&\r\n                voucher=${voucherType_Filter?.value || ''}&\r\n                debit=${debit_accounts_Filter?.value || ''}&\r\n                credit=${credit_accounts_Filter?.value || ''}&\r\n                createdBy=${created_by_Filter?.value || ''}&\r\n                status=${journalStatus}`,\r\n            loadingOff, loadingOn\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setGeneralInfo(toArray(data.others?.generalInfo));\r\n                setEntriesInfo(toArray(data.others?.entriesInfo));\r\n                setBillReferenceInfo(toArray(data.others?.billReferencesInfo));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `journal/filtersValues`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilterDropDown(pre => ({\r\n                    ...pre,\r\n                    voucherType: toArray(data?.others?.voucherType),\r\n                    debit_accounts: toArray(data?.others?.debit_accounts),\r\n                    credit_accounts: toArray(data?.others?.credit_accounts),\r\n                    created_by: toArray(data?.others?.created_by)\r\n                }))\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const reportData = useMemo(() => {\r\n        let transformedData = [];\r\n\r\n        generalInfo.forEach((journal, jourInd) => {\r\n            const billRefData = billReferenceInfo.filter(item => item.JournalAutoId === journal.JournalAutoId);\r\n\r\n            const debitSide = entriesInfo.filter(item => (\r\n                item.JournalAutoId === journal.JournalAutoId\r\n                && item.DrCr === 'Dr'\r\n            )).map(entry => ({\r\n                ...entry,\r\n                Entries: billRefData.filter(bill => (\r\n                    bill.LineId === entry.LineId\r\n                    && bill.DrCr === 'Dr'\r\n                    && isEqualNumber(bill.Acc_Id, entry.Acc_Id)\r\n                ))\r\n            }));\r\n\r\n            const creditSide = entriesInfo.filter(item => (\r\n                item.JournalAutoId === journal.JournalAutoId\r\n                && item.DrCr === 'Cr'\r\n            )).map(entry => ({\r\n                ...entry,\r\n                Entries: billRefData.filter(bill => (\r\n                    bill.LineId === entry.LineId\r\n                    && bill.DrCr === 'Cr'\r\n                    && isEqualNumber(bill.Acc_Id, entry.Acc_Id)\r\n                ))\r\n            }));\r\n\r\n            const maxRows = Math.max(debitSide.length, creditSide.length);\r\n            const sNo = ++jourInd;\r\n            const statusGet = journalStatus.find(sts => isEqualNumber(sts.value, journal.JournalStatus))?.label || '';\r\n\r\n            transformedData.push({\r\n                sno: sNo,\r\n                date: ISOString(journal.JournalDate),\r\n                voucherNo: journal.JournalVoucherNo,\r\n                debitAcc: '',\r\n                creditAcc: '',\r\n                debitAmount: debitSide.reduce((acc, orders) => Addition(acc, orders?.Amount), 0),\r\n                creditAmount: creditSide.reduce((acc, orders) => Addition(acc, orders?.Amount), 0),\r\n                voucherType: journal.VoucherTypeGet,\r\n                status: statusGet,\r\n                branch: journal.BranchGet,\r\n                createdBy: journal.CreatedByGet,\r\n                journalObject: { ...journal, Entries: [...debitSide, ...creditSide], billReferenceInfo: billRefData }\r\n            });\r\n\r\n            for (let i = 0; i < maxRows; i++) {\r\n                transformedData.push({\r\n                    sno: sNo + '.' + (i + 1),\r\n                    date: '',\r\n                    voucherNo: '',\r\n                    debitAcc: debitSide[i]?.AccountNameGet || '',\r\n                    creditAcc: creditSide[i]?.AccountNameGet || '',\r\n                    debitAmount: checkIsNumber(debitSide[i]?.Amount) ? NumberFormat(debitSide[i]?.Amount) : '',\r\n                    creditAmount: checkIsNumber(creditSide[i]?.Amount) ? NumberFormat(creditSide[i]?.Amount) : '',\r\n                    debitBillReference: toArray(debitSide[i]?.Entries),\r\n                    creditBillReference: toArray(creditSide[i]?.Entries),\r\n                    voucherType: '',\r\n                    status: '',\r\n                    branch: '',\r\n                    createdBy: '',\r\n                });\r\n            }\r\n        });\r\n\r\n        return transformedData;\r\n    }, [generalInfo, entriesInfo])\r\n\r\n    const JournalTotal = useMemo(() => entriesInfo.filter(\r\n        item => item.DrCr === 'Dr'\r\n    ).reduce(\r\n        (acc, orders) => Addition(acc, orders?.Amount), 0\r\n    ), [entriesInfo]);\r\n\r\n    const closeDialog = () => setFilters(pre => ({ ...pre, filterDialog: false }));\r\n\r\n    return (\r\n        <>\r\n\r\n            <FilterableTable\r\n                title='Journal List'\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                ButtonArea={\r\n                    <>\r\n\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => nav(\"create\")}\r\n                                variant=\"outlined\"\r\n                            >create</Button>\r\n                        )}\r\n\r\n                        <IconButton\r\n                            onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                            size=\"small\" className=\"mx-1\"\r\n                        ><FilterAlt className=\"fa-20\" /></IconButton>\r\n\r\n                        <span className=\"bg-light text-light fa-11 px-1 shadow-sm py-1 rounded-3 mx-1\">\r\n                            {toNumber(JournalTotal) > 0 && <h6 className=\"m-0 text-end text-muted px-3\">Total: {NumberFormat(JournalTotal)}</h6>}\r\n                        </span>\r\n                    </>\r\n                }\r\n                dataArray={reportData}\r\n                columns={[...[\r\n                    { col: 'sno', type: 'string', title: 'Sno' },\r\n                    { col: 'date', type: 'date', title: 'Date' },\r\n                    { col: 'voucherNo', type: 'string', title: 'VoucheNo' },\r\n                    { col: 'debitAcc', type: 'string', title: 'Debit' },\r\n                    { col: 'debitAmount', type: 'string', title: 'Amount' },\r\n                    { col: 'creditAcc', type: 'string', title: 'Credit' },\r\n                    { col: 'creditAmount', type: 'string', title: 'Amount' },\r\n                    { col: 'voucherType', type: 'string', title: 'Voucher' },\r\n                    { col: 'status', type: 'string', title: 'Status' },\r\n                ].map(cel => ({\r\n                    isVisible: 1,\r\n                    ColumnHeader: cel.title,\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => formatString(row[cel.col], cel.type),\r\n                    tdClass: ({ row }) => row?.voucherNo ? 'fw-bold bg-light' : ''\r\n                })),\r\n                {\r\n                    isVisible: 1,\r\n                    ColumnHeader: 'Action',\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => {\r\n                        return (row?.journalObject && EditRights) && (\r\n                            <>\r\n                                <IconButton size=\"small\" onClick={() => {\r\n                                    // console.log(row)\r\n                                    nav('create', {\r\n                                        state: {\r\n                                            ...row.journalObject,\r\n                                        }\r\n                                    })\r\n                                }}>\r\n                                    <Edit className=\"fa-20\" />\r\n                                </IconButton>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n                ]}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                {/* from date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* to date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* debit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Debit Account</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.debit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, debit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.debit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Debit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            filterOption={reactSelectFilterLogic}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* credit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Credit Account </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.credit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, credit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.credit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Credit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            filterOption={reactSelectFilterLogic}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Voucher Type */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher Type </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.voucherType_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, voucherType_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.voucherType\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Voucher Type\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            filterOption={reactSelectFilterLogic}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* receipt status */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Receipt Status</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.journalStatus}\r\n                                            onChange={e => setFilters({ ...filters, journalStatus: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={''}>All</option>\r\n                                            {journalStatus.map((sts, ind) => (\r\n                                                <option value={sts.value} key={ind}>{sts.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* created by */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.created_by_Filter}\r\n                                            onChange={(e) => setFilters(pre => ({ ...pre, created_by_Filter: e }))}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.created_by\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            menuPortalTarget={document.body}\r\n                                            filterOption={reactSelectFilterLogic}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex align-items-center justify-content-between\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                            setFilters(pre => ({\r\n                                ...pre,\r\n                                ...defaultFilters\r\n                            }))\r\n                        }}\r\n                        startIcon={<ClearAll />}\r\n                    >clear</Button>\r\n                    <span>\r\n                        <Button onClick={closeDialog}>close</Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                setSessionFilters({\r\n                                    Fromdate: filters?.Fromdate,\r\n                                    Todate: filters.Todate,\r\n                                    pageID,\r\n                                    voucherType_Filter: filters.voucherType_Filter,\r\n                                    debit_accounts_Filter: filters.debit_accounts_Filter,\r\n                                    credit_accounts_Filter: filters.credit_accounts_Filter,\r\n                                    created_by_Filter: filters.created_by_Filter,\r\n                                    journalStatus: filters.journalStatus,\r\n                                    journalStatus: filters.journalStatus,\r\n                                });\r\n                            }}\r\n                            startIcon={<Search />}\r\n                            variant=\"contained\"\r\n                        >Search</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default JournalList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["userDetails","getSessionUser","user","journalGeneralInfoIV","JournalAutoId","JournalId","Year_Id","VoucherType","VoucherTypeGet","JournalNo","JournalVoucherNo","JournalDate","ISOString","BranchId","Narration","JournalStatus","CreatedBy","checkIsNumber","UserId","CreatedAt","UpdatedAt","AlterId","journalEntriesInfoIV","LineId","LineNum","Acc_Id","AccountGet","isSundryParty","DrCr","Amount","Remarks","Entries","journalBillReferenceIV","autoGenId","RefId","RefNo","RefType","BillRefNo","journalStatus","label","value","createSvgIcon","_jsx","d","preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","style","width","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","loadingOn","loadingOff","pageID","AddRights","EditRights","nav","useNavigate","generalInfo","setGeneralInfo","entriesInfo","setEntriesInfo","billReferenceInfo","setBillReferenceInfo","sessionValue","sessionStorage","getItem","defaultFilters","Fromdate","Todate","voucherType_Filter","debit_accounts_Filter","credit_accounts_Filter","created_by_Filter","filters","setFilters","filterDialog","filterDropDown","setFilterDropDown","voucherType","debit_accounts","credit_accounts","created_by","useEffect","sessionFilterValues","getSessionFiltersByPageId","fetchLink","then","_data$others","_data$others2","_data$others3","success","toArray","others","billReferencesInfo","catch","_data$others4","_data$others5","_data$others6","_data$others7","reportData","useMemo","transformedData","journal","jourInd","_journalStatus$find","billRefData","item","debitSide","entry","bill","creditSide","maxRows","Math","max","sNo","statusGet","sts","push","sno","date","voucherNo","debitAcc","creditAcc","debitAmount","reduce","acc","orders","Addition","creditAmount","status","branch","BranchGet","createdBy","CreatedByGet","journalObject","_debitSide$i","_creditSide$i","_debitSide$i2","_debitSide$i3","_creditSide$i2","_creditSide$i3","_debitSide$i4","_creditSide$i4","AccountNameGet","debitBillReference","creditBillReference","JournalTotal","closeDialog","Button","FilterAlt","toNumber","col","cel","Edit","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","onChange","Select","options","styles","isSearchable","placeholder","menuPortalTarget","document","filterOption","reactSelectFilterLogic","ind","DialogActions","startIcon","ClearAll","setSessionFilters","Search"],"sourceRoot":""}