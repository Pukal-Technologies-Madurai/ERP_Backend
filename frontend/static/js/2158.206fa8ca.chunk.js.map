{"version":3,"file":"static/js/2158.206fa8ca.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","Pages/Payments/PaymentMaster/variable.js","Components/tablecolumn.js","Pages/Payments/PaymentReport/paymentOutstanding.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { checkIsNumber, ISOString, storageValue, getSessionUser } from \"../../../Components/functions\";\r\n\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const paymentGeneralInfoInitialValue = {\r\n    pay_id: '',\r\n    year_id: '',\r\n    payment_voucher_type_id: '',\r\n    payment_sno: '',\r\n    payment_invoice_no: '',\r\n\r\n    payment_date: ISOString(),\r\n    pay_bill_type: 1,\r\n    is_new_ref: 0,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    transaction_type: '',\r\n    \r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n    \r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const paymentBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n    \r\n    // form values\r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_ref_number: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    PurchaseInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const paymentCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type : '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const paymentTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'VENDOR - PURCHASE INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES / OTHERS (IN-DIRECT)'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'EXPENCES - STOCK JOURNAL (DIRECT)'\r\n    },\r\n    {\r\n        value: 4,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const paymentStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n]","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { useState, useEffect } from \"react\";\r\nimport { Button, Card } from '@mui/material';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, checkIsNumber, ISOString, LocalDate, NumberFormat, onlynum, reactSelectFilterLogic, stringCompare, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { paymentGeneralInfoInitialValue } from \"../PaymentMaster/variable\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\n\r\nconst PaymentOutstanding = ({ loadingOn, loadingOff, AddRights }) => {\r\n\r\n    const [reportData, setReportData] = useState([]);\r\n    const [ledgers, setLedgers] = useState([]);\r\n    const [selectedInvoice, setSelectedInvoice] = useState([]);\r\n    const navigation = useNavigate();\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        ledger: { value: '', label: 'Select Ledger' },\r\n        refresh: false,\r\n        filterDialog: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `payment/getRetailersWhoHasBills`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setLedgers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(filters.ledger.value)) return;\r\n        setSelectedInvoice([]);\r\n\r\n        fetchLink({\r\n            address: `payment/paymentPendingInvoices?Acc_Id=${filters.ledger.value}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const repDat = toArray(data.data).map(o => ({\r\n                    ...o,\r\n                    paymentPendingAmount: Subraction(o.Total_Invoice_value, o.totalReference)\r\n                }))\r\n                setReportData(repDat);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [filters.ledger.value]);\r\n\r\n    const onSelect = (row, deleteOption) => {\r\n        setSelectedInvoice(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !stringCompare(o?.Po_Inv_No, row.Po_Inv_No));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                updateBillInfo = [...excludeCurrentValue, { ...row, newPaymentBillAmount: toNumber(row?.paymentPendingAmount) }];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (billId, value) => {\r\n        setSelectedInvoice(pre => pre.map(\r\n            bill => ({\r\n                ...bill,\r\n                newPaymentBillAmount: stringCompare(\r\n                    billId, bill.Po_Inv_No\r\n                ) ? value : bill.newPaymentBillAmount\r\n            })\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 d-flex justify-content-between align-items-center\">\r\n                    <h5>Payments Outstaing</h5>\r\n                    <div style={{ minWidth: '360px' }}>\r\n                        <Select\r\n                            value={filters?.ledger}\r\n                            onChange={(e) => setFilters(pre => ({ ...pre, ledger: e }))}\r\n                            options={[\r\n                                { value: '', label: 'ALL' },\r\n                                ...ledgers\r\n                            ]}\r\n                            styles={customSelectStyles}\r\n                            isSearchable={true}\r\n                            placeholder={\"Select Leder Name\"}\r\n                            menuPortalTarget={document.body}\r\n                            filterOption={reactSelectFilterLogic}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    navigation('/erp/payments/paymentList/create', {\r\n                        state: {\r\n                            ...paymentGeneralInfoInitialValue,\r\n                            debit_ledger: filters.ledger.value,\r\n                            debit_ledger_name: filters.ledger.label,\r\n                            debit_amount: selectedInvoice.reduce((acc, bill) => Addition(\r\n                                acc, bill?.newPaymentBillAmount\r\n                            ), 0),\r\n                            BillsDetails: selectedInvoice.map(bill => ({\r\n                                bill_id: bill.PIN_Id,\r\n                                bill_name: bill.Po_Inv_No,\r\n                                bill_ref_number: bill.bill_ref_number,\r\n                                bill_amount: bill.Total_Invoice_value,\r\n                                Debit_Amo: bill.newPaymentBillAmount,\r\n                                Credit_Amo: 0\r\n                            }))\r\n                        }\r\n                    })\r\n                }}>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered fa-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', 'Voucher-No', 'Source', 'Date', 'Total-Value', 'Closed Value', 'Outstanding', 'Make a Payment'].map(\r\n                                        (o, i) => <th key={i} className=\"fa-13\">{o}</th>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {/* total value details */}\r\n                                <tr>\r\n                                    <td colSpan={4} className=\"fw-bold bg-light text-center\">Total</td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.Total_Invoice_value\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.totalReference\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {NumberFormat(reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            Subraction(bill.Total_Invoice_value, bill.totalReference)\r\n                                        ), 0))}\r\n                                    </td>\r\n                                    <td className=\"text-primary fw-bold text-end fa-17 bg-light\">\r\n                                        {NumberFormat(selectedInvoice.reduce((acc, bill) => Addition(\r\n                                            acc, bill?.newPaymentBillAmount\r\n                                        ), 0))}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* pending payments */}\r\n                                {reportData.map((row, rowIndex) => {\r\n                                    const invIndex = selectedInvoice.findIndex(\r\n                                        bill => stringCompare(bill?.Po_Inv_No, row?.Po_Inv_No)\r\n                                    );\r\n                                    const amount = selectedInvoice[invIndex] ? selectedInvoice[invIndex]?.newPaymentBillAmount : 0;\r\n                                    const isChecked = invIndex !== -1;\r\n\r\n                                    return (\r\n                                        <tr key={rowIndex}>\r\n                                            <td>{rowIndex + 1}</td>\r\n                                            <td>{row?.Po_Inv_No}</td>\r\n                                            <td>{row?.dataSource}</td>\r\n                                            <td>{LocalDate(row?.Po_Inv_Date)}</td>\r\n                                            <td>{NumberFormat(row?.Total_Invoice_value)}</td>\r\n                                            <td>{NumberFormat(row?.totalReference)}</td>\r\n                                            <td>{NumberFormat(row?.paymentPendingAmount)}</td>\r\n                                            <td className=\"p-0 vctr text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                <div className=\"d-flex align-items-center\">\r\n\r\n                                                    <input\r\n                                                        className=\"form-check-input shadow-none pointer mx-2\"\r\n                                                        style={{ padding: '0.7em' }}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={isChecked}\r\n                                                        onChange={() => {\r\n                                                            if (isChecked) onSelect(row, true)\r\n                                                            else onSelect(row)\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                    {isChecked && (\r\n                                                        <input\r\n                                                            value={amount ? amount : ''}\r\n                                                            onInput={onlynum}\r\n                                                            required={isChecked}\r\n                                                            type=\"number\"\r\n                                                            max={toNumber(row?.paymentPendingAmount)}\r\n                                                            className=\"cus-inpt flex-grow-1 p-2 border-0 me-1\"\r\n                                                            onChange={e => onChangeAmount(row?.Po_Inv_No, e.target.value)}\r\n                                                            placeholder={isChecked ? \"Enter amount\" : ''}\r\n                                                        />\r\n                                                    )}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                                {/* nave to payment */}\r\n                                <tr>\r\n                                    <td colSpan={8} className=\"text-end\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            disabled={selectedInvoice.length === 0}\r\n                                            type=\"submit\"\r\n                                        >Create Payment</Button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </form>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentOutstanding;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","userDetails","getSessionUser","user","paymentGeneralInfoInitialValue","pay_id","year_id","payment_voucher_type_id","payment_sno","payment_invoice_no","payment_date","ISOString","pay_bill_type","is_new_ref","credit_ledger","credit_ledger_name","credit_amount","debit_ledger","debit_ledger_name","debit_amount","remarks","status","transaction_type","check_no","check_date","bank_name","bank_date","created_by","checkIsNumber","UserId","altered_by","created_on","alterd_on","paymentBillInfoInitialValue","auto_id","payment_id","payment_no","bill_type","DR_CR_Acc_Id","pay_bill_id","JournalBillType","bill_name","bill_ref_number","bill_amount","Debit_Amo","Credit_Amo","PurchaseInvoiceDate","StockJournalDate","TotalPaidAmount","PendingAmount","paymentCostingInfoInitialValue","Debit_Ledger_Id","arr_id","item_id","item_name","expence_value","itemQuantity","PaidAmount","paymentTypes","value","label","stockJournalTypes","paymentStatus","customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","_ref","loadingOn","loadingOff","AddRights","reportData","setReportData","useState","ledgers","setLedgers","selectedInvoice","setSelectedInvoice","navigation","useNavigate","filters","setFilters","Fromdate","Todate","ledger","refresh","filterDialog","useEffect","fetchLink","then","data","success","catch","e","console","error","concat","repDat","toArray","map","o","paymentPendingAmount","Subraction","Total_Invoice_value","totalReference","onSelect","row","deleteOption","pre","excludeCurrentValue","filter","stringCompare","Po_Inv_No","updateBillInfo","newPaymentBillAmount","toNumber","_Fragment","children","_jsxs","Card","minWidth","Select","onChange","options","isSearchable","placeholder","menuPortalTarget","document","body","filterOption","reactSelectFilterLogic","onSubmit","preventDefault","reduce","acc","bill","Addition","BillsDetails","bill_id","PIN_Id","i","colSpan","NumberFormat","rowIndex","_selectedInvoice$invI","invIndex","findIndex","amount","isChecked","dataSource","LocalDate","Po_Inv_Date","verticalAlign","type","checked","onInput","onlynum","required","max","onChangeAmount","billId","target","Button","disabled","length"],"sourceRoot":""}