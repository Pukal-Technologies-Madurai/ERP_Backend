{"version":3,"file":"static/js/3127.cf7cd98c.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","Pages/Tasks/taskParameters.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Button, Collapse } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\nconst TaskParametersComp = ({ isOpened, disableCollapse }) => {\r\n    const initialValue = {\r\n        Paramet_Id: '',\r\n        Paramet_Name: '',\r\n        Paramet_Data_Type: '',\r\n    }\r\n    const [parameters, setParameters] = useState([])\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(isOpened ? true : false);\r\n\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setParameters(data.data)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    const AddParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'POST',\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(CloseAddDialog)\r\n    }\r\n\r\n    const DeleteParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'DELETE',\r\n            bodyData: { Paramet_Id: inputValue.Paramet_Id }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(closeDeleteConfirmationDialog)\r\n    }\r\n\r\n    const CloseAddDialog = () => {\r\n        setAddDialog(false);\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDeleteDialog(false)\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n        const filteredResults = parameters.filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(term.toLowerCase())\r\n            );\r\n        });\r\n        setFilteredData(filteredResults);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <div className=\"flex-grow-1 mb-0\">\r\n                        {!disableCollapse && (\r\n                            <IconButton size='small' onClick={() => setOpen(!open)}>\r\n                                {open ? <ExpandLess style={{ fontSize: '18px', color: 'black' }} /> : <ExpandMore style={{ fontSize: '18px', color: 'black' }} />}\r\n                            </IconButton>\r\n                        )}\r\n                        Task Parameters\r\n                    </div>\r\n                    <button onClick={() => setAddDialog(true)} className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\">\r\n                        Create Parameter\r\n                    </button>\r\n                </div>\r\n\r\n                <Collapse in={open} unmountOnExit>\r\n\r\n                    <div className=\"card-body\" style={{ maxHeight: !disableCollapse ? '40vh' : 'auto', overflowY: 'auto' }}>\r\n\r\n                        <div className=\"row flex-row-reverse\">\r\n                            <div className=\"col-md-4 pb-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='border fa-14'>Sno</th>\r\n                                        <th className='border fa-14'>Parameter</th>\r\n                                        <th className='border fa-14'>Data Type</th>\r\n                                        {/* <th className='border fa-14'>Action</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(filteredData.length > 0 ? filteredData : filterInput === '' ? parameters : [])?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='border fa-14'>{i + 1}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Name}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Data_Type}</td>\r\n                                            {/* <td className='border fa-14'>\r\n                                                <IconButton onClick={() => openDeleteConfirmationDialog(o)}>\r\n                                                    <Delete sx={{color: 'red', fontSize: '16px'}} />\r\n                                                </IconButton>\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Collapse>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addDialog}\r\n                onClose={CloseAddDialog}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>Create Task Parameters</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    AddParameter()\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Name</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <input\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Name} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Name: e.target.value })} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Data Type</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <select\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Data_Type} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Data_Type: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Data Type</option>\r\n                                                <option value='number'>number</option>\r\n                                                <option value='text'>text</option>\r\n                                                <option value='date'>date</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={CloseAddDialog} type='button'>cancel</Button>\r\n                        <Button type='submit'>Create Parameter</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n            >\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the\r\n                    {inputValue?.Paramet_Name && <span className='text-primary px-1'>{inputValue?.Paramet_Name}</span>}\r\n                    Parameter?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} >Cancel</Button>\r\n                    <Button onClick={DeleteParameter}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskParametersComp;"],"names":["createSvgIcon","_jsx","d","_ref","_ref2","isOpened","disableCollapse","initialValue","Paramet_Id","Paramet_Name","Paramet_Data_Type","parameters","setParameters","useState","addDialog","setAddDialog","deleteDialog","setDeleteDialog","inputValue","setInputValue","reload","setReload","open","setOpen","filterInput","setFilterInput","filteredData","setFilteredData","useEffect","fetchLink","address","then","data","success","catch","e","console","error","CloseAddDialog","closeDeleteConfirmationDialog","_jsxs","_Fragment","children","className","IconButton","size","onClick","ExpandLess","style","fontSize","color","ExpandMore","Collapse","in","unmountOnExit","maxHeight","overflowY","type","value","placeholder","onChange","event","term","target","filteredResults","filter","item","Object","values","some","String","toLowerCase","includes","length","map","o","i","Dialog","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","finally","DialogContent","required","_objectSpread","disabled","DialogActions","Button","DeleteParameter"],"sourceRoot":""}