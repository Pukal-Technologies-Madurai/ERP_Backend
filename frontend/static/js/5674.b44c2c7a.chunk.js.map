{"version":3,"file":"static/js/5674.b44c2c7a.chunk.js","mappings":"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","sources":["Pages/Sales/convertedStatus.js","Components/requiredStar.jsx","Components/taxCalculator.js","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/SalesReportComponent/previewInvoice.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx"],"sourcesContent":["export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]\r\n\r\nexport const dbStatus = [\r\n    {\r\n        id: 1,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Progess',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Completed',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]","const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    isEqualNumber,\r\n    isGraterNumber,\r\n    isValidObject,\r\n    ISOString,\r\n    getUniqueData,\r\n    Multiplication,\r\n    Division,\r\n    NumberFormat,\r\n    numberToWords,\r\n    Addition,\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\n\r\nconst findProductDetails = (arr = [], productid) =>\r\n    arr.find((obj) => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({\r\n    editValues,\r\n    loadingOn,\r\n    loadingOff,\r\n    reload,\r\n    switchScreen,\r\n    editOn,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        salesPerson: [],\r\n        brand: [],\r\n    });\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: \"\",\r\n        Retailer_Id: \"\",\r\n        Retailer_Name: \"Select\",\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: \"\",\r\n        Payment_Ref_No: \"\",\r\n        Delivery_Person_Name: \"\",\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: \"\",\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    };\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: \"\",\r\n        ItemName: \"Search Item\",\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: \"\",\r\n        Units: \"\",\r\n        Product: {},\r\n        Group: \"Search Group\",\r\n        GroupID: \"\",\r\n        Brand: \"Search Brand\",\r\n        BrandID: \"\",\r\n        Amount: 0,\r\n    };\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue);\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    // const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    // const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const deliveryPerson = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails((pre) => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                toast.warn(\"Unable to fetch location. Allow location access.\");\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails((pre) => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(\r\n                editValues?.Products_List?.map((pro) => ({\r\n                    ...pro,\r\n                    Item_Id: pro.Item_Id ?? \"\",\r\n                    ItemName: pro?.Product_Name ?? \"\",\r\n                    Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                    Item_Rate: pro?.Item_Rate ?? 0,\r\n                    UOM: pro?.Unit_Id ?? \"\",\r\n                    Units: pro?.Units ?? \"\",\r\n                    Product: {\r\n                        ...pro,\r\n                        Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                        Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                        Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                        Gst_P: Addition(\r\n                            findProductDetails(products, pro.Item_Id)?.Cgst_P,\r\n                            findProductDetails(products, pro.Item_Id)?.Sgst_P\r\n                        ) ?? 0,\r\n                    },\r\n                    Group: \"Search Group\",\r\n                    GroupID: \"\",\r\n                    Brand: \"Search Brand\",\r\n                    BrandID: \"\",\r\n                    Amount: pro?.Amount ?? 0,\r\n                }))\r\n            );\r\n            setIsEdit(true);\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([]);\r\n            setIsEdit(false);\r\n        }\r\n    }, [editValues, products]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setRetailers(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProductUOM(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/products`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProducts(data.data);\r\n                    const uniqueBrand = getUniqueData(data.data, \"Brand\", [\"Brand_Name\"]);\r\n                    setProductBrand(uniqueBrand);\r\n                } else {\r\n                    setProducts([]);\r\n                    setProductBrand([]);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setCompanyInfo(data?.data[0] ? data?.data[0] : {});\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setVoucherType(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setBranch(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, [storage?.Company_id]);\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productMaster = findProductDetails(baseData.products, productId);\r\n        const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n        const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n        \r\n        const amount = Multiplication(value, rate);\r\n        const gstInfo = calculateGSTDetails(\r\n            amount,\r\n            gstPercentage,\r\n            isInclusive ? \"remove\" : \"add\"\r\n        );\r\n\r\n        const productIndex = orderProducts.findIndex(item => \r\n            isEqualNumber(item.Item_Id, productId)\r\n        );\r\n\r\n        const productData = {\r\n            Item_Id: productId,\r\n            Bill_Qty: Number(value),\r\n            Item_Rate: Number(rate),\r\n            UOM: UOM_Id,\r\n            Units: Units,\r\n            Amount: amount,\r\n            Product: obj,\r\n            Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n            Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n            Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n            Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n            Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n            Tax_Rate: gstPercentage,\r\n            Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n            Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n            Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n            Taxble: isTaxable ? 1 : 0\r\n        };\r\n\r\n        if (productIndex !== -1) {\r\n            setOrderProducts(prev => [\r\n                ...prev.slice(0, productIndex),\r\n                productData,\r\n                ...prev.slice(productIndex + 1)\r\n            ]);\r\n        } else {\r\n            setOrderProducts(prev => [...prev, productData]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre.map(product => {\r\n            const productMaster = findProductDetails(baseData.products, product.Item_Id);\r\n            const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n            const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n            \r\n            const amount = Multiplication(product.Item_Rate, product.Bill_Qty);\r\n            const gstInfo = calculateGSTDetails(\r\n                amount,\r\n                gstPercentage,\r\n                isInclusive ? \"remove\" : \"add\"\r\n            );\r\n\r\n            return {\r\n                ...product,\r\n                Amount: amount,\r\n                Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n                Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n                Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n                Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n                Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n                Tax_Rate: gstPercentage,\r\n                Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n                Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n                Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n                Taxble: isTaxable ? 1 : 0\r\n            };\r\n        }));\r\n    }, [orderDetails.GST_Inclusive, orderDetails.IS_IGST]);\r\n\r\n    const calculateTotals = (orderProducts) => {\r\n        return orderProducts.reduce((acc, product) => {\r\n            return {\r\n                taxableAmount: acc.taxableAmount + (product.Taxable_Amount || 0),\r\n                cgst: acc.cgst + (product.Cgst_Amo || 0),\r\n                sgst: acc.sgst + (product.Sgst_Amo || 0),\r\n                igst: acc.igst + (product.Igst_Amo || 0),\r\n                finalAmount: acc.finalAmount + (product.Final_Amo || 0)\r\n            };\r\n        }, { taxableAmount: 0, cgst: 0, sgst: 0, igst: 0, finalAmount: 0 });\r\n    };\r\n\r\n    const totals = calculateTotals(orderProducts);\r\n    const roundOff = Math.round(totals.finalAmount) - totals.finalAmount;\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: isEdit && !editOn ? \"PUT\" : \"POST\",\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter((o) =>\r\n                        isGraterNumber(o?.Bill_Qty, 0)\r\n                    ),\r\n                    Delivery_Person_Id:\r\n                        deliveryPerson ?? Number(orderDetails?.Delivery_Person_Id) ?? 0,\r\n                    Payment_Status: orderDetails?.Payment_Status\r\n                        ? Number(orderDetails?.Payment_Status)\r\n                        : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: orderDetails?.Delivery_Status\r\n                        ? Number(orderDetails?.Delivery_Status)\r\n                        : 1,\r\n                    Payment_Mode: orderDetails?.Payment_Mode\r\n                        ? Number(orderDetails?.Payment_Mode)\r\n                        : 1,\r\n                },\r\n            })\r\n                .then((data) => {\r\n                    if (data.success) {\r\n                        toast.success(data?.message);\r\n                        setOrderDetails(initialValue);\r\n                        setOrderProducts([]);\r\n                        reload();\r\n                    } else {\r\n                        toast.error(data?.message);\r\n                    }\r\n                })\r\n                .catch((e) => console.error(e))\r\n                .finally(() => loadingOff());\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error(\"Enter any one product quantity\");\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error(\"Select Retailer\");\r\n                return toast.error(\"Select Retailer\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                        Create Delivery Order\r\n                    </h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* Company Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Company_Address}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Telephone_Number}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={\r\n                                                    orderDetails?.Do_Date\r\n                                                        ? ISOString(orderDetails?.Do_Date)\r\n                                                        : \"\"\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Do_Date: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        GST_Inclusive: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        IS_IGST: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value=\"0\">GST</option>\r\n                                                <option value=\"1\">IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Voucher Type <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        VoucherType: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select voucher\r\n                                                </option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option value={vou.Vocher_Type_Id} key={ind}>\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Branch <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Branch_Id: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select Branch\r\n                                                </option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>\r\n                                                        {branch.BranchName}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{\r\n                                                    value: orderDetails?.Retailer_Id,\r\n                                                    label: orderDetails?.Retailer_Name,\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Retailer_Id: e.value,\r\n                                                        Retailer_Name: e.label,\r\n                                                    })\r\n                                                }\r\n                                                options={[\r\n                                                    { value: \"\", label: \"select\", isDisabled: true },\r\n                                                    ...retailers.map((obj) => ({\r\n                                                        value: obj?.Retailer_Id,\r\n                                                        label: obj?.Retailer_Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Delivery_Status: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={\r\n                                                    orderDetails.Delivery_Status\r\n                                                        ? orderDetails.Delivery_Status\r\n                                                        : 1\r\n                                                }\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Mode: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Status: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Ref_No: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails?.Payment_Ref_No}\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        startIcon={<Add />}\r\n                    >\r\n                        Add Product\r\n                    </Button>\r\n                </div>\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: \"Product\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: \"HSN Code\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + (row?.Units ?? \"\"),\r\n                            ColumnHeader: \"Quantity\",\r\n                            isVisible: 1,\r\n                            align: \"center\",\r\n                        },\r\n                        {\r\n                            Field_Name: \"Item_Rate\",\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: \"number\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Taxable Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return NumberFormat(row.Taxable_Amount || 0);\r\n                            },\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const taxAmount = Addition(\r\n                                    row.Cgst_Amo || 0,\r\n                                    row.Sgst_Amo || 0,\r\n                                    row.Igst_Amo || 0\r\n                                );\r\n                                return `${NumberFormat(taxAmount)} (${row.Product?.Tax_Rate || 0}%)`;\r\n                            },\r\n                            ColumnHeader: \"Tax\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => NumberFormat(row.Final_Amo || 0),\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                const product = row.Product || {};\r\n                                                const latestUOM_Id = row.UOM || product.Unit_Id;\r\n                                                const latestUnitName =\r\n                                                    row.Unit_Name || product.Units || product.Unit_Name;\r\n\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: product.Product_Name || row.ItemName,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: latestUOM_Id,\r\n                                                    Units: latestUnitName,\r\n                                                    Product: product,\r\n                                                    Group: product.Pro_Group || row.Group || \"\",\r\n                                                    GroupID: product.Product_Group || row.GroupID || \"\",\r\n                                                    Brand: product.Brand_Name || row.Brand || \"\",\r\n                                                    BrandID: product.Brand || row.BrandID || \"\",\r\n                                                    Amount: row.Amount,\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts((pre) =>\r\n                                                    pre.filter(\r\n                                                        (obj) => !isEqualNumber(obj.Item_Id, row.Item_Id)\r\n                                                    )\r\n                                                );\r\n                                            }}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                );\r\n                            },\r\n                            ColumnHeader: \"Action\",\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n                {/* Invoice Summary */}\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={orderDetails.IS_IGST === 1 ? 4 : 5}>\r\n                                        Total in words: {numberToWords(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(totals.taxableAmount.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                {orderDetails.IS_IGST === 1 ? (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2 text-end\">\r\n                                            {NumberFormat(totals.igst.toFixed(2))}\r\n                                        </td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.cgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.sgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(roundOff.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2 fw-bold\">Total</td>\r\n                                    <td className=\"border p-2 text-end fw-bold\">\r\n                                        {NumberFormat(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={(e) =>\r\n                        setOrderDetails((pre) => ({ ...pre, Narration: e.target.value }))\r\n                    }\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {\"cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        color=\"success\"\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Add Product Dialog */}\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        if (\r\n                            productDetails.Item_Id &&\r\n                            productDetails.Bill_Qty &&\r\n                            productDetails.Item_Rate\r\n                        ) {\r\n                            handleProductInputChange(\r\n                                productDetails.Item_Id,\r\n                                productDetails.Bill_Qty,\r\n                                productDetails.Item_Rate,\r\n                                productDetails.Product,\r\n                                productDetails.UOM,\r\n                                productDetails.Units\r\n                            );\r\n                            closeAddProduct();\r\n                        } else {\r\n                            toast.warn(\r\n                                !productDetails.Item_Id\r\n                                    ? \"Select Product\"\r\n                                    : !productDetails.Bill_Qty\r\n                                        ? \"Enter Quantity\"\r\n                                        : \"Enter Rate or Amount\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.BrandID,\r\n                                        label: productDetails.Brand,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            BrandID: e.value,\r\n                                            Brand: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productBrand.map((obj) => ({\r\n                                            value: obj?.Brand,\r\n                                            label: obj?.Brand_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.GroupID,\r\n                                        label: productDetails.Group,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            GroupID: e.value,\r\n                                            Group: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...products\r\n                                            .filter((pro) =>\r\n                                                productDetails.BrandID\r\n                                                    ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                    : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>\r\n                                    Item Name <RequiredStar />\r\n                                </label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: productDetails.ItemName,\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        const productInfo = products.find((pro) =>\r\n                                            isEqualNumber(pro.Product_Id, e.value)\r\n                                        );\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter((pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                                )\r\n                                                .filter((pro) =>\r\n                                                    productDetails.GroupID\r\n                                                        ? isEqualNumber(\r\n                                                            pro.Product_Group,\r\n                                                            productDetails.GroupID\r\n                                                        )\r\n                                                        : true\r\n                                                ),\r\n                                        ].map((obj) => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled:\r\n                                                orderProducts.findIndex((ind) =>\r\n                                                    isEqualNumber(ind?.Item_Id, obj?.Product_Id)\r\n                                                ) === -1\r\n                                                    ? false\r\n                                                    : true,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Quantity <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"input\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    productDetails.Item_Rate,\r\n                                                    e.target.value\r\n                                                                                               ),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Quantity\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Rate <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Rate\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Amount\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.UOM,\r\n                                        label: productDetails.Units,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            UOM: e.value,\r\n                                            Units: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productUOM.map((obj) => ({\r\n                                            value: obj?.UOM_Id,\r\n                                            label: obj?.UOM_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select UOM\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>HSN Code</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={productDetails.Product?.HSN_Code || \"\"}\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>GST %</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        orderDetails.IS_IGST\r\n                                            ? productDetails.Product?.Igst_P || 0\r\n                                            : Addition(\r\n                                                productDetails.Product?.Cgst_P || 0,\r\n                                                productDetails.Product?.Sgst_P || 0\r\n                                            )\r\n                                    }\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions className=\"border-top\">\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            startIcon={<ClearAll />}\r\n                            onClick={closeAddProduct}\r\n                        >\r\n                            Clear\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"success\"\r\n                            startIcon={<Save />}\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewDeliveryOrder;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n\r\n\r\n\r\n    const [pageSize, setPageSize] = useState('A5');\r\n\r\n\r\n    // const a4Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '297mm',\r\n    //     padding: '10mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '7px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.2,\r\n    //     overflow: 'visible',\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n    //     flexGrow: 1,\r\n    //     paddingTop: '1px',\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '210mm',\r\n    //         height: '297mm',\r\n    //         margin: 0,\r\n    //         padding: '8mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n    // const a5Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '148.5mm',\r\n    //     padding: '6mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '5px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.0,\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n\r\n    //     flexGrow: 1,\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '148mm',\r\n    //         height: '210mm',\r\n    //         margin: 0,\r\n    //         padding: '5mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const a4Styles = {\r\n        width: '200mm',\r\n        minHeight: '290mm',\r\n        padding: '10mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '7px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.2,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n    };\r\n\r\n    const a5Styles = {\r\n        width: '200mm',\r\n        minHeight: '146mm',\r\n        padding: '8mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '5px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n        pageStyle: `\r\n    @page {\r\n      size: ${pageSize === 'A4' ? 'A4' : 'A5'};\r\n      margin-top: 10px;\r\n      margin-right: 0;\r\n      margin-bottom: 0;\r\n      margin-left: 0;\r\n      \r\n    }\r\n\r\n    @media print {\r\n      body {\r\n        margin: 0;\r\n        padding: 0;\r\n         margin-top: 10px;\r\n      }\r\n\r\n      .MuiDialog-root,\r\n      .MuiDialog-container,\r\n      .MuiPaper-root,\r\n      .MuiDialogTitle-root {\r\n        display: none !important;\r\n      }\r\n\r\n    .pagebreak {\r\n        clear: both;\r\n        page-break-after: always;\r\n    }\r\n\r\n      .print-content {\r\n        padding-top: 0;\r\n         margin-top: 10px;\r\n      }\r\n    }\r\n  `\r\n    });\r\n\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.Do_Inv_No,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.Do_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    const getInlineStyles = () => (pageSize === 'A4' ? a4Styles : a5Styles);\r\n\r\n    const handleToggle = () => {\r\n        setPageSize((prev) => (prev === 'A5' ? 'A4' : 'A5'));\r\n    };\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xl\"\r\n                sx={{\r\n                    '& .MuiDialog-container': {\r\n                        alignItems: 'flex-start',\r\n                        padding: '20px 0',\r\n                        overflow: 'auto',\r\n                    },\r\n                    '& .MuiPaper-root': {\r\n                        width: 'auto',\r\n                        maxWidth: '95vw',\r\n                        maxHeight: '95vh',\r\n                        margin: 0,\r\n                        overflow: 'visible',\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle sx={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                    width: '100%',\r\n                    position: 'sticky',\r\n                    marginTop: '2px',\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1,\r\n                }}>\r\n                    Order Preview\r\n                </DialogTitle>\r\n\r\n                <DialogContent\r\n                    ref={printRef}\r\n                    sx={{\r\n                        padding: 0,\r\n                        margin: 0,\r\n                        overflow: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        '@media print': {\r\n                            overflow: 'visible',\r\n                            display: 'block',\r\n                            height: 'auto',\r\n                            marginTop: '2px'\r\n                        }\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={getInlineStyles()}\r\n                        className=\"print-container\"\r\n                    >\r\n                        <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                        {/* General Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 p-0 border border-bottom-0 border-end-0\">\r\n                                <div className=\"border-bottom p-2\">\r\n                                    <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                    <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                    <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                    <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                    <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                    <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6 p-0 border border-bottom-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <tbody>\r\n                                        {extraDetails.map((detail, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                    <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                                </td>\r\n                                                <td className='fa-12 p-0 px-1'>\r\n                                                    <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                                <p className=\"m-0\">Terms of Delivery</p>\r\n                                                <p className=\"m-0\"></p>\r\n                                                <br />\r\n                                                <br />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Product Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 p-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td className='border bg-light fa-14'>Sno</td>\r\n                                            <td className='border bg-light fa-14'>Product</td>\r\n                                            <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                            <td className='border bg-light fa-14 text-end'>\r\n                                                <p className='m-2 '>Rate</p>\r\n                                                <p className='m-0 '>\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {(() => {\r\n                                            const chunkSize = 15;\r\n                                            const productChunks = [];\r\n                                            for (let i = 0; i < includedProducts.length; i += chunkSize) {\r\n                                                productChunks.push(includedProducts.slice(i, i + chunkSize));\r\n                                            }\r\n\r\n                                            return productChunks.map((chunk, chunkIndex) => (\r\n                                                <React.Fragment key={chunkIndex}>\r\n                                                    {chunk.map((o, i) => {\r\n                                                        const globalIndex = chunkIndex * chunkSize + i;\r\n                                                        const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                                        const quantity = Number(o?.Bill_Qty || 0);\r\n                                                        const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                                        const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage);\r\n\r\n                                                        return (\r\n                                                            <tr key={globalIndex}>\r\n                                                                <td className='border fa-13'>{globalIndex + 1}</td>\r\n                                                                <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                                <td className='border fa-13'>{o?.HSN_Code}</td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(quantity)}\r\n                                                                    {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(o?.Taxable_Amount)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                    {/* Summary section only after last chunk */}\r\n                                                    {chunkIndex === productChunks.length - 1 && (\r\n                                                        <>\r\n                                                            <tr>\r\n                                                                <td\r\n                                                                    className=\"border p-2\"\r\n                                                                    rowSpan={IS_IGST ? 4 : 5}\r\n                                                                    colSpan={4}\r\n                                                                >\r\n                                                                    <p className='m-0 mx-2 p-2 fa-13 fw-bold'>Amount Chargeable (in words):</p>\r\n                                                                    <p className='m-0 fa-13 fw-bold'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                                                </td>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                                                <td className=\"border p-2 text-end fa-14\">\r\n                                                                    {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            {!IS_IGST ? (\r\n                                                                <>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                                        <td className=\"border p-2 text-end fa-14\">\r\n                                                                            {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                                        <td className=\"border p-2 fa-14 text-end\">\r\n                                                                            {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <tr>\r\n                                                                    <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                                                    <td className=\"border p-2 fa-14 text-end\">\r\n                                                                        {NumberFormat(orderDetails.IGST_Total)}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )}\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                                    {NumberFormat(orderDetails?.Round_off)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                                                    {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                                    {/* Page break after each chunk except last */}\r\n                                                    {chunkIndex < productChunks.length - 1 && (\r\n                                                        <tr style={{\r\n                                                            pageBreakAfter: 'always',\r\n                                                            height: '0',\r\n                                                            visibility: 'hidden',\r\n                                                            border: 'none'\r\n                                                        }}>\r\n                                                            <td colSpan=\"7\" style={{ border: 'none' }}></td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            ));\r\n                                        })()}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tax Table */}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {TaxData.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                        <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                        {orderDetails.IS_IGST ? (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            </>\r\n                                        )}\r\n                                        <td className=\"border fa-13 text-end\">\r\n                                            {NumberFormat(o?.totalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td className=\"border fa-13 text-end\">Total</td>\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                    </td>\r\n                                    {orderDetails.IS_IGST ? (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                        className='border fa-13 fw-bold'\r\n                                    >\r\n                                        Tax Amount (in words) : INR &nbsp;\r\n                                        {numberToWords(\r\n                                            parseInt(\r\n                                                TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                            )\r\n                                        )} only.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>This is a Computer Generated Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"pageSizeSwitch\"\r\n                            checked={pageSize === 'A4'}\r\n                            onChange={handleToggle}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"pageSizeSwitch\">\r\n                            {pageSize} selected\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                        <Button\r\n                            startIcon={<Close />}\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                        {download && (\r\n                            <Button\r\n                                startIcon={<Download />}\r\n                                variant=\"outlined\"\r\n                                onClick={handlePrint}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;","// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//     Card,\r\n//     CardContent,\r\n//     Button,\r\n//     Dialog,\r\n//     Tooltip,\r\n//     IconButton,\r\n//     DialogTitle,\r\n//     DialogContent,\r\n//     DialogActions,\r\n//     Switch,\r\n// } from \"@mui/material\";\r\n// // import '../common.css'\r\n// import Select from \"react-select\";\r\n// import { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n// import {\r\n//     getPreviousDate,\r\n//     isEqualNumber,\r\n//     ISOString,\r\n//     isValidObject,\r\n// } from \"../../../Components/functions\";\r\n// // import DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\n// import { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\n// import { fetchLink } from \"../../../Components/fetchComponent\";\r\n// import FilterableTable from \"../../../Components/filterableTable2\";\r\n// // import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\n// import { toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import NewDeliveryOrder from \"./NewDeliveryOrder\";\r\n// import DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\";\r\n// const DeliveryDetailsList = ({\r\n//     loadingOn,\r\n//     loadingOff,\r\n//     onToggle,\r\n//     reload,\r\n//     triggerReload,\r\n// }) => {\r\n//     const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n//     const [saleOrders, setSaleOrders] = useState([]);\r\n//     const [retailers, setRetailers] = useState([]);\r\n//     const [salesPerson, setSalePerson] = useState([]);\r\n//     const [users, setUsers] = useState([]);\r\n//     const [screen, setScreen] = useState(true);\r\n//     const [orderInfo, setOrderInfo] = useState({});\r\n//     const [viewOrder, setViewOrder] = useState({});\r\n\r\n//     const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n//     const [itemTodelete, setItemToDelete] = useState({});\r\n//     const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] =\r\n//         useState(false);\r\n//     const [deliveryPerson, setDeliveryPerson] = useState([]);\r\n//     const [filters, setFilters] = useState({\r\n//         Fromdate: getPreviousDate(7),\r\n//         Todate: ISOString(),\r\n//         Retailer_Id: \"\",\r\n//         RetailerGet: \"ALL\",\r\n//         Created_by: \"\",\r\n//         CreatedByGet: \"ALL\",\r\n//         Delivery_Person_Id: \"\",\r\n//         Delivery_Person_Name: \"ALL\",\r\n//         Sales_Person_Id: \"\",\r\n//         Sales_Person_Name: \"ALL\",\r\n//         Cancel_status: 0,\r\n//     });\r\n\r\n//     const [pageLoad, setPageLoad] = useState(false);\r\n\r\n//     const [dialog, setDialog] = useState({\r\n//         filters: false,\r\n//         orderDetails: false,\r\n//     });\r\n\r\n//     useEffect(() => {\r\n//         fetchLink({\r\n//             address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setSaleOrders(data?.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n//     }, [\r\n//         filters.Fromdate,\r\n//         filters?.Todate,\r\n//         filters?.Retailer_Id,\r\n//         filters?.Delivery_Person_Id,\r\n//         filters?.Created_by,\r\n//         filters?.Cancel_status,\r\n//         filters?.Sales_Person_Id,\r\n//         reload,\r\n//         pageLoad,\r\n//     ]);\r\n\r\n//     useEffect(() => {\r\n//         fetchLink({\r\n//             address: `dataEntry/costCenter`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setDeliveryPerson(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setRetailers(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setSalePerson(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n\r\n//         fetchLink({\r\n//             address: `masters/user/dropDown?Company_id=${storage?.Company_id}`,\r\n//         })\r\n//             .then((data) => {\r\n//                 if (data.success) {\r\n//                     setUsers(data.data);\r\n//                 }\r\n//             })\r\n//             .catch((e) => console.error(e));\r\n//     }, []);\r\n//     const openDeleteDialog = (itemData) => {\r\n//         setItemToDelete({\r\n//             So_No: itemData.So_No,\r\n//             Do_Id: itemData.Do_Id,\r\n//         });\r\n//         setDeleteConfirm(true);\r\n//     };\r\n\r\n//     const saleOrderColumn = [\r\n//         {\r\n//             Field_Name: \"Do_Id\",\r\n//             ColumnHeader: \"Delivery ID\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n//         {\r\n//             Field_Name: \"So_No\",\r\n//             ColumnHeader: \"Sale Order ID\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Do_Inv_No\",\r\n//             ColumnHeader: \"Do_Inv_No \",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Retailer_Name\",\r\n//             ColumnHeader: \"Customer\",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//         },\r\n//         {\r\n//             Field_Name: \"SalesDate\",\r\n//             ColumnHeader: \"Sale Order Date\",\r\n//             Fied_Data: \"date\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Do_Date\",\r\n//             ColumnHeader: \"Delivery Date\",\r\n//             Fied_Data: \"date\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Total_Before_Tax\",\r\n//             ColumnHeader: \"Before Tax\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Total_Tax\",\r\n//             ColumnHeader: \"Tax\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"Total_Invoice_value\",\r\n//             ColumnHeader: \"Invoice Value\",\r\n//             Fied_Data: \"number\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n//         {\r\n//             Field_Name: \"DeliveryStatusName\",\r\n//             ColumnHeader: \"Delivery Status \",\r\n//             Fied_Data: \"string\",\r\n//             isVisible: 1,\r\n//             align: \"center\",\r\n//         },\r\n\r\n//         {\r\n//             Field_Name: \"Action\",\r\n//             isVisible: 1,\r\n//             isCustomCell: true,\r\n//             Cell: ({ row }) => {\r\n//                 return (\r\n//                     <>\r\n//                         <Tooltip title=\"View Order\">\r\n//                             <IconButton\r\n//                                 onClick={() => {\r\n//                                     setViewOrder({\r\n//                                         orderDetails: row,\r\n//                                         orderProducts: row?.Products_List ? row?.Products_List : [],\r\n//                                     });\r\n//                                 }}\r\n//                                 onFocus={(e) => {\r\n//                                     e.target.blur();\r\n//                                 }}\r\n//                                 color=\"primary\"\r\n//                                 size=\"small\"\r\n//                             >\r\n//                                 <Visibility className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Tooltip title=\"Edit\">\r\n//                             <IconButton\r\n//                                 onClick={() => {\r\n//                                     switchScreen();\r\n//                                     setOrderInfo({ ...row, isEdit: true });\r\n//                                 }}\r\n//                                 size=\"small\"\r\n//                             >\r\n//                                 <Edit className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                         <Tooltip title=\"Delete\">\r\n//                             <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n//                                 <Delete className=\"fa-16\" />\r\n//                             </IconButton>\r\n//                         </Tooltip>\r\n//                     </>\r\n//                 );\r\n//             },\r\n//         },\r\n//     ];\r\n\r\n//     const ExpendableComponent = ({ row }) => {\r\n//         return (\r\n//             <>\r\n//                 <table className=\"table\">\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Branch</td>\r\n//                             <td className=\"border p-2\">{row.Branch_Name}</td>\r\n//                             <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n//                             <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n//                             <td className=\"border p-2 bg-light\">Round off</td>\r\n//                             <td className=\"border p-2\">{row.Round_off}</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n//                             <td className=\"border p-2\">\r\n//                                 {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n//                                 {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n//                             </td>\r\n//                             <td className=\"border p-2 bg-light\">Tax Type</td>\r\n//                             <td className=\"border p-2\">\r\n//                                 {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n//                                 {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n//                             </td>\r\n//                             <td className=\"border p-2 bg-light\">Sales Person</td>\r\n//                             <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <td className=\"border p-2 bg-light\">Narration</td>\r\n//                             <td className=\"border p-2\" colSpan={5}>\r\n//                                 {row.Narration}\r\n//                             </td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </table>\r\n//             </>\r\n//         );\r\n//     };\r\n\r\n//     const switchScreen = () => {\r\n//         setScreen(!screen);\r\n//         setOrderInfo({});\r\n//         setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n//     };\r\n\r\n//     const closeDialog = () => {\r\n//         setDialog({\r\n//             ...dialog,\r\n//             filters: false,\r\n//             orderDetails: false,\r\n//         });\r\n//         setOrderInfo({});\r\n//         setDeleteConfirm(false);\r\n//     };\r\n\r\n//     const confirmData = async () => {\r\n//         if (!itemTodelete) return;\r\n\r\n//         try {\r\n//             const data = await fetchLink({\r\n//                 address: \"delivery/deliveryOrder\",\r\n//                 method: \"DELETE\",\r\n//                 bodyData: {\r\n//                     Order_Id: itemTodelete.So_No,\r\n//                     Do_Id: itemTodelete.Do_Id,\r\n//                 },\r\n//             });\r\n\r\n//             if (data.success) {\r\n//                 toast.success(\"Delivery Deleted successfully\");\r\n\r\n//                 triggerReload();\r\n//                 setDeleteConfirm(false);\r\n\r\n//                 setPageLoad((prev) => !prev);\r\n//                 setIsDeliveryDetailsVisible(false);\r\n//             } else {\r\n//                 toast.error(data?.message || \"Deletion failed\");\r\n//             }\r\n//             // throw error\r\n//         } catch (error) {\r\n//             toast.error(\"An error occurred while deleting.\", error);\r\n//         } finally {\r\n//             setDeleteConfirm(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <Card>\r\n//                 <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n//                     <h6 className=\"fa-18 m-0 p-0\">\r\n//                         {screen\r\n//                             ? \"Delivery Orders\"\r\n//                             : isValidObject(orderInfo)\r\n//                                 ? \"Modify Delivery Order\"\r\n//                                 : \"\"}\r\n//                     </h6>\r\n//                     <span>\r\n//                         {screen && (\r\n//                             <Tooltip title=\"Filters\">\r\n//                                 <IconButton\r\n//                                     size=\"small\"\r\n//                                     onClick={() => setDialog({ ...dialog, filters: true })}\r\n//                                 >\r\n//                                     <FilterAlt />\r\n//                                 </IconButton>\r\n//                             </Tooltip>\r\n//                         )}\r\n\r\n//                         {screen && (\r\n//                             <Switch\r\n//                                 checked={!screen}\r\n//                                 onChange={onToggle}\r\n//                                 label={\"Delivery Details\"}\r\n//                                 inputProps={{ \"aria-label\": \"controlled\" }}\r\n//                             />\r\n//                         )}\r\n//                     </span>\r\n//                 </div>\r\n\r\n//                 <CardContent className=\"p-0 \">\r\n//                     {screen ? (\r\n//                         <FilterableTable\r\n//                             dataArray={saleOrders}\r\n//                             columns={saleOrderColumn}\r\n//                             // EnableSerialNumber={true}\r\n//                             isExpendable={true}\r\n//                             tableMaxHeight={550}\r\n//                             expandableComp={ExpendableComponent}\r\n//                         />\r\n//                     ) : (\r\n//                         <NewDeliveryOrder\r\n//                             editValues={orderInfo}\r\n//                             loadingOn={loadingOn}\r\n//                             loadingOff={loadingOff}\r\n//                             reload={() => {\r\n//                                 setScreen((pre) => !pre);\r\n//                             }}\r\n//                             switchScreen={switchScreen}\r\n//                         />\r\n//                     )}\r\n//                 </CardContent>\r\n//             </Card>\r\n\r\n//             {Object.keys(viewOrder).length > 0 && (\r\n//                 <DeliveryInvoiceTemplate\r\n//                     orderDetails={viewOrder?.orderDetails}\r\n//                     orderProducts={viewOrder?.orderProducts}\r\n//                     download={true}\r\n//                     actionOpen={true}\r\n//                     clearDetails={() => setViewOrder({})}\r\n//                     TitleText={\"Delivery Order\"}\r\n//                 />\r\n//             )}\r\n\r\n//             <Dialog open={deleteConfirm} fullWidth maxWidth=\"sm\">\r\n//                 <DialogTitle>Delete</DialogTitle>\r\n//                 <DialogContent>\r\n//                     <div>Are You Want to Delete Delivery Details</div>\r\n//                 </DialogContent>\r\n//                 <DialogActions>\r\n//                     <Button onClick={closeDialog}>close</Button>\r\n//                     <Button onClick={confirmData}>Delete</Button>\r\n//                 </DialogActions>\r\n//             </Dialog>\r\n\r\n//             <Dialog\r\n//                 open={dialog.filters}\r\n//                 onClose={closeDialog}\r\n//                 fullWidth\r\n//                 maxWidth=\"sm\"\r\n//             >\r\n//                 <DialogTitle>Filters</DialogTitle>\r\n//                 <DialogContent>\r\n//                     <div className=\"table-responsive pb-4\">\r\n//                         <table className=\"table\">\r\n//                             <tbody>\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Retailer_Id,\r\n//                                                 label: filters?.RetailerGet,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Retailer_Id: e.value,\r\n//                                                     RetailerGet: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...retailers.map((obj) => ({\r\n//                                                     value: obj?.Retailer_Id,\r\n//                                                     label: obj?.Retailer_Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Retailer Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Delivery Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Delivery_Person_Id,\r\n//                                                 label: filters?.Delivery_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Delivery_Person_Id: e.value,\r\n//                                                     Delivery_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...deliveryPerson.map((obj) => ({\r\n//                                                     value: obj?.User_Id,\r\n//                                                     label: obj?.UserGet,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n//                                 {/* <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Sales_Person_Id,\r\n//                                                 label: filters?.Sales_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Sales_Person_Id: e.value,\r\n//                                                     Sales_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...salesPerson.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr> */}\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Sales_Person_Id,\r\n//                                                 label: filters?.Sales_Person_Name,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Sales_Person_Id: e.value,\r\n//                                                     Sales_Person_Name: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...salesPerson.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={{\r\n//                                                 ...customSelectStyles,\r\n//                                                 menu: (provided) => ({\r\n//                                                     ...provided,\r\n//                                                     zIndex: 9999,\r\n//                                                 }),\r\n//                                             }}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Sales Person Name\"}\r\n//                                             menuPortalTarget={document.body}\r\n//                                             menuPosition=\"fixed\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>Created By</td>\r\n//                                     <td>\r\n//                                         <Select\r\n//                                             value={{\r\n//                                                 value: filters?.Created_by,\r\n//                                                 label: filters?.CreatedByGet,\r\n//                                             }}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({\r\n//                                                     ...filters,\r\n//                                                     Created_by: e.value,\r\n//                                                     CreatedByGet: e.label,\r\n//                                                 })\r\n//                                             }\r\n//                                             options={[\r\n//                                                 { value: \"\", label: \"ALL\" },\r\n//                                                 ...users.map((obj) => ({\r\n//                                                     value: obj?.UserId,\r\n//                                                     label: obj?.Name,\r\n//                                                 })),\r\n//                                             ]}\r\n//                                             styles={customSelectStyles}\r\n//                                             isSearchable={true}\r\n//                                             placeholder={\"Delivery Person Name\"}\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n//                                     <td>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             value={filters.Fromdate}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({ ...filters, Fromdate: e.target.value })\r\n//                                             }\r\n//                                             className=\"cus-inpt\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n\r\n//                                 <tr>\r\n//                                     <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n//                                     <td>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             value={filters.Todate}\r\n//                                             onChange={(e) =>\r\n//                                                 setFilters({ ...filters, Todate: e.target.value })\r\n//                                             }\r\n//                                             className=\"cus-inpt\"\r\n//                                         />\r\n//                                     </td>\r\n//                                 </tr>\r\n//                             </tbody>\r\n//                         </table>\r\n//                     </div>\r\n//                 </DialogContent>\r\n//                 <DialogActions>\r\n//                     <Button onClick={closeDialog}>close</Button>\r\n//                 </DialogActions>\r\n//             </Dialog>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default DeliveryDetailsList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Dialog,\r\n    Tooltip,\r\n    IconButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Switch,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport {\r\n    getPreviousDate,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidObject,\r\n} from \"../../../Components/functions\";\r\nimport { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\";\r\n\r\nconst DeliveryDetailsList = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    onToggle,\r\n    reload,\r\n    triggerReload,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n    const [itemTodelete, setItemToDelete] = useState({});\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] =\r\n        useState(false);\r\n    const [deliveryPerson, setDeliveryPerson] = useState([]);\r\n\r\n    // filters state (applied filters)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: \"\",\r\n        RetailerGet: \"ALL\",\r\n        Created_by: \"\",\r\n        CreatedByGet: \"ALL\",\r\n        Delivery_Person_Id: \"\",\r\n        Delivery_Person_Name: \"ALL\",\r\n        Sales_Person_Id: \"\",\r\n        Sales_Person_Name: \"ALL\",\r\n        Cancel_status: 0,\r\n    });\r\n\r\n    // temp filters (used in dialog before applying)\r\n    const [tempFilters, setTempFilters] = useState(filters);\r\n\r\n    const [pageLoad, setPageLoad] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    if (loadingOn) loadingOn();\r\n\r\n    fetchLink({\r\n        address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`,\r\n    })\r\n        .then((data) => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data);\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            console.error(\"Error fetching delivery orders:\", e);\r\n        })\r\n        .finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n}, [filters, pageLoad]);\r\n\r\n    // fetch dropdown data\r\n    useEffect(() => {\r\n        fetchLink({ address: `dataEntry/costCenter` })\r\n            .then((data) => data.success && setDeliveryPerson(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setRetailers(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setSalePerson(data.data))\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({ address: `masters/user/dropDown?Company_id=${storage?.Company_id}` })\r\n            .then((data) => data.success && setUsers(data.data))\r\n            .catch((e) => console.error(e));\r\n    }, []);\r\n\r\n    const openDeleteDialog = (itemData) => {\r\n        setItemToDelete({ So_No: itemData.So_No, Do_Id: itemData.Do_Id });\r\n        setDeleteConfirm(true);\r\n    };\r\n\r\n    // const saleOrderColumn = [\r\n    //     { Field_Name: \"Do_Id\", ColumnHeader: \"Delivery ID\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"So_No\", ColumnHeader: \"Sale Order ID\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"Do_Inv_No\", ColumnHeader: \"Do_Inv_No\", Fied_Data: \"string\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Retailer_Name\", ColumnHeader: \"Customer\", Fied_Data: \"string\", isVisible: 1 },\r\n    //     { Field_Name: \"SalesDate\", ColumnHeader: \"Sale Order Date\", Fied_Data: \"date\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Do_Date\", ColumnHeader: \"Delivery Date\", Fied_Data: \"date\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Before_Tax\", ColumnHeader: \"Before Tax\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Tax\", ColumnHeader: \"Tax\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"Total_Invoice_value\", ColumnHeader: \"Invoice Value\", Fied_Data: \"number\", isVisible: 1, align: \"center\" },\r\n    //     { Field_Name: \"DeliveryStatusName\", ColumnHeader: \"Delivery Status\", Fied_Data: \"string\", isVisible: 1, align: \"center\" },\r\n    //     {\r\n    //         Field_Name: \"Action\",\r\n    //         isVisible: 1,\r\n    //         isCustomCell: true,\r\n    //         Cell: ({ row }) => (\r\n    //             <>\r\n    //                 <Tooltip title=\"View Order\">\r\n    //                     <IconButton\r\n    //                         onClick={() => {\r\n    //                             setViewOrder({\r\n    //                                 orderDetails: row,\r\n    //                                 orderProducts: row?.Products_List ? row?.Products_List : [],\r\n    //                             });\r\n    //                         }}\r\n    //                         onFocus={(e) => e.target.blur()}\r\n    //                         color=\"primary\"\r\n    //                         size=\"small\"\r\n    //                     >\r\n    //                         <Visibility className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //                 <Tooltip title=\"Edit\">\r\n    //                     <IconButton\r\n    //                         onClick={() => {\r\n    //                             switchScreen();\r\n    //                             setOrderInfo({ ...row, isEdit: true });\r\n    //                         }}\r\n    //                         size=\"small\"\r\n    //                     >\r\n    //                         <Edit className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //                 <Tooltip title=\"Delete\">\r\n    //                     <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n    //                         <Delete className=\"fa-16\" />\r\n    //                     </IconButton>\r\n    //                 </Tooltip>\r\n    //             </>\r\n    //         ),\r\n    //     },\r\n    // ];\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: \"Do_Id\",\r\n            ColumnHeader: \"Delivery ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"So_No\",\r\n            ColumnHeader: \"Sale Order ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Do_Inv_No\",\r\n            ColumnHeader: \"Do_Inv_No \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Retailer_Name\",\r\n            ColumnHeader: \"Customer\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"SalesDate\",\r\n            ColumnHeader: \"Sale Order Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Do_Date\",\r\n            ColumnHeader: \"Delivery Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Total_Before_Tax\",\r\n            ColumnHeader: \"Before Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Tax\",\r\n            ColumnHeader: \"Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Invoice_value\",\r\n            ColumnHeader: \"Invoice Value\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"DeliveryStatusName\",\r\n            ColumnHeader: \"Delivery Status \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Action\",\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title=\"View Order\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    });\r\n                                }}\r\n                                onFocus={(e) => {\r\n                                    e.target.blur();\r\n                                }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const ExpendableComponent = ({ row }) => (\r\n        <table className=\"table\">\r\n            <tbody>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Branch</td>\r\n                    <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                    <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                    <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                    <td className=\"border p-2 bg-light\">Round off</td>\r\n                    <td className=\"border p-2\">{row.Round_off}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                    <td className=\"border p-2\">\r\n                        {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n                        {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n                    </td>\r\n                    <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                    <td className=\"border p-2\">\r\n                        {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n                        {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n                    </td>\r\n                    <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                    <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"border p-2 bg-light\">Narration</td>\r\n                    <td className=\"border p-2\" colSpan={5}>\r\n                        {row.Narration}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen);\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog({ ...dialog, filters: false, orderDetails: false });\r\n        setOrderInfo({});\r\n        setDeleteConfirm(false);\r\n    };\r\n\r\n    const confirmData = async () => {\r\n        if (!itemTodelete) return;\r\n        try {\r\n            const data = await fetchLink({\r\n                address: \"delivery/deliveryOrder\",\r\n                method: \"DELETE\",\r\n                bodyData: {\r\n                    Order_Id: itemTodelete.So_No,\r\n                    Do_Id: itemTodelete.Do_Id,\r\n                },\r\n            });\r\n            if (data.success) {\r\n                toast.success(\"Delivery Deleted successfully\");\r\n                triggerReload();\r\n                setDeleteConfirm(false);\r\n                setPageLoad((prev) => !prev);\r\n                setIsDeliveryDetailsVisible(false);\r\n            } else {\r\n                toast.error(data?.message || \"Deletion failed\");\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"An error occurred while deleting.\", error);\r\n        } finally {\r\n            setDeleteConfirm(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">\r\n                        {screen\r\n                            ? \"Delivery Orders\"\r\n                            : isValidObject(orderInfo)\r\n                                ? \"Modify Delivery Order\"\r\n                                : \"\"}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        {screen && (\r\n                            <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={\"Delivery Details\"}\r\n                                inputProps={{ \"aria-label\": \"controlled\" }}\r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen((pre) => !pre);\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={\"Delivery Order\"}\r\n                />\r\n            )}\r\n\r\n            {/* Delete Confirmation Dialog */}\r\n            <Dialog open={deleteConfirm} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <div>Are You Want to Delete Delivery Details</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>Close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Filters Dialog */}\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Retailer_Id,\r\n                                                label: tempFilters?.RetailerGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Retailer_Id: e.value,\r\n                                                    RetailerGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...retailers.map((obj) => ({\r\n                                                    value: obj?.Retailer_Id,\r\n                                                    label: obj?.Retailer_Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Delivery_Person_Id,\r\n                                                label: tempFilters?.Delivery_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Delivery_Person_Id: e.value,\r\n                                                    Delivery_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...deliveryPerson.map((obj) => ({\r\n                                                    value: obj?.User_Id,\r\n                                                    label: obj?.UserGet,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Sales_Person_Id,\r\n                                                label: tempFilters?.Sales_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Sales_Person_Id: e.value,\r\n                                                    Sales_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...salesPerson.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={{\r\n                                                ...customSelectStyles,\r\n                                                menu: (provided) => ({\r\n                                                    ...provided,\r\n                                                    zIndex: 9999,\r\n                                                }),\r\n                                            }}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            menuPosition=\"fixed\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: tempFilters?.Created_by,\r\n                                                label: tempFilters?.CreatedByGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({\r\n                                                    ...tempFilters,\r\n                                                    Created_by: e.value,\r\n                                                    CreatedByGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...users.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Created By\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={tempFilters.Fromdate}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({ ...tempFilters, Fromdate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={tempFilters.Todate}\r\n                                            onChange={(e) =>\r\n                                                setTempFilters({ ...tempFilters, Todate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>Close</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            setFilters(tempFilters);\r\n                            setDialog({ ...dialog, filters: false });\r\n                        }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeliveryDetailsList;\r\n\r\n\r\n\r\n\r\n"],"names":["convertedStatus","id","label","color","dbStatus","RequiredStar","_jsx","style","fontWeight","fontSize","children","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","_productDetails$Produ","_productDetails$Produ2","_productDetails$Produ3","_productDetails$Produ4","editValues","loadingOn","loadingOff","reload","switchScreen","editOn","storage","JSON","parse","localStorage","getItem","baseData","setBaseData","useState","products","branch","retailers","voucherType","uom","staff","staffType","salesPerson","brand","setRetailers","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","setVoucherType","setBranch","initialValue","Company_Id","Company_id","Do_Date","ISOString","VoucherType","Retailer_Id","Retailer_Name","Delivery_Status","Delivery_Person_Id","Payment_Ref_No","Delivery_Person_Name","Payment_Mode","Payment_Status","Branch_Id","BranchId","Narration","Created_by","UserId","Product_Array","So_No","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isInclusive","isNotTaxableBill","deliveryPerson","useEffect","_editValues$Products_","isValidObject","pre","_editValues$Do_Date","_objectSpread","Do_Id","Voucher_Type","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Sgst_P","Igst_P","Gst_P","Addition","Latitude","Longitude","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","error","toast","warn","fetchLocation","fetchLink","address","concat","then","data","success","catch","e","console","uniqueBrand","getUniqueData","product","productMaster","gstPercentage","isTaxable","Multiplication","gstInfo","Taxable_Amount","Cgst_Amo","Sgst_Amo","Igst_Amo","Final_Amo","Tax_Rate","Cgst","Sgst","Igst","Taxble","totals","reduce","acc","taxableAmount","cgst","sgst","igst","finalAmount","calculateTotals","roundOff","Math","round","closeAddProduct","_jsxs","_Fragment","className","colSpan","Company_Name","Company_Address","Telephone_Number","value","onChange","target","disabled","vou","ind","Vocher_Type_Id","BranchName","Select","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","Name","Button","onClick","sx","ml","variant","startIcon","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref3","_row$Product","row","ColumnHeader","isVisible","_ref4","_row$Product2","HSN_Code","_ref5","_row$Units","align","Field_Name","Fied_Data","_ref6","NumberFormat","_ref7","_row$Product3","_ref8","_ref9","IconButton","latestUOM_Id","latestUnitName","Unit_Name","Pro_Group","Product_Group","Brand_Name","size","Edit","filter","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","_ref2","method","bodyData","o","isGraterNumber","message","finally","Save","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","UOM_Id","productIndex","findIndex","item","productData","prev","slice","DialogContent","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","UOM_Name","readOnly","DialogActions","ClearAll","taxCalc","percentage","RoundNumber","download","actionOpen","clearDetails","TitleText","pageSize","setPageSize","a4Styles","width","minHeight","padding","backgroundColor","boxSizing","boxShadow","fontFamily","lineHeight","display","flexDirection","flexGrow","margin","a5Styles","setOpen","retailerInfo","setRetailerInfo","printRef","useRef","isExclusiveBill","handleClose","includedProducts","orderProduct","totalValueBeforeTax","itemRate","billQty","parseInt","TotalValue","itemTax","basePrice","Subraction","TotalTax","handlePrint","useReactToPrint","content","current","pageStyle","extraDetails","labelOne","dataOne","Do_Inv_No","labelTwo","dataTwo","LocalDate","TaxData","HSNindex","hsnCode","newValue","taxableValue","totalTax","newEntry","cgstPercentage","sgstPercentage","igstPercentage","handleOpen","alignItems","overflow","maxHeight","textAlign","marginTop","zIndex","ref","justifyContent","height","Region","Pincode","Gst_Number","State","Mobile_No","Reatailer_Address","Reatailer_City","PinCode","Gstno","StateGet","detail","index","productChunks","i","chunk","chunkIndex","React","globalIndex","quantity","Total_Invoice_value","IGST_Total","CSGT_Total","SGST_Total","Round_off","pageBreakAfter","visibility","border","verticalAlign","sum","px","checked","handleToggle","htmlFor","gap","Close","Download","onToggle","triggerReload","saleOrders","setSaleOrders","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","setDeliveryPerson","filters","setFilters","Fromdate","getPreviousDate","Todate","RetailerGet","CreatedByGet","Sales_Person_Id","Sales_Person_Name","Cancel_status","tempFilters","setTempFilters","pageLoad","setPageLoad","dialog","setDialog","saleOrderColumn","Tooltip","title","onFocus","blur","Visibility","openDeleteDialog","itemData","closeDialog","Card","FilterAlt","Switch","inputProps","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","NewDeliveryOrder","Object","keys","DeliveryInvoiceTemplate","Order_Id","User_Id","UserGet","menu","provided","menuPortalTarget","document","body","menuPosition"],"sourceRoot":""}