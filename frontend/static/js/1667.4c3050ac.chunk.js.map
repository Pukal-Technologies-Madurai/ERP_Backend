{"version":3,"file":"static/js/1667.4c3050ac.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Reports/calendar.jsx"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\n\r\nconst ReportCalendar = () => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValueFilter = {\r\n        Emp_Id: '',\r\n        Project_Id: 0,\r\n        Task_Id: 0,\r\n        Process_Id: 0,\r\n        from: new Date().toISOString().split('T')[0],\r\n        to: new Date().toISOString().split('T')[0],\r\n        EmpGet: 'All Employee',\r\n        ProjectGet: 'All Project',\r\n        TaskGet: 'All Task',\r\n        ProcessGet: 'All Process'\r\n    }\r\n    const [workedDetais, setWorkedDetais] = useState([]);\r\n    const [groupedProcessData, setGroupedProcessData] = useState([]);\r\n    const [processDetails, setProcessDetails] = useState([]);\r\n    const [selectedTask, setSelectedTask] = useState({});\r\n    const [selectedProcessDay, setSelectedProcessDay] = useState({});\r\n    const [selectedEmployee, setSelectedEmployee] = useState('');\r\n    const [dialog, setDialog] = useState(false);\r\n    const [processDayDialog, setProcessDayDialog] = useState(false);\r\n    const [filters, setFileters] = useState(initialValueFilter);\r\n    const [projects, setProjects] = useState([]);\r\n    const [usersDropDown, setUsersDropdown] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [viewMode, setViewMode] = useState('task'); \r\n\r\n    useEffect(() => {\r\n        let address = `taskManagement/task/work?Emp_Id=${filters.Emp_Id}&Project_Id=${filters.Project_Id}&from=${filters.from}&to=${filters.to}&Task_Id=${filters.Task_Id}`;\r\n        \r\n        if (viewMode === 'process') {\r\n            address += `&Process_Id=${filters.Process_Id}`;\r\n        }\r\n        \r\n        fetchLink({\r\n            address: address\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setWorkedDetais(data.data);\r\n                \r\n             \r\n                if (viewMode === 'process') {\r\n                    const grouped = groupProcessDataByDate(data.data);\r\n                    setGroupedProcessData(grouped);\r\n                }\r\n            }\r\n        }).catch(e => console.error(e))    \r\n    }, [filters, viewMode])\r\n\r\n\r\n    const groupProcessDataByDate = (data) => {\r\n        const grouped = {};\r\n        \r\n        data.forEach(item => {\r\n            const date = new Date(item.Work_Dt).toISOString().split('T')[0];\r\n            \r\n            if (!grouped[date]) {\r\n                grouped[date] = {\r\n                    date: date,\r\n                    processes: [],\r\n                    totalMinutes: 0,\r\n                    totalTasks: 0,\r\n                    employees: new Set(),\r\n                    employeeDetails: {},\r\n                    processCount: {}\r\n                };\r\n            }\r\n            \r\n         \r\n            if (item.Process_Name) {\r\n                if (!grouped[date].processCount[item.Process_Name]) {\r\n                    grouped[date].processCount[item.Process_Name] = 0;\r\n                }\r\n                grouped[date].processCount[item.Process_Name]++;\r\n            }\r\n            \r\n     \r\n            grouped[date].processes.push(item);\r\n            \r\n        \r\n            grouped[date].totalMinutes += parseInt(item.Tot_Minutes) || 0;\r\n            grouped[date].totalTasks++;\r\n            \r\n          \r\n            if (item.EmployeeName && item.Emp_Id) {\r\n                grouped[date].employees.add(item.EmployeeName);\r\n                \r\n                const empId = item.Emp_Id.toString();\r\n                \r\n                if (!grouped[date].employeeDetails[empId]) {\r\n                    grouped[date].employeeDetails[empId] = {\r\n                        id: empId,\r\n                        name: item.EmployeeName,\r\n                        tasks: [],\r\n                        totalMinutes: 0\r\n                    };\r\n                }\r\n                grouped[date].employeeDetails[empId].tasks.push(item);\r\n                grouped[date].employeeDetails[empId].totalMinutes += parseInt(item.Tot_Minutes) || 0;\r\n            }\r\n        });\r\n        \r\n \r\n        return Object.values(grouped).map(day => ({\r\n            ...day,\r\n            employeeCount: day.employees.size,\r\n            topProcesses: Object.entries(day.processCount)\r\n                .sort((a, b) => b[1] - a[1])\r\n                .slice(0, 3)\r\n                .map(([name, count]) => `${name} (${count})`)\r\n                .join(', '),\r\n            employeesList: Object.values(day.employeeDetails)\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/project/dropDown?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProjects(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n        \r\n        fetchLink({\r\n            address: `masters/users/employee/dropDown?BranchId=${parseData?.BranchId}&Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsersDropdown(data?.data?.sort((a, b) => String(a?.Name).localeCompare(b?.Name)))\r\n            }\r\n        }).catch(e => console.error(e))\r\n        \r\n        fetchLink({\r\n            address: `taskManagement/task/assignEmployee/task/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTasks(data?.data?.sort((a, b) => String(a?.Task_Name).localeCompare(b?.Task_Name)))\r\n            }\r\n        }).catch(e => console.error(e))\r\n        \r\n        fetchLink({\r\n            address: `taskManagement/processMaster/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProcessDetails(data.data)\r\n            }\r\n        }).catch(e => console.error(e))            \r\n    }, [parseData?.BranchId])\r\n\r\n    const formatTime24 = (time24) => {\r\n        const [hours, minutes] = time24.split(':').map(Number);\r\n\r\n        let hours12 = hours % 12;\r\n        hours12 = hours12 || 12;\r\n        const period = hours < 12 ? 'AM' : 'PM';\r\n        const formattedHours = hours12 < 10 ? '0' + hours12 : hours12;\r\n        const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\r\n        const time12 = `${formattedHours}:${formattedMinutes} ${period}`;\r\n\r\n        return time12;\r\n    }\r\n\r\n    const getEventTitle = (item) => {\r\n        if (viewMode === 'task') {\r\n            return item?.Task_Name;\r\n        } else {\r\n            const dayData = groupedProcessData.find(d => d.date === new Date(item.Work_Dt).toISOString().split('T')[0]);\r\n            if (dayData) {\r\n                return `${dayData.totalTasks} tasks | ${dayData.totalMinutes}m | ${dayData.employeeCount} emp`;\r\n            }\r\n            return item?.Process_Name || 'No Process';\r\n        }\r\n    }\r\n\r\n    const getCalendarTitle = () => {\r\n        return viewMode === 'task' ? 'Completed Tasks' : 'Process Timeline (Cumulative)';\r\n    }\r\n\r\n    const handleDateClick = (info) => {\r\n        if (viewMode === 'process') {\r\n            const clickedDate = info.dateStr;\r\n            const dayData = groupedProcessData.find(d => d.date === clickedDate);\r\n            \r\n            if (dayData) {\r\n                setSelectedProcessDay(dayData);\r\n                setSelectedEmployee('');\r\n                setProcessDayDialog(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEventBackgroundColor = (item) => {\r\n        if (viewMode === 'task') {\r\n            return '#3788d8';\r\n        } else {\r\n            const dayData = groupedProcessData.find(d => d.date === new Date(item.Work_Dt).toISOString().split('T')[0]);\r\n            if (dayData) {\r\n                if (dayData.totalMinutes > 480) return '#28a745';\r\n                if (dayData.totalMinutes > 240) return '#ffc107';\r\n                return '#dc3545';\r\n            }\r\n            return '#28a745';\r\n        }\r\n    }\r\n\r\n   \r\n    const getFilteredTasks = () => {\r\n        if (!selectedProcessDay || !selectedProcessDay.processes) {\r\n            return [];\r\n        }\r\n        \r\n        if (!selectedEmployee) {\r\n            return selectedProcessDay.processes;\r\n        }\r\n        \r\n        return selectedProcessDay.processes.filter(task => {\r\n            return task.Emp_Id && task.Emp_Id.toString() === selectedEmployee.toString();\r\n        });\r\n    }\r\n\r\n    function formatMinutesToHours(totalMinutes) {\r\n  const hours = Math.floor(totalMinutes / 60);\r\n  const minutes = totalMinutes % 60;\r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  }\r\n  return `${minutes}m`;\r\n}\r\nconst totalMinutes = getFilteredTasks().reduce(\r\n  (total, task) => total + (parseInt(task.Tot_Minutes) || 0),\r\n  0\r\n);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mb-3\">\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <div className=\"toggle-container bg-light rounded-pill p-1 d-flex\">\r\n                        <button\r\n                            className={`btn rounded-pill px-4 ${viewMode === 'task' ? 'btn-primary' : 'btn-light'}`}\r\n                            onClick={() => setViewMode('task')}\r\n                        >\r\n                            Task View\r\n                        </button>\r\n                        <button\r\n                            className={`btn rounded-pill px-4 ${viewMode === 'process' ? 'btn-primary' : 'btn-light'}`}\r\n                            onClick={() => setViewMode('process')}\r\n                        >\r\n                            Process View\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\r\n                    <Select\r\n                        value={{ value: filters?.Emp_Id, label: filters?.EmpGet }}\r\n                        onChange={(e) => setFileters({ ...filters, Emp_Id: e.value, EmpGet: e.label })}\r\n                        options={[{ value: '', label: 'All Employee' }, ...usersDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Employee Name\"} />\r\n                </div>\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\r\n                    <Select\r\n                        value={{ value: filters?.Project_Id, label: filters?.ProjectGet }}\r\n                        onChange={(e) => setFileters({ ...filters, Project_Id: e.value, ProjectGet: e.label })}\r\n                        options={[...projects.map(obj => ({ value: obj.Project_Id, label: Number(obj.Project_Id) === 0 ? 'All Project' : obj.Project_Name }))]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Project Title\"} />\r\n                </div>\r\n                \r\n                {viewMode === 'task' && (\r\n                    <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\r\n                        <Select\r\n                            value={{ value: filters?.Task_Id, label: filters?.TaskGet }}\r\n                            onChange={(e) => setFileters({ ...filters, Task_Id: e.value, TaskGet: e.label })}\r\n                            options={[{ value: 0, label: 'All Task' }, ...tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }))]}\r\n                            styles={customSelectStyles}\r\n                            isSearchable={true}\r\n                            placeholder={\"Select Task\"} />\r\n                    </div>\r\n                )}\r\n                \r\n                {viewMode === 'process' && (\r\n                    <div className=\"col-xxl-2 col-lg-3 col-md-4 col-sm-4 p-2\">\r\n                        <Select\r\n                            value={{ value: filters?.Process_Id, label: filters?.ProcessGet }}\r\n                            onChange={(e) => setFileters({ ...filters, Process_Id: e.value, ProcessGet: e.label })}\r\n                            options={[{ value: 0, label: 'All Process' }, ...processDetails.map(obj => ({ value: obj.Id, label: obj.Process_Name }))]}\r\n                            styles={customSelectStyles}\r\n                            isSearchable={true}\r\n                            placeholder={\"Select Process\"} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"px-3 py-2 calendar\" >\r\n                <h4 className=\"mb-3 text-center text-primary\">{getCalendarTitle()}</h4>\r\n\r\n                <FullCalendar\r\n                    plugins={[timeGridPlugin, listPlugin, dayGridPlugin, interactionPlugin]}\r\n                    initialView=\"dayGridMonth\"\r\n                    initialDate={new Date()}\r\n                    events={\r\n                        viewMode === 'task' \r\n                            ? workedDetais.map(o => ({\r\n                                title: getEventTitle(o),\r\n                                start: new Date(o?.Work_Dt).toISOString().split('T')[0] + 'T' + o?.Start_Time,\r\n                                end: new Date(o?.Work_Dt).toISOString().split('T')[0] + 'T' + o?.End_Time,\r\n                                objectData: o,\r\n                                backgroundColor: getEventBackgroundColor(o),\r\n                                borderColor: getEventBackgroundColor(o)\r\n                            }))\r\n                            : groupedProcessData.map(day => ({\r\n                                title: getEventTitle({ Work_Dt: day.date }),\r\n                                start: day.date,\r\n                                allDay: true,\r\n                                objectData: day,\r\n                                backgroundColor: getEventBackgroundColor({ Work_Dt: day.date }),\r\n                                borderColor: getEventBackgroundColor({ Work_Dt: day.date })\r\n                            }))\r\n                    }\r\n                    headerToolbar={{\r\n                        left: 'prev next',\r\n                        center: 'title',\r\n                        right: 'timeGridDay, timeGridWeek, dayGridMonth, listMonth',\r\n                    }}\r\n                    slotDuration={'00:20:00'}\r\n                    slotMinTime={'08:00:00'}\r\n                    slotMaxTime={'22:00:00'}\r\n                    showNonCurrentDates={false}\r\n                    editable={false}\r\n                    selectMirror\r\n                    eventClick={eve => {\r\n                        if (viewMode === 'task') {\r\n                            const eveObj = eve.event.extendedProps.objectData;\r\n                            setSelectedTask(eveObj);\r\n                            setDialog(true);\r\n                        } else {\r\n                            const dayData = eve.event.extendedProps.objectData;\r\n                            setSelectedProcessDay(dayData);\r\n                            setSelectedEmployee('');\r\n                            setProcessDayDialog(true);\r\n                        }\r\n                    }}\r\n                    dateClick={handleDateClick}\r\n                    datesSet={date => {\r\n                        setFileters(pre => ({ ...pre, from: date.startStr.split('T')[0], to: date.endStr.split('T')[0] }))\r\n                    }}\r\n                    height={1200}\r\n                />\r\n            </div>\r\n\r\n        \r\n            <Dialog\r\n                open={dialog} maxWidth=\"sm\" fullWidth\r\n                onClose={() => { setDialog(false); setSelectedTask({}) }}>\r\n                <DialogTitle className=\"fa-18\">\r\n                    Task Details\r\n                </DialogTitle>\r\n                <DialogContent className=\"pb-0\">\r\n                    <div className=\"table-responsive pb-0\">\r\n                        <table className=\"table mb-0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">EmpName</td>\r\n                                    <td className=\"border-1 fa-14\">{selectedTask?.EmployeeName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Task</td>\r\n                                    <td className=\"border-1 fa-14\">{selectedTask?.Task_Name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">ProcessName</td>\r\n                                    <td className=\"border-1 fa-14\">{selectedTask?.Process_Name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Date</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.Work_Dt && new Date(selectedTask?.Work_Dt).toLocaleDateString('en-IN', {\r\n                                            day: '2-digit', month: '2-digit', year: 'numeric'\r\n                                        })}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Start Time</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.Start_Time && formatTime24(selectedTask?.Start_Time)}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">End Time</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.End_Time && formatTime24(selectedTask?.End_Time)}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Duration</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.Tot_Minutes} ( Minutes )\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Description</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.Work_Done}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Status</td>\r\n                                    <td className=\"border-1 fa-14\">\r\n                                        {selectedTask?.WorkStatus}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-1 fa-14\">Project</td>\r\n                                    <td className=\"border-1 fa-14\">{selectedTask?.Project_Name}</td>\r\n                                </tr>\r\n                                {selectedTask?.Work_Param?.length > 0 && (\r\n                                    <tr>\r\n                                        <td colSpan={2} className=\"border-1 fa-14 text-center text-uppercase\">Parameter Values</td>\r\n                                    </tr>\r\n                                )}\r\n                                {selectedTask?.Work_Param?.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border-1 fa-14\">{o?.Paramet_Name}</td>\r\n                                        <td className=\"border-1 fa-14\">{o?.Current_Value}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setDialog(false); setSelectedTask({}) }}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n          \r\n            <Dialog\r\n                open={processDayDialog} maxWidth=\"lg\" fullWidth\r\n                onClose={() => { setProcessDayDialog(false); setSelectedProcessDay({}); setSelectedEmployee(''); }}>\r\n                <DialogTitle className=\"fa-18\">\r\n                    Process Summary - {selectedProcessDay?.date && new Date(selectedProcessDay.date).toLocaleDateString('en-IN', {\r\n                        day: '2-digit', month: '2-digit', year: 'numeric'\r\n                    })}\r\n                </DialogTitle>\r\n                <DialogContent className=\"pb-0\">\r\n                    {/* Employee Selection Dropdown */}\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label fw-bold\">Select Employee:</label>\r\n                            <Select\r\n                                value={selectedEmployee ? \r\n                                    { \r\n                                        value: selectedEmployee, \r\n                                        label: selectedProcessDay.employeeDetails?.[selectedEmployee]?.name || 'Unknown Employee'\r\n                                    } \r\n                                    : { value: '', label: 'All Employees' }\r\n                                }\r\n                                onChange={(e) => setSelectedEmployee(e.value)}\r\n                                options={[\r\n                                    { value: '', label: 'All Employees' },\r\n                                    ...(selectedProcessDay.employeesList?.map(emp => ({\r\n                                        value: emp.id,\r\n                                        label: `${emp.name} (${emp.tasks?.length || 0} tasks, ${emp.totalMinutes || 0} mins)`\r\n                                    })) || [])\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder=\"Select Employee\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6 d-flex align-items-end\">\r\n                            <div className=\"text-muted fa-14\">\r\n                                {selectedEmployee ? \r\n                                    `Showing tasks for ${selectedProcessDay.employeeDetails?.[selectedEmployee]?.name || 'Unknown'}` \r\n                                    : `Showing all ${selectedProcessDay.totalTasks || 0} tasks from ${selectedProcessDay.employeeCount || 0} employees`\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                  \r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body text-center p-2\">\r\n                                    <h6 className=\"card-title mb-1\">Total Tasks</h6>\r\n                                    <p className=\"card-text h4 text-primary mb-0\">{getFilteredTasks().length}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body text-center p-2\">\r\n                                    <h6 className=\"card-title mb-1\">Total Duration</h6>\r\n                                    <p className=\"card-text h4 text-success mb-0\">\r\n                                        {/* {getFilteredTasks().reduce((total, task) => total + (parseInt(task.Tot_Minutes) || 0), 0)}m */}\r\n                                         {formatMinutesToHours(totalMinutes)}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body text-center p-2\">\r\n                                    <h6 className=\"card-title mb-1\">Processes</h6>\r\n                                    <p className=\"card-text h4 text-info mb-0\">\r\n                                        {[...new Set(getFilteredTasks().map(task => task.Process_Name))].length}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card bg-light\">\r\n                                <div className=\"card-body text-center p-2\">\r\n                                    <h6 className=\"card-title mb-1\">Projects</h6>\r\n                                    <p className=\"card-text h4 text-warning mb-0\">\r\n                                        {[...new Set(getFilteredTasks().map(task => task.Project_Name))].length}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n               \r\n                    <div className=\"table-responsive pb-0\">\r\n                        <table className=\"table table-bordered mb-0\">\r\n                            <thead className=\"bg-light\">\r\n                                <tr>\r\n                                    <th className=\"fa-14\">#</th>\r\n                                    <th className=\"fa-14\">Employee</th>\r\n                                    <th className=\"fa-14\">Task</th>\r\n                                    <th className=\"fa-14\">Process</th>\r\n                                    <th className=\"fa-14\">Time</th>\r\n                                    <th className=\"fa-14\">Duration</th>\r\n                                    <th className=\"fa-14\">Description</th>\r\n                                    <th className=\"fa-14\">Project</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getFilteredTasks().length === 0 ? (\r\n                                    <tr>\r\n                                        <td colSpan=\"8\" className=\"text-center fa-14 py-3\">\r\n                                            No tasks found for the selected criteria\r\n                                        </td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    getFilteredTasks().map((task, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className=\"fa-13\">{index + 1}</td>\r\n                                            <td className=\"fa-13\">{task.EmployeeName}</td>\r\n                                            <td className=\"fa-13\">{task.Task_Name}</td>\r\n                                            <td className=\"fa-13\">{task.Process_Name}</td>\r\n                                            <td className=\"fa-13\">\r\n                                                {task.Start_Time && formatTime24(task.Start_Time)} - {task.End_Time && formatTime24(task.End_Time)}\r\n                                            </td>\r\n                                            <td className=\"fa-13\">{task.Tot_Minutes} mins</td>\r\n                                            <td className=\"fa-13\">{task.Work_Done}</td>\r\n                                            <td className=\"fa-13\">{task.Project_Name}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setProcessDayDialog(false); setSelectedProcessDay({}); setSelectedEmployee(''); }}>\r\n                        close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReportCalendar;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","ReportCalendar","_selectedTask$Work_Pa","_selectedTask$Work_Pa2","_selectedProcessDay$e","_selectedProcessDay$e2","_selectedProcessDay$e3","_selectedProcessDay$e4","_selectedProcessDay$e5","localData","localStorage","getItem","parseData","JSON","parse","initialValueFilter","Emp_Id","Project_Id","Task_Id","Process_Id","from","Date","toISOString","split","to","EmpGet","ProjectGet","TaskGet","ProcessGet","workedDetais","setWorkedDetais","useState","groupedProcessData","setGroupedProcessData","processDetails","setProcessDetails","selectedTask","setSelectedTask","selectedProcessDay","setSelectedProcessDay","selectedEmployee","setSelectedEmployee","dialog","setDialog","processDayDialog","setProcessDayDialog","filters","setFileters","projects","setProjects","usersDropDown","setUsersDropdown","tasks","setTasks","viewMode","setViewMode","useEffect","concat","fetchLink","then","data","success","grouped","groupProcessDataByDate","catch","e","console","error","forEach","item","date","Work_Dt","processes","totalMinutes","totalTasks","employees","Set","employeeDetails","processCount","Process_Name","push","parseInt","Tot_Minutes","EmployeeName","add","empId","toString","Object","values","map","day","employeeCount","size","topProcesses","entries","sort","a","b","slice","_ref","count","join","employeesList","Company_id","BranchId","_data$data","String","Name","localeCompare","_data$data2","Task_Name","formatTime24","time24","hours","minutes","Number","hours12","period","formattedMinutes","getEventTitle","dayData","find","d","getEventBackgroundColor","getFilteredTasks","filter","task","reduce","total","_jsxs","_Fragment","children","_jsx","className","onClick","Select","value","label","onChange","options","obj","UserId","styles","isSearchable","placeholder","Project_Name","Id","FullCalendar","plugins","timeGridPlugin","listPlugin","dayGridPlugin","interactionPlugin","initialView","initialDate","events","o","title","start","Start_Time","end","End_Time","objectData","borderColor","allDay","headerToolbar","left","center","right","slotDuration","slotMinTime","slotMaxTime","showNonCurrentDates","editable","selectMirror","eventClick","eve","eveObj","event","extendedProps","dateClick","info","clickedDate","dateStr","datesSet","pre","startStr","endStr","height","Dialog","open","maxWidth","fullWidth","onClose","DialogTitle","DialogContent","toLocaleDateString","month","year","Work_Done","WorkStatus","Work_Param","length","colSpan","i","Paramet_Name","Current_Value","DialogActions","Button","emp","_emp$tasks","Math","floor","formatMinutesToHours","index"],"sourceRoot":""}