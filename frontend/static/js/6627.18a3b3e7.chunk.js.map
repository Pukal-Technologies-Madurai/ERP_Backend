{"version":3,"file":"static/js/6627.18a3b3e7.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","Components/requiredStar.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","Pages/Receipts/ReceiptMaster/variable.js","Components/tablecolumn.js","Pages/Receipts/ReceiptMaster/receiptGeneralInfo.jsx","Pages/Receipts/ReceiptMaster/addReceipt.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    is_new_ref: 0,\r\n    is_journal_type: 0,\r\n    transaction_type: '',\r\n\r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n\r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n\r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];\r\n\r\nexport const transactionTypes = [\r\n    {\r\n        label: 'Select',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'ATM',\r\n        value: 'ATM'\r\n    },\r\n    {\r\n        label: 'Card',\r\n        value: 'Card'\r\n    },\r\n    {\r\n        label: 'Cash',\r\n        value: 'Cash'\r\n    },\r\n    {\r\n        label: 'Cheque/DD',\r\n        value: 'Cheque/DD'\r\n    },\r\n    {\r\n        label: 'ECS',\r\n        value: 'ECS'\r\n    },\r\n    {\r\n        label: 'e-Fund Transfer',\r\n        value: 'e-Fund Transfer'\r\n    },\r\n    {\r\n        label: 'Electronic Cheque',\r\n        value: 'Electronic Cheque'\r\n    },\r\n    {\r\n        label: 'Electronic DD/PO',\r\n        value: 'Electronic DD/PO'\r\n    },\r\n    {\r\n        label: 'UPI',\r\n        value: 'UPI'\r\n    },\r\n    {\r\n        label: 'Others',\r\n        value: 'Others'\r\n    },\r\n]","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { useState } from \"react\";\r\nimport { checkIsNumber, isEqualNumber, reactSelectFilterLogic, stringCompare, toArray, toNumber } from \"../../../Components/functions\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { receiptTypes, transactionTypes } from \"./variable\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from \"react-select\";\r\n\r\nconst ReceiptGeneralInfo = ({\r\n    receiptValue = {},\r\n    setReceiptValue,\r\n    initialSelectValue = { value: '', label: '' },\r\n    accountGroupData = [],\r\n    accountsList = [],\r\n    voucherType = [],\r\n    defaultBankMaster = []\r\n}) => {\r\n\r\n    const [selectedDebitGroup, setSelectedDebitGroup] = useState(initialSelectValue);\r\n    const [selectedCreditGroup, setSelectedCreditGroup] = useState(initialSelectValue);\r\n    const [filteredDebitAccounts, setFilteredDebitAccounts] = useState([]);\r\n    const [filteredCreditAccounts, setFilteredCreditAccounts] = useState([]);\r\n\r\n    const onChangeReceiptValue = (key, value) => {\r\n        setReceiptValue(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    // recursive function to get all child group ids\r\n    function getAllChildGroupIds(groupId, groupList, visited = new Set()) {\r\n        // Prevent circular recursion\r\n        if (visited.has(groupId)) return [];\r\n\r\n        visited.add(groupId);\r\n        let result = [groupId]; // include current group\r\n\r\n        const children = groupList.filter(group => isEqualNumber(group.Parent_AC_id, groupId));\r\n\r\n        for (const child of children) {\r\n            result = result.concat(getAllChildGroupIds(child.Group_Id, groupList, visited));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function filterAccountsByGroupIds(selectedGroupId, accountGroups, accountsList) {\r\n        const validGroupIds = getAllChildGroupIds(selectedGroupId, accountGroups);\r\n        return accountsList.filter(account => validGroupIds.includes(account.Group_Id));\r\n    }\r\n\r\n    const handleGroupSelect = (groupId, groupValue, type) => {\r\n        const filtered = filterAccountsByGroupIds(groupId, accountGroupData, accountsList);\r\n\r\n        if (type === 'debit') {\r\n            setSelectedDebitGroup({ value: groupId, label: groupValue });\r\n            setFilteredDebitAccounts(filtered);\r\n        } else {\r\n            setSelectedCreditGroup({ value: groupId, label: groupValue });\r\n            setFilteredCreditAccounts(filtered);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row p-2 pb-0\">\r\n\r\n                <div className=\"col-12 p-2\">\r\n                    <h5 className=\" border-start border-primary border-3 p-2 m-0\">Receipt Info</h5>\r\n                </div>\r\n\r\n                {/* date */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Date<RequiredStar /></label>\r\n                    <input\r\n                        type=\"date\"\r\n                        required\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.receipt_date}\r\n                        onChange={e => onChangeReceiptValue('receipt_date', e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                {/* bill type */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Bill Type<RequiredStar /></label>\r\n                    <select\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.receipt_bill_type}\r\n                        onChange={e => onChangeReceiptValue('receipt_bill_type', toNumber(e.target.value))}\r\n                        required\r\n                        disabled={checkIsNumber(receiptValue.receipt_id)}\r\n                    >\r\n                        <option value=\"\" disabled>Select</option>\r\n                        {receiptTypes.map(\r\n                            (type, ind) => <option value={type.value} key={ind}>{type.label}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* voucher type */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Voucher<RequiredStar /></label>\r\n                    <select\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.receipt_voucher_type_id}\r\n                        onChange={e => onChangeReceiptValue('receipt_voucher_type_id', e.target.value)}\r\n                        required\r\n                        disabled={checkIsNumber(receiptValue.receipt_id)}\r\n                    >\r\n                        <option value=\"\" disabled>Select</option>\r\n                        {toArray(voucherType).filter(\r\n                            fil => stringCompare(fil.Type, 'RECEIPT')\r\n                        ).map(\r\n                            (voucher, vouInd) => (\r\n                                <option value={voucher.Vocher_Type_Id} key={vouInd}>{voucher.Voucher_Type}</option>\r\n                            )\r\n                        )}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Status */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Status</label>\r\n                    <select\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.status}\r\n                        onChange={e => onChangeReceiptValue('status', e.target.value)}\r\n                    >\r\n                        <option value=\"\" disabled>Select</option>\r\n                        <option value=\"1\">New</option>\r\n                        <option value=\"2\">Progess</option>\r\n                        <option value=\"3\">Completed</option>\r\n                        <option value=\"0\">Canceled</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* amount */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Amount<RequiredStar /></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        required\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.credit_amount || ''}\r\n                        onChange={e => onChangeReceiptValue('credit_amount', e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                {/* transaction type */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Transaction Type</label>\r\n                    <select\r\n                        value={receiptValue.transaction_type || ''}\r\n                        onChange={e => onChangeReceiptValue('transaction_type', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                        required\r\n                    >\r\n                        {transactionTypes.map((type, ind) => (\r\n                            <option value={type.value} key={ind}>{type.label}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2 d-flex flex-column justify-content-end\">\r\n                    <div>\r\n                        <input\r\n                            className=\"form-check-input shadow-none pointer mx-2\"\r\n                            style={{ padding: '0.7em' }}\r\n                            type=\"checkbox\"\r\n                            id=\"isNewRef\"\r\n                            checked={isEqualNumber(receiptValue?.is_new_ref, 1)}\r\n                            onChange={() => {\r\n                                if (isEqualNumber(receiptValue?.is_new_ref, 1))\r\n                                    onChangeReceiptValue('is_new_ref', 0)\r\n                                else\r\n                                    onChangeReceiptValue('is_new_ref', 1)\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"isNewRef\" className=\"fw-bold\">is New-Ref?</label>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"form-check-input shadow-none pointer mx-2\"\r\n                            style={{ padding: '0.7em' }}\r\n                            type=\"checkbox\"\r\n                            id=\"isJournalType\"\r\n                            checked={isEqualNumber(receiptValue?.is_journal_type, 1)}\r\n                            onChange={() => {\r\n                                if (isEqualNumber(receiptValue?.is_journal_type, 1))\r\n                                    onChangeReceiptValue('is_journal_type', 0)\r\n                                else\r\n                                    onChangeReceiptValue('is_journal_type', 1)\r\n                            }}\r\n                        />\r\n                        <label htmlFor=\"isJournalType\" className=\"fw-bold\">is Journal Type?</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <hr className=\" text-dark\" />\r\n                </div>\r\n\r\n                <div className=\"col-12 p-2\">\r\n                    <h5 className=\" border-start border-primary border-3 p-2 m-0\">Ledger Info</h5>\r\n                </div>\r\n\r\n                {/* debit group */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Debit Group</label>\r\n                    <Select\r\n                        value={selectedDebitGroup}\r\n                        options={[\r\n                            { value: '', label: 'select' },\r\n                            ...accountGroupData.map(group => ({\r\n                                value: group.Group_Id,\r\n                                label: group.Group_Name\r\n                            }))\r\n                        ]}\r\n                        menuPortalTarget={document.body}\r\n                        onChange={e => handleGroupSelect(e.value, e.label, 'debit')}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                {/* debit account */}\r\n                <div className=\"col-lg-5 col-md-6 col-sm-6 p-2\">\r\n                    <label>Debit Account<RequiredStar /></label>\r\n                    <Select\r\n                        value={{\r\n                            value: receiptValue.debit_ledger,\r\n                            label: receiptValue.debit_ledger_name\r\n                        }}\r\n                        menuPortalTarget={document.body}\r\n                        onChange={e => {\r\n                            onChangeReceiptValue('debit_ledger', e.value);\r\n                            onChangeReceiptValue('debit_ledger_name', e.label);\r\n                        }}\r\n                        options={[\r\n                            { value: '', label: 'select', isDisabled: true },\r\n                            ...(!checkIsNumber(selectedDebitGroup.value)\r\n                                ? toArray(accountsList).map(\r\n                                    account => ({\r\n                                        value: account.Acc_Id,\r\n                                        label: account.Account_name\r\n                                    })\r\n                                )\r\n                                : filteredDebitAccounts.map(account => ({\r\n                                    value: account.Acc_Id,\r\n                                    label: account.Account_name\r\n                                }))\r\n                            )\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        required\r\n                        placeholder={\"Select Product\"}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12\"></div>\r\n\r\n                {/* credit group */}\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                    <label>Credit Group</label>\r\n                    <Select\r\n                        value={selectedCreditGroup}\r\n                        options={[\r\n                            { value: '', label: 'select' },\r\n                            ...accountGroupData.map(group => ({\r\n                                value: group.Group_Id,\r\n                                label: group.Group_Name\r\n                            }))\r\n                        ]}\r\n                        onChange={e => handleGroupSelect(e.value, e.label, 'credit')}\r\n                        menuPortalTarget={document.body}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                {/* credit account */}\r\n                <div className=\"col-lg-5 col-md-6 col-sm-6 p-2\">\r\n                    <label>Credit Account<RequiredStar /></label>\r\n                    <Select\r\n                        value={{\r\n                            value: receiptValue.credit_ledger,\r\n                            label: receiptValue.credit_ledger_name\r\n                        }}\r\n                        menuPortalTarget={document.body}\r\n                        onChange={e => {\r\n                            onChangeReceiptValue('credit_ledger', e.value);\r\n                            onChangeReceiptValue('credit_ledger_name', e.label);\r\n                        }}\r\n                        options={[\r\n                            { value: '', label: 'select', isDisabled: true },\r\n                            ...(!checkIsNumber(selectedCreditGroup.value)\r\n                                ? toArray(accountsList).map(\r\n                                    account => ({\r\n                                        value: account.Acc_Id,\r\n                                        label: account.Account_name\r\n                                    })\r\n                                )\r\n                                : filteredCreditAccounts.map(account => ({\r\n                                    value: account.Acc_Id,\r\n                                    label: account.Account_name\r\n                                }))\r\n                            )\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        required\r\n                        placeholder={\"Select Product\"}\r\n                        filterOption={reactSelectFilterLogic}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <hr className=\" text-dark\" />\r\n                </div>\r\n\r\n                <div className=\"col-12 p-2\">\r\n                    <h5 className=\" border-start border-primary border-3 p-2 m-0\">Others Details</h5>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row p-2 pb-0\">\r\n\r\n                <div className=\"col-md-6 p-2\">\r\n                    <div className=\"row\">\r\n\r\n                        {/* bank name */}\r\n                        <div className=\"col-sm-6 p-2\">\r\n                            <label>Bank Name</label>\r\n                            <Select\r\n                                value={{ value: receiptValue.bank_name, label: receiptValue.bank_name }}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => onChangeReceiptValue('bank_name', e.value)}\r\n                                options={[\r\n                                    { value: '', label: 'Select' },\r\n                                    ...toArray(defaultBankMaster).map(bank => ({\r\n                                        value: bank.label,\r\n                                        label: bank.label\r\n                                    }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                                        filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* bank date */}\r\n                        <div className=\"col-sm-6 p-2\">\r\n                            <label>Bank Date</label>\r\n                            <input\r\n                                value={receiptValue.bank_date}\r\n                                type=\"date\"\r\n                                className=\"cus-inpt p-2\"\r\n                                onChange={e => onChangeReceiptValue('bank_date', e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* cheque no */}\r\n                        <div className=\"col-sm-6 p-2\">\r\n                            <label>Cheque No</label>\r\n                            <input\r\n                                value={receiptValue.check_no}\r\n                                className=\"cus-inpt p-2\"\r\n                                onChange={e => onChangeReceiptValue('check_no', e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Cheque date */}\r\n                        <div className=\"col-sm-6 p-2\">\r\n                            <label>Cheque Date</label>\r\n                            <input\r\n                                value={receiptValue.check_date}\r\n                                type=\"date\"\r\n                                className=\"cus-inpt p-2\"\r\n                                onChange={e => onChangeReceiptValue('check_date', e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Narration */}\r\n                <div className=\"col-md-6 p-3\">\r\n                    <label>Narration </label>\r\n                    <textarea\r\n                        className=\"cus-inpt p-2\"\r\n                        value={receiptValue.remarks}\r\n                        onChange={e => onChangeReceiptValue('remarks', e.target.value)}\r\n                        rows={5}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReceiptGeneralInfo;","import { useEffect, useState } from \"react\";\r\nimport { receiptGeneralInfoInitialValue } from \"./variable\";\r\nimport { Button, Card, CardContent } from '@mui/material';\r\nimport { checkIsNumber, isArray, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ReceiptGeneralInfo from \"./receiptGeneralInfo\";\r\n\r\n\r\nconst AddPaymentMaster = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n\r\n    const [receiptValue, setReceiptValue] = useState(receiptGeneralInfoInitialValue);\r\n    const [receiptBillDetails, setReceiptBillDetails] = useState([]);\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        accountsList: [],\r\n        accountGroupData: [],\r\n        voucherType: [],\r\n        defaultBankMaster: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (\r\n            isValidObject(editValues)\r\n        ) {\r\n            setReceiptValue(\r\n                Object.fromEntries(\r\n                    Object.entries(receiptGeneralInfoInitialValue).map(([key, value]) => {\r\n                        if (key === 'receipt_date') return [key, editValues[key] ? ISOString(editValues[key]) : value]\r\n                        if (key === 'check_date') return [key, editValues[key] ? ISOString(editValues[key]) : value]\r\n                        if (key === 'bank_date') return [key, editValues[key] ? ISOString(editValues[key]) : value]\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n        }\r\n\r\n        if (isArray(editValues?.BillsDetails) && editValues?.BillsDetails?.length > 0) {\r\n            setReceiptBillDetails(editValues?.BillsDetails);\r\n        }\r\n    }, [editValues])\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    accountsResponse,\r\n                    accountsGroupResponse,\r\n                    voucherTypeResponse,\r\n                    defaultBankMaster,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `payment/accounts` }),\r\n                    fetchLink({ address: `payment/accountGroup` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/defaultBanks` }),\r\n                ]);\r\n\r\n                const accountsList = (accountsResponse.success ? accountsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Account_name).localeCompare(b?.Account_name)\r\n                );\r\n                const accountGroupData = (accountsGroupResponse.success ? accountsGroupResponse.data : []).sort(\r\n                    (a, b) => String(a?.Group_Name).localeCompare(b?.Group_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const bankDetails = (defaultBankMaster.success ? defaultBankMaster.data : []);\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    accountsList: accountsList,\r\n                    accountGroupData: accountGroupData,\r\n                    voucherType: voucherType,\r\n                    defaultBankMaster: bankDetails,\r\n                }));\r\n\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    const clearValues = () => {\r\n        setReceiptValue(receiptGeneralInfoInitialValue);\r\n    };\r\n\r\n    const saveReceipt = (postValues = {}) => {\r\n        fetchLink({\r\n            address: `receipt/receiptMaster`,\r\n            method: checkIsNumber(postValues?.receipt_id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                ...postValues,\r\n                BillsDetails: receiptBillDetails\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                clearValues();\r\n                toast.success(data?.message || 'post successfully');\r\n\r\n                if (\r\n                    data.data[0]\r\n                    && isValidObject(data.data[0])\r\n                    && (\r\n                        isEqualNumber(data?.data[0]?.receipt_bill_type, 1)\r\n                        || isEqualNumber(data?.data[0]?.receipt_bill_type, 2)\r\n                    )\r\n                ) {\r\n                    navigate('/erp/receipts/listReceipts/addReference', {\r\n                        state: {\r\n                            ...data.data[0],\r\n                            ...editValues\r\n                        }\r\n                    })\r\n                } else {\r\n                    navigate('/erp/receipts/listReceipts', { state: editValues })\r\n                }\r\n\r\n            } else {\r\n                toast.error(data?.message || 'post failed')\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (!checkIsNumber(receiptValue.debit_ledger) || !checkIsNumber(receiptValue.credit_ledger)) {\r\n                        toast.warn('Select Debit-Acc / Credit-Acc!')\r\n                    } else if (receiptValue.credit_amount < 1 || !receiptValue.credit_amount) {\r\n                        toast.warn('Enter valid amount!')\r\n                    } else {\r\n                        saveReceipt(receiptValue)\r\n                    }\r\n                }}>\r\n\r\n                    <div className=\"p-2 px-3 d-flex align-items-center\">\r\n                        <h5 className=\"m-0 flex-grow-1\">Receipt Creation</h5>\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outlined\"\r\n                            className=\"mx-1\"\r\n                            onClick={() => navigate('/erp/receipts/listReceipts', { state: editValues })}\r\n                        >back</Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className=\"mx-1\"\r\n                        >Save</Button>\r\n                    </div>\r\n\r\n                    <hr className=\"my-2\" />\r\n\r\n\r\n                    <CardContent className=\"pb-0\">\r\n\r\n                        <ReceiptGeneralInfo\r\n                            receiptValue={receiptValue}\r\n                            setReceiptValue={setReceiptValue}\r\n                            accountGroupData={baseData.accountGroupData}\r\n                            accountsList={baseData.accountsList}\r\n                            voucherType={baseData.voucherType}\r\n                            defaultBankMaster={baseData.defaultBankMaster}\r\n                        />\r\n\r\n                    </CardContent>\r\n\r\n                    <hr className=\"my-2\" />\r\n\r\n                    <div className=\"d-flex justify-content-end p-2\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outlined\"\r\n                            onClick={clearValues}\r\n                            className=\"mx-1\"\r\n                        >Clear</Button>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className=\"mx-1\"\r\n                        >Save</Button>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPaymentMaster;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","RequiredStar","style","color","fontWeight","fontSize","children","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","userDetails","getSessionUser","user","receiptGeneralInfoInitialValue","receipt_id","year_id","receipt_voucher_type_id","receipt_sno","receipt_invoice_no","receipt_date","ISOString","receipt_bill_type","credit_ledger","credit_ledger_name","credit_amount","debit_ledger","debit_ledger_name","debit_amount","remarks","status","is_new_ref","is_journal_type","transaction_type","check_no","check_date","bank_name","bank_date","created_by","checkIsNumber","UserId","altered_by","created_on","alterd_on","receiptBillInfoInitialValue","auto_id","receipt_no","DR_CR_Acc_Id","bill_id","JournalBillType","bill_name","bill_amount","Debit_Amo","Credit_Amo","SalesInvoiceDate","StockJournalDate","TotalPaidAmount","PendingAmount","receiptCostingInfoInitialValue","Debit_Ledger_Id","arr_id","item_id","item_name","expence_value","itemQuantity","PaidAmount","receiptTypes","value","label","stockJournalTypes","receiptStatus","transactionTypes","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","_ref","receiptValue","setReceiptValue","initialSelectValue","accountGroupData","accountsList","voucherType","defaultBankMaster","selectedDebitGroup","setSelectedDebitGroup","useState","selectedCreditGroup","setSelectedCreditGroup","filteredDebitAccounts","setFilteredDebitAccounts","filteredCreditAccounts","setFilteredCreditAccounts","onChangeReceiptValue","key","pre","getAllChildGroupIds","groupId","groupList","visited","arguments","length","Set","has","add","result","filter","group","isEqualNumber","Parent_AC_id","child","concat","Group_Id","filterAccountsByGroupIds","selectedGroupId","accountGroups","validGroupIds","account","includes","handleGroupSelect","groupValue","type","filtered","_jsxs","_Fragment","required","onChange","e","target","toNumber","disabled","map","ind","toArray","fil","stringCompare","Type","voucher","vouInd","Vocher_Type_Id","Voucher_Type","checked","htmlFor","Select","options","Group_Name","menuPortalTarget","document","body","isSearchable","filterOption","reactSelectFilterLogic","isDisabled","Acc_Id","Account_name","placeholder","bank","loadingOn","loadingOff","navigate","useNavigate","editValues","useLocation","receiptBillDetails","setReceiptBillDetails","baseData","setBaseData","useEffect","_editValues$BillsDeta","isValidObject","Object","fromEntries","entries","_ref2","_editValues$key","isArray","BillsDetails","async","accountsResponse","accountsGroupResponse","voucherTypeResponse","Promise","all","fetchLink","success","data","sort","a","b","String","localeCompare","bankDetails","console","error","fetchData","clearValues","Card","onSubmit","preventDefault","toast","warn","postValues","method","bodyData","then","_data$data$","_data$data$2","message","catch","saveReceipt","Button","onClick","CardContent","ReceiptGeneralInfo"],"sourceRoot":""}