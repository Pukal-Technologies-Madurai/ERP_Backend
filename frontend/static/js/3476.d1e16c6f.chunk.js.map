{"version":3,"file":"static/js/3476.d1e16c6f.chunk.js","mappings":"iUAEA,MAAMA,EAAOC,aAAaC,QAAQ,QAC5BC,GAAUC,EAAAA,EAAAA,IAAYJ,GAAQK,KAAKC,MAAMN,GAAQ,CAAC,EAE3CO,EAAsB,CAC/BC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,aAAc,EACdC,cAAe,GACfC,aAAaC,EAAAA,EAAAA,MACbC,eAAeD,EAAAA,EAAAA,MACfE,YAAa,GACbC,cAAe,GACfC,cAAe,EACfC,QAAS,EACTC,UAAW,GACXC,YAAa,GACbC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,iBAAkB,EAClBC,UAAW,EACXC,oBAAqB,EACrBC,cAAe,EACfC,uBAAwB,GACxBC,WAAY5B,EAAQ6B,OACpBC,WAAY9B,EAAQ6B,OACpBE,WAAY,GACZC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbC,eAAgB,IAGPC,EAAkB,CAC3BC,QAAS,GACTC,cAAe,GACfC,UAAW,GACXC,WAAY,GACZC,QAAS,GACTrC,OAAQ,GACRK,YAAa,GACbiC,KAAM,GACNC,YAAa,GACbC,QAAS,GACTC,UAAW,GACXC,SAAU,EACVC,QAAS,EACTC,UAAW,EACXC,aAAc,EACdC,SAAU,EACVC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,aAAc,EACdC,OAAQ,EACRC,UAAW,EACXC,OAAQ,EACRC,SAAU,GACVC,eAAgB,EAChBC,SAAU,EACVC,KAAM,EACNC,SAAU,EACVC,KAAM,EACNC,SAAU,EACVC,KAAM,EACNC,SAAU,EACVC,UAAW,EACXrC,WAAY,IAGHsC,EAAkB,CAC3BC,GAAI,GACJjE,OAAQ,GACRkE,gBAAiB,GACjBC,kBAAmB,SACnBC,oBAAqB,I,sECtEzB,MA4YA,EA5YuBC,IAchB,IAADC,EAAAC,EAAA,IAdkB,SACpBC,EAAQ,cACRC,EAAgB,GAAE,iBAClBC,EAAgB,KAChBC,GAAO,EAAK,QACZC,EAAO,SACPC,EAAW,GAAE,OACbC,EAAS,GAAE,IACXC,EAAM,GAAE,QACRC,EAAU,GAAE,cACZtE,EAAa,QACbC,EAAO,WACPsE,EAAa,KAAI,aACjBC,EAAe,CAAC,GACnBb,EAEG,MAAOc,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASH,GAE/CI,GAAcC,EAAAA,EAAAA,IAAc7E,EAAe,GAC3C8E,GAAmBD,EAAAA,EAAAA,IAAc7E,EAAe,IAEtD+E,EAAAA,EAAAA,WAAU,MACFC,EAAAA,EAAAA,IAAcT,IAAeN,GAC7BS,EAAkBO,GACdC,OAAOC,YACHD,OAAOE,QAAQH,GAAKI,IAAIC,IAAA,IAAEC,EAAKC,GAAMF,EAAA,MAAK,CAACC,EAAKhB,EAAWgB,GAAOhB,EAAWgB,GAAOC,QAIjG,CAACjB,IAEJ,MAAMkB,EAAsBC,IAAS,IAAAC,EAAA,OAAqE,QAArEA,EAAa,OAARxB,QAAQ,IAARA,OAAQ,EAARA,EAAUyB,KAAKC,IAAOhB,EAAAA,EAAAA,IAAiB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAYJ,WAAW,IAAAC,EAAAA,EAAI,CAAC,GAEzGI,EAAcA,KAChBrB,EAAkBF,GAClBN,KAmDJ,OACI8B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAnC,SAAA,CACKA,GAEDkC,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACHjC,KAAMA,EACNC,QAAS6B,EACTI,SAAS,KAAKC,WAAS,EAAAtC,SAAA,EAEvBuC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,UAAU,gBAAezC,UAClCuC,EAAAA,EAAAA,KAAA,QAAAvC,SAAM,4BAEVkC,EAAAA,EAAAA,MAAA,QAAMQ,SAAUC,IACZA,EAAEC,iBACEjC,EAAe3C,SA5D/BkC,EAAiBiB,GAwCN,IAvCkBA,EAAI0B,OAAOC,KAAY/B,EAAAA,EAAAA,IAAc+B,EAAQ9E,QAAS2C,EAAe3C,UAEhEoD,OAAOC,YACjCD,OAAOE,QAAQZ,GAAca,IAAIwB,IAAmB,IAAjBtB,EAAKC,GAAMqB,EAC1C,MAAMC,EAAgBrB,EAAmBhB,EAAe3C,SAClDiF,EAAgB9G,EAAU6G,EAAcE,OAASF,EAAcG,MAC/DC,EAAYH,EAAgB,GAE5B,SAAE/E,EAAQ,UAAEE,EAAS,OAAEO,GAAWgC,EAElC0C,EAAUrC,EAAmB,UAAYF,EAAc,SAAW,MAClEwC,GAAcC,EAAAA,EAAAA,GAAoBnF,EAAW6E,EAAeI,GAC5DG,GAAUD,EAAAA,EAAAA,GAAoB5E,EAAQsE,EAAeI,GAErDI,EAAWtH,EAA6B,EAAnBqH,EAAQE,SAC7BC,EAAUxH,EAAUqH,EAAQI,SAAW,EACvC1E,EAAY/C,EAAgC,EAAtBqH,EAAQK,YAC9BvE,EAAWnD,EAAUqH,EAAQM,YAAc,EAEjD,OAAQrC,GACJ,IAAK,YAAa,MAAO,CAACA,EAAKuB,EAAce,cAC7C,IAAK,eAAgB,MAAO,CAACtC,EAAK6B,EAAYU,aAC9C,IAAK,YAAa,MAAO,CAACvC,EAAKvD,GAC/B,IAAK,SAAU,MAAO,CAACuD,EAAK2B,EAAY,EAAI,GAC5C,IAAK,iBAAkB,MAAO,CAAC3B,EAAK+B,EAAQQ,aAC5C,IAAK,WAAY,MAAO,CAACvC,EAAKwB,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAACxB,EAAY,OAAPgC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAAChC,EAAKT,EAAmB,EAAI9B,GACrD,IAAK,OAAQ,MAAO,CAACuC,EAAY,OAAPkC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAAClC,EAAKT,EAAmB,EAAI1B,GACrD,IAAK,YAAa,MAAO,CAACmC,EAAK+B,EAAQS,UAEvC,QAAS,MAAO,CAACxC,EAAKd,EAAec,IAAQC,SAQ7DO,KAoBgBiC,EAAAA,GAAMC,KAAK,mBAEjBnE,SAAA,EACEuC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAa,CAAApE,UACVkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,WAAUzC,SAAA,EAGrBkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,YAAWzC,SAAA,EACtBuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,WACPuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CAAEA,MAAOf,EAAe2D,QAASC,MAAO5D,EAAe6D,OAC9DC,SAAW9B,GAAM/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEmD,QAAS3B,EAAEjB,MAAO8C,MAAO7B,EAAE4B,SAChFI,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,MACvCtE,EAAOiB,IAAIQ,IAAG,CAAOL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKyC,MAAOD,MAAU,OAAHxC,QAAG,IAAHA,OAAG,EAAHA,EAAK8C,eAE3DC,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbC,cAAe,IACfC,aAAcC,EAAAA,SAKtBrD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,YAAWzC,SAAA,EACtBuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,WACPuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CAAEA,MAAOf,EAAe6E,QAASjB,MAAO5D,EAAe8E,OAC9DhB,SAAW9B,GACP/B,EAAmBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWvD,GAAG,IAAEqE,QAAS7C,EAAEjB,MAAO+D,MAAO9C,EAAE4B,SAErEI,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,MACvCvE,EACEwC,OACI6C,IACG/E,EAAe2D,UACTvD,EAAAA,EAAAA,IAAc2E,EAAIlB,MAAO7D,EAAe2D,UAGrDqB,OAAO,CAACC,EAAKF,KAELE,EAAIC,KAAMC,GAAQA,EAAIpE,QAAUgE,EAAIK,gBAErCH,EAAII,KAAK,CACLtE,MAAOgE,EAAIK,cACXxB,MAAOmB,EAAIO,YAGZL,GACR,KAEXd,OAAQC,EAAAA,GACRC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbC,cAAe,IACfC,aAAcC,EAAAA,SAKtBrD,EAAAA,EAAAA,MAAA,OAAKO,UAAW,eAAezC,SAAA,EAC3BkC,EAAAA,EAAAA,MAAA,SAAAlC,SAAA,CAAO,cAAUuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QAC9B3D,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CACHA,MAAOf,EAAe3C,QACtBuG,MAC8C,QADzCzE,EACD6B,EAAmBhB,EAAe3C,gBAAQ,IAAA8B,OAAA,EAA1CA,EAA4CiE,cAGpDa,YAAYuB,EAAAA,EAAAA,IAAcxF,EAAeyF,QACzCpB,iBAAkBC,SAASC,KAC3BT,SAAU9B,IACN,MAAM0D,EAAc1E,EAAmBgB,EAAEjB,OACzCd,EAAkBO,IAAG,IAAAmF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IAENsE,MAA4B,QAAvBa,EAAED,EAAYJ,iBAAS,IAAAK,EAAAA,EAAInF,EAAIsE,MACpCD,QAAkC,QAA3Be,EAAEF,EAAYN,qBAAa,IAAAQ,EAAAA,EAAIpF,EAAIqE,QAC1ChB,MAA6B,QAAxBgC,EAAEH,EAAYxB,kBAAU,IAAA2B,EAAAA,EAAIrF,EAAIqD,MACrCF,QAA0B,QAAnBmC,EAAEJ,EAAY7B,aAAK,IAAAiC,EAAAA,EAAItF,EAAImD,QAElCtG,QAAS2E,EAAEjB,MACXtD,UAAgC,QAAvBsI,EAAEL,EAAYjI,iBAAS,IAAAsI,EAAAA,EAAI,EACpCxI,SAAU,EACVS,OAAQ,EACRJ,QAA2B,QAApBoI,EAAEN,EAAYQ,cAAM,IAAAF,EAAAA,EAAIxF,EAAI5C,QACnCC,UAA4B,QAAnBoI,EAAEP,EAAYS,aAAK,IAAAF,EAAAA,EAAIzF,EAAI3C,UACpCM,SAAqB,OAAXuH,QAAW,IAAXA,OAAW,EAAXA,EAAavH,cAG/B6F,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,MACvC,IACIvE,EACEwC,OAAO6C,IAAO/E,EAAe2D,UAAUvD,EAAAA,EAAAA,IAAc2E,EAAIlB,MAAO7D,EAAe2D,UAC/EzB,OAAO6C,IAAO/E,EAAe6E,UAAUzE,EAAAA,EAAAA,IAAc2E,EAAIK,cAAepF,EAAe6E,WAC9FjE,IAAIQ,IAAG,CACLL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WACZuC,MAAU,OAAHxC,QAAG,IAAHA,OAAG,EAAHA,EAAKgC,aACZa,YAIO,IAHH3E,EAAc8G,UAAUC,IAAOjG,EAAAA,EAAAA,IACxB,OAAHiG,QAAG,IAAHA,OAAG,EAAHA,EAAKhJ,QAAY,OAAH+D,QAAG,IAAHA,OAAG,EAAHA,EAAKC,iBAKnC8C,OAAQC,EAAAA,GACRI,cAAc,EACd8B,UAAQ,EACR7B,YAAa,iBACbC,cAAe,IACfC,aAAcC,EAAAA,SAKtBrD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,eAAczC,SAAA,EACzBuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,YACPuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CACHA,MAAqB,OAAdf,QAAc,IAAdA,OAAc,EAAdA,EAAgB5C,YACvBwG,OAEC,QAFMxE,EAAAS,EAAQsB,KACXoF,IAAKnG,EAAAA,EAAAA,IAAcmG,EAAEC,UAAyB,OAAdxG,QAAc,IAAdA,OAAc,EAAdA,EAAgB5C,qBACnD,IAAAgC,OAAA,EAFMA,EAEJqH,cAAe,IAEtB3C,SAAW9B,GAAM/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEpD,YAAa4E,EAAEjB,SACpEiD,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,OACvCyC,EAAAA,EAAAA,IAAQ7G,GAASe,IAAIQ,IAAG,CACvBL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKoF,UACZ5C,MAAU,OAAHxC,QAAG,IAAHA,OAAG,EAAHA,EAAKqF,gBAGpBtC,OAAQC,EAAAA,GACRH,aAAauB,EAAAA,EAAAA,IAA4B,OAAdxF,QAAc,IAAdA,OAAc,EAAdA,EAAgB3C,SAC3CgH,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,gBACbE,aAAcC,EAAAA,SAMtBrD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCkC,EAAAA,EAAAA,MAAA,SAAAlC,SAAA,CAAO,aAASuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QAC7B3D,EAAAA,EAAAA,KAAA,SACI0E,UAAQ,EACRvF,MAAOf,EAAezC,SAAWyC,EAAezC,SAAW,GAC3DoJ,QAASC,EAAAA,GACTC,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SACxCyG,SAAU9B,IACFhC,EAAevC,UACfwC,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IACNxC,QAAQ8I,EAAAA,EAAAA,IAAe9G,EAAevC,UAAWuE,EAAE+E,OAAOhG,OAC1DxD,SAAUyE,EAAE+E,OAAOhG,SAEhBf,EAAehC,OACtBiC,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IACN/C,WAAWuJ,EAAAA,EAAAA,IAASxG,EAAIxC,OAAQgE,EAAE+E,OAAOhG,OACzCxD,SAAUyE,EAAE+E,OAAOhG,SAGvBd,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IACNjD,SAAUyE,EAAE+E,OAAOhG,UAI/Be,UAAU,WACVmF,IAAK,OAIZxG,OAAOyG,OAAOlH,EAAgB,aAC3BuB,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,sBACPuC,EAAAA,EAAAA,KAAA,SACIb,MAAOf,EAAexC,QAAUwC,EAAexC,QAAU,GACzDmJ,QAASC,EAAAA,GACTC,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SACxCyG,SAAU9B,GAAK/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BvD,GAAG,IACNhD,QAASwE,EAAE+E,OAAOhG,SAEtBuF,UAAQ,EACRxE,UAAU,iBAMtBP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,WACPuC,EAAAA,EAAAA,KAAA,SACIb,MAAOf,EAAevC,UAAYuC,EAAevC,UAAY,GAC7DkJ,QAASC,EAAAA,GACTC,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SACxCyG,SAAU9B,GAAK/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BvD,GAAG,IACN/C,UAAWuE,EAAE+E,OAAOhG,MACpB/C,OAAQwC,EAAIjD,UAAWuJ,EAAAA,EAAAA,IAAe9E,EAAE+E,OAAOhG,MAAOP,EAAIjD,UAAYiD,EAAIxC,UAE9EsI,UAAQ,EACRxE,UAAU,iBAKlBP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,SACPkC,EAAAA,EAAAA,MAAA,UACIR,MACIN,OAAOyG,OAAOlH,EAAgB,OAASA,EAAemH,IAClD1G,OAAOyG,OAAOlH,EAAgB,WAAaA,EAAepC,QAAU,GAE5EkG,SAAU9B,IACN,MAAMoF,EAAgBpF,EAAE+E,OAAOK,cACzBxD,EAAQ5B,EAAE+E,OAAO/C,QAAQoD,GAAeC,KACxCtG,EAAQiB,EAAE+E,OAAOhG,MACvBd,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IACN2G,IAAKpG,EACLnD,QAASmD,EACToF,MAAOvC,EACP/F,UAAW+F,MAGnB9B,UAAU,WACV+E,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SAASgC,SAAA,EAEjDuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAG8F,UAAQ,EAAAxH,SAAC,WACzBO,EAAIgB,IAAI,CAAC0G,EAAGC,KACT3F,EAAAA,EAAAA,KAAA,UAAQb,MAAOuG,EAAE1J,QAAQyB,SAAWiI,EAAEnB,OAAPoB,WAM3ChG,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,YACPuC,EAAAA,EAAAA,KAAA,SACI0E,UAAQ,EACRvF,MAAOf,EAAehC,OAASgC,EAAehC,OAAS,GACvD2I,QAASC,EAAAA,GACTC,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SACxCyG,SAAU9B,GAAK/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BvD,GAAG,IACNxC,OAAQgE,EAAE+E,OAAOhG,MACjBtD,UAAW+C,EAAIjD,UAAWyJ,EAAAA,EAAAA,IAAShF,EAAE+E,OAAOhG,MAAOP,EAAIjD,UAAYiD,EAAI/C,aAE3EqE,UAAU,WACVmF,IAAK,QAKb1F,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wBAAuBzC,SAAA,EAClCuC,EAAAA,EAAAA,KAAA,SAAAvC,SAAO,WACPuC,EAAAA,EAAAA,KAAA,SACIb,MAAOf,EAAelC,SAAWkC,EAAelC,SAAW,GAC3D+I,WAAWrB,EAAAA,EAAAA,IAAcxF,EAAe3C,SACxCyG,SAAU9B,GAAK/B,EAAkBO,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BvD,GAAG,IACN1C,SAAUkE,EAAE+E,OAAOhG,SAEvBe,UAAU,sBAQ1BP,EAAAA,EAAAA,MAACiG,EAAAA,EAAa,CAAC1F,UAAU,oDAAmDzC,SAAA,EACxEuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACC,QAASA,IAAMzH,EAAkBF,GAAe4H,KAAK,SAASC,WAAWhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAQ,IAAIxI,SAAC,WAC/FkC,EAAAA,EAAAA,MAAA,QAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACE,KAAK,SAASD,QAASpG,EAAYjC,SAAC,YAC5CuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACE,KAAK,SAASG,QAAQ,WAAUzI,SAAC,wBChRrE,EAvHqCH,IAK9B,IAL+B,SAClC6I,EAAQ,WACRC,EAAU,cACVC,EAAa,gBACbpJ,GACHK,EACG,OACI0C,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAnC,UAGIuC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kCAAiCzC,UAC5CkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,aAAaoG,MAAO,CAAEC,UAAW,OAAQC,OAAQ,QAAS/I,SAAA,EACrEkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,8DAA6DzC,SAAA,EACxEuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kBAAiBzC,SAAC,oBAChCuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CACHK,QAAQ,WACRO,MAAM,UACNV,KAAK,SACLD,QAASA,IAAMO,EAAc,IAAID,GAAUjE,EAAAA,EAAAA,GAAA,GAAOlF,KAAoBQ,SACzE,YAELkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,uBAAsBzC,SAAA,EACnCuC,EAAAA,EAAAA,KAAA,SAAAvC,UACIkC,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOzC,SAAC,SACtBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOzC,SAAC,gBACtBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOzC,SAAC,cACtBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOzC,SAAC,YAG9BuC,EAAAA,EAAAA,KAAA,SAAAvC,SACK2I,EAAWpH,IAAI,CAAC0H,EAAKC,KAClBhH,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,yBAAwBzC,SAAEkJ,EAAQ,KAChD3G,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kBAAiBzC,UAC3BuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CACHA,MAAU,OAAHuH,QAAG,IAAHA,OAAG,EAAHA,EAAKvJ,gBACZ6E,MAAU,OAAH0E,QAAG,IAAHA,OAAG,EAAHA,EAAKtJ,mBAEhB8E,SAAU9B,GAAKiG,EAAeO,GACnBA,EAAK5H,IAAI,CAAC6H,EAAMpC,KACnB,IAAIjG,EAAAA,EAAAA,IAAciG,EAAKkC,GAAQ,CAC3B,MAAMG,EAAQX,EAASW,MAAMvH,KAAKwH,IAAKvI,EAAAA,EAAAA,IAAcuI,EAAEC,eAAgB5G,EAAEjB,QACzE,OAAAgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO0E,GAAI,IACPxJ,qBACIuG,EAAAA,EAAAA,IAAciD,EAAKxJ,qBACb4J,OAAOJ,EAAKxJ,sBACZuG,EAAAA,EAAAA,IAAckD,EAAMI,WAChBD,OAAOH,EAAMI,WACb,EACd/J,gBAAiB8J,OAAO7G,EAAEjB,OAC1B/B,kBAAmBgD,EAAE4B,OAE7B,CACA,OAAO6E,KAGfzE,QACI,IAAI+D,EAASW,MAAMxG,OAAO6G,IACrBf,EAAW9C,KAAK8D,IACb5I,EAAAA,EAAAA,IAAc4I,EAAGjK,gBAAiBgK,EAAIH,mBAE1ChI,IAAIoI,IAAE,CACNjI,MAAOiI,EAAGJ,eACVhF,MAAOoF,EAAGC,oBAGlB9E,OAAQC,EAAAA,GACRI,cAAc,EACdC,YAAa,eACbE,aAAcC,EAAAA,QAGtBhD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iBAAiBoG,MAAO,CAAExG,SAAU,QAASwH,SAAU,SAAU7J,UAC3EkC,EAAAA,EAAAA,MAAA,UACIR,MAAU,OAAHuH,QAAG,IAAHA,OAAG,EAAHA,EAAKrJ,oBACZ6E,SAAU9B,GAAKiG,EAAeO,GACnBA,EAAK5H,IAAI,CAAC6H,EAAMpC,KACfjG,EAAAA,EAAAA,IAAciG,EAAKkC,IACnBxE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO0E,GAAI,IACPxJ,oBAAqB+C,EAAE+E,OAAOhG,QAG/B0H,IAGf3G,UAAU,wBAAuBzC,SAAA,EAEjCuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAE1B,SAAC,WAChB0I,EAASoB,UAAUvI,IAAI,CAACoI,EAAII,KACzBxH,EAAAA,EAAAA,KAAA,UAAQb,MAAS,OAAFiI,QAAE,IAAFA,OAAE,EAAFA,EAAIK,iBAAiBhK,SAAc,OAAF2J,QAAE,IAAFA,OAAE,EAAFA,EAAIM,eAAVF,UAItDxH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iBAAgBzC,UAC1BuC,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,CACP7B,QAASA,KACLO,EAAcO,GACHA,EAAKtG,OAAO,CAACsH,EAAGC,IAAalB,IAAUkB,KAGtDC,KAAK,QAAOrK,UAEZuC,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACtB,MAAM,gBA1EjBE,iBCgJzC,EAhLmCrJ,IAQ5B,IAR6B,eAChC0K,EAAc,kBACdC,EAAiB,SACjB9B,EAAQ,cACR+B,EAAa,iBACbC,EAAgB,kBAChBC,EAAiB,WACjBC,GACH/K,EAEG,OACI0C,EAAAA,EAAAA,KAAAJ,EAAAA,SAAA,CAAAnC,UACIuC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wCAAuCzC,UAClDkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,mBAAmBoG,MAAO,CAAEC,UAAW,OAAQC,OAAQ,QAAS/I,SAAA,EAE3EkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,MAAKzC,SAAA,EAChBkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,eAAczC,SAAA,EACzBuC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,YACzBuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CACHA,MAAqB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgBvO,YACvBuI,MAAqB,OAAdgG,QAAc,IAAdA,OAAc,EAAdA,EAAgBtO,eAE3BwI,SAAU9B,IACN6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdvD,GAAG,IACNnF,YAAa2G,EAAEjB,MACfzF,cAAe0G,EAAE4B,SAErBmG,EAAiB,IACjBC,EAAkBhI,EAAEjB,QAExBiD,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,MACvC8D,EAASmC,UAAUtJ,IAAIQ,IAAG,CACzBL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAK/F,YACZuI,MAAU,OAAHxC,QAAG,IAAHA,OAAG,EAAHA,EAAK9F,kBAGpB6I,OAAQC,EAAAA,GACRI,cAAc,EACdC,YAAa,gBACbC,cAAe,IACfC,aAAcC,EAAAA,SAItBrD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,eAAczC,SAAA,EACzBuC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,kBACzBkC,EAAAA,EAAAA,MAAA,UACIR,MAAO6I,EAAe5O,aACtB8I,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAExF,aAAcgH,EAAE+E,OAAOhG,SAC1Ee,UAAWmI,EACX3D,UAAQ,EAAAjH,SAAA,EAERuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAE1B,SAAC,WAChB0I,EAASoC,YAAYjI,OAClB6G,IAAOqB,EAAAA,EAAAA,IAAcrB,EAAIsB,KAAM,qBACjCzJ,IAAI,CAAC0J,EAAKC,KACR3I,EAAAA,EAAAA,KAAA,UACIb,MAAOuJ,EAAIE,eAAenL,SAE5BiL,EAAItP,cADGuP,WAMrBhJ,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,QAAOzC,SAAA,CAAC,WAAOuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QAC7ChE,EAAAA,EAAAA,MAAA,UACIO,UAAWmI,EACXlJ,MAAqB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgB7O,UACvBuL,UAAQ,EACRxC,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEzF,UAAWiH,EAAE+E,OAAOhG,SAAU1B,SAAA,EAEjFuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAE1B,SAAC,WAChB0I,EAAS0C,OAAO7J,IAAI,CAAC0G,EAAGC,KACrB3F,EAAAA,EAAAA,KAAA,UAAQb,MAAQ,OAADuG,QAAC,IAADA,OAAC,EAADA,EAAGoD,SAASrL,SAAW,OAADiI,QAAC,IAADA,OAAC,EAADA,EAAGqD,YAAPpD,WAK7ChG,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,QAAOzC,SAAA,CAAC,eAAWuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QACjD3D,EAAAA,EAAAA,KAAA,SACIb,MAAqB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgBxO,cACvBuM,KAAK,OACLrB,UAAQ,EACRxE,UAAWmI,EACXnG,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEpF,cAAe4G,EAAE+E,OAAOhG,eAInFQ,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,QAAOzC,SAAA,CAAC,cAAUuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QAChD3D,EAAAA,EAAAA,KAAA,SACIb,MAAqB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgB1O,YACvByM,KAAK,OACLrB,UAAQ,EACRxE,UAAWmI,EACXnG,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEtF,YAAa8G,EAAE+E,OAAOhG,eAIjFQ,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CuC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,gBACzBuC,EAAAA,EAAAA,KAAA,SACIb,MAAqB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgB3O,cACvB6G,UAAWmI,EACXnG,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEvF,cAAe+G,EAAE+E,OAAOhG,eAInFQ,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,QAAOzC,SAAA,CAAC,aAASuC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,QAC/ChE,EAAAA,EAAAA,MAAA,UACIO,UAAWmI,EACXnG,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEjF,cAAesN,OAAO7G,EAAE+E,OAAOhG,UAClFA,MAAO6I,EAAerO,cACtB+K,UAAQ,EAAAjH,SAAA,EAERuC,EAAAA,EAAAA,KAAA,UAAQb,MAAO,EAAE1B,SAAC,mBAClBuC,EAAAA,EAAAA,KAAA,UAAQb,MAAO,EAAE1B,SAAC,mBAClBuC,EAAAA,EAAAA,KAAA,UAAQb,MAAO,EAAE1B,SAAC,uBAI1BkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAC3CuC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,cACzBkC,EAAAA,EAAAA,MAAA,UACIO,UAAWmI,EACXnG,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAEhF,QAASqN,OAAO7G,EAAE+E,OAAOhG,UAC5EA,MAAO6I,EAAepO,QAAQ6D,SAAA,EAE9BuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,IAAG1B,SAAC,SAClBuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,IAAG1B,SAAC,gBAI1BkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,eAAczC,SAAA,EACzBuC,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,4BACzBuC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACH3C,MAAO,CAAEA,MAAO6I,EAAezN,uBAAwByH,MAAOgG,EAAezN,wBAC7E2H,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAErE,uBAAwB6F,EAAE4B,SAC7EI,QAAS,CACL,CAAEjD,MAAO,GAAI6C,MAAO,SAAUK,YAAY,MACvC8D,EAAS6C,oBAAoBhK,IAAIQ,IAAG,CACnCL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKjF,uBACZyH,MAAU,OAAHxC,QAAG,IAAHA,OAAG,EAAHA,EAAKjF,2BAGpBgI,OAAQC,EAAAA,GACRkC,UAAU,EACV9B,cAAc,EACdC,YAAa,SACbC,cAAe,IACfC,aAAcC,EAAAA,YAM1BhD,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,SAAC,eACzBuC,EAAAA,EAAAA,KAAA,YACIE,UAAU,iBACV+I,KAAM,EACN9J,MAAO6I,EAAenO,UACtBqI,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAE/E,UAAWuG,EAAE+E,OAAOhG,mBC/JzFC,EAAqB,eAAA8J,EAAA,IAAW7J,EAAS8J,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAA8D,QAA9DH,GAAhBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAsB5J,KAAKC,IAAOhB,EAAAA,EAAAA,IAAcgB,EAAIC,WAAYJ,WAAW,IAAA6J,EAAAA,EAAI,CAAC,CAAE,EAE9GI,EAAU,CACZC,kBAAkB,EAClBC,qBAAqB,GAmvBzB,EAhvBkClM,IAAgC,IAADmM,EAAAC,EAAAC,EAAA,IAA9B,UAAEC,EAAS,WAAEC,GAAYvM,EACxD,MAAMwM,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,MACbC,EAAeJ,EAASK,OAEvBnC,EAAgBC,IAAqB3J,EAAAA,EAAAA,UAAStF,IAC9CkP,EAAeC,IAAoB7J,EAAAA,EAAAA,UAAS,KAC5C8H,EAAYC,IAAiB/H,EAAAA,EAAAA,UAAS,KAEtC8L,EAAiBC,IAAsB/L,EAAAA,EAAAA,UAAS,KAChDgM,EAAuBC,IAA4BjM,EAAAA,EAAAA,UAAS,MAE7DkM,EAAU,oBACVnC,EAAa,eACb9J,GAAcC,EAAAA,EAAAA,IAA4B,OAAdwJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBrO,cAAe,GAC3D8E,GAAmBD,EAAAA,EAAAA,IAA4B,OAAdwJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBrO,cAAe,GAChEC,GAAU4E,EAAAA,EAAAA,IAA4B,OAAdwJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBpO,QAAS,IAEhD6Q,EAAQC,IAAapM,EAAAA,EAAAA,UAASgL,IAC9BqB,EAAeC,KAAoBtM,EAAAA,EAAAA,WAAS,IAE5C6H,GAAU0E,KAAevM,EAAAA,EAAAA,UAAS,CACrCgK,UAAW,GACXO,OAAQ,GACR7K,IAAK,GACLF,SAAU,GACVyK,YAAa,GACbS,oBAAqB,GACrB8B,OAAQ,GACRhE,MAAO,GACPS,UAAW,GACXwD,MAAO,KAGL1Q,IAAsB2Q,EAAAA,EAAAA,SAAQ,IACzB9C,EAAc9E,OAAO,CAACC,EAAKwD,KAC9B,MAAMzK,GAAS6O,EAAAA,EAAAA,IAAgB,OAAJpE,QAAI,IAAJA,OAAI,EAAJA,EAAMzK,QAEjC,GAAIqC,EAAkB,OAAOyM,EAAAA,EAAAA,IAAS7H,EAAKjH,GAE3C,MAAM+O,EAAU/L,EAAmB+G,GAASrI,SAAU+I,EAAKpL,SACrDiF,EAAgB9G,EAAUuR,EAAQxK,OAASwK,EAAQvK,MAEzD,OAAIrC,GACO2M,EAAAA,EAAAA,IAAS7H,GAAKrC,EAAAA,EAAAA,GAAoB5E,EAAQsE,EAAe,UAAUgB,WAEnEwJ,EAAAA,EAAAA,IAAS7H,GAAKrC,EAAAA,EAAAA,GAAoB5E,EAAQsE,EAAe,OAAOgB,WAE5E,GACJ,CAACwG,EAAezJ,EAAkB0H,GAASrI,SAAUlE,EAAS2E,IAE3D6M,IAAaJ,EAAAA,EAAAA,SAAQ,KACvB,IAAK9C,GAA0C,IAAzBA,EAAckB,OAAc,MAAO,CAAC,EAE1D,IAAIiC,EAAe,EACfC,EAAW,EAEfpD,EAAcqD,QAAQ1E,IAClB,MAAMzK,GAAS6O,EAAAA,EAAAA,KAAgB,OAAJpE,QAAI,IAAJA,OAAI,EAAJA,EAAMzK,SAAU,GAE3C,GAAIqC,EAEA,YADA4M,GAAeH,EAAAA,EAAAA,IAASG,EAAcjP,IAI1C,MAAM+O,EAAU/L,EAAmB+G,GAASrI,SAAU+I,EAAKpL,SACrDiF,GAAgBlC,EAAAA,EAAAA,IAAc5E,EAAS,GAAKuR,EAAQxK,OAASwK,EAAQvK,MAErE4K,GAAUxK,EAAAA,EAAAA,GAAoB5E,EAAQsE,EAAenC,EAAc,SAAW,OAEpF8M,GAAeH,EAAAA,EAAAA,IAASG,EAAcI,WAAWD,EAAQE,cACzDJ,GAAWJ,EAAAA,EAAAA,IAASI,EAAUG,WAAWD,EAAQG,eAGrD,MAAMC,GAAeV,EAAAA,EAAAA,IAASG,EAAcC,GACtCO,EAAeC,KAAKC,MAAMH,GAC1BI,GAAWf,EAAAA,EAAAA,IAAYY,EAAeD,GAEtCK,GAAOzN,EAAAA,EAAAA,IAAc5E,EAAS,GAAK,GAAIqR,EAAAA,EAAAA,IAAYK,EAAW,GAC9DY,GAAO1N,EAAAA,EAAAA,IAAc5E,EAAS,GAAK,GAAIqR,EAAAA,EAAAA,IAAYK,EAAW,GAC9Da,GAAO3N,EAAAA,EAAAA,IAAc5E,EAAS,IAAKqR,EAAAA,EAAAA,IAAYK,GAAY,EAEjE,MAAO,CACHD,cAAcJ,EAAAA,EAAAA,IAAYI,GAC1BC,UAAUL,EAAAA,EAAAA,IAAYK,GACtBW,OACAC,OACAC,OACAH,WACAI,aAAcP,IAGnB,CAAC3D,EAAe/B,GAASrI,SAAUlE,EAAS6E,EAAkBF,KAEjEG,EAAAA,EAAAA,WAAU,KAEY2N,WACd,IACQzC,GAAWA,IAEf,MACI0C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,SACMC,QAAQC,IAAI,EAClBC,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,gCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,6BACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,iBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,sBACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,0BACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,wDACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,oCACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,0BACpBD,EAAAA,EAAAA,GAAU,CAAEC,QAAQ,oCAGlBC,GAAiBb,EAAiBc,QAAUd,EAAiBe,KAAO,IAAIC,KAC1E,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG7T,eAAegU,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG9T,gBAElDiU,GAAcpB,EAAea,QAAUb,EAAec,KAAO,IAAIC,KACnE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGxE,YAAY2E,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGzE,aAE/C6E,GAAWpB,EAAYY,QAAUZ,EAAYa,KAAO,IAAIC,KAC1D,CAACC,EAAGC,IAAMC,OAAOF,EAAEhJ,OAAOmJ,cAAcF,EAAEjJ,QAExCsJ,GAAgBpB,EAAiBW,QAAUX,EAAiBY,KAAO,IAAIC,KACzE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG/L,cAAckM,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGhM,eAEjD+G,GAAemE,EAAoBU,QAAUV,EAAoBW,KAAO,IAAIC,KAC9E,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGnU,cAAcsU,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGpU,eAEjD4P,GAAuB2D,EAA4BS,QAAUT,EAA4BU,KAAO,IAAIC,KACtG,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGhT,wBAAwBmT,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGjT,yBAE3DuT,GAAmBlB,EAAwBQ,QAAUR,EAAwBS,KAAO,IAAIC,KAC1F,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG1I,aAAa6I,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG3I,cAEhDkJ,GAAalB,EAAcO,QAAUP,EAAcQ,KAAO,IAAIC,KAChE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGlG,kBAAkBqG,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGnG,mBAErD2G,GAAqBlB,EAAcM,QAAUN,EAAcO,KAAO,IAAIC,KACxE,CAACC,EAAGC,IAAMC,OAAQ,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG7F,eAAegG,cAAe,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG9F,gBAGxDmD,GAAajM,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTvD,GAAG,IACN0J,UAAW6E,EACXtE,OAAQ8E,EACR3P,IAAK4P,EACL9P,SAAU+P,EACVtF,YAAaA,EACbS,oBAAqBA,EACrB8B,OAAQgD,EACRhH,MAAOiH,EACPxG,UAAWyG,EACXjD,OAAOkD,EAAAA,EAAAA,IAAcJ,EAAc,QAAS,CAAC,iBAErD,CAAE,MAAOzN,GACL8N,QAAQC,MAAM,uBAAwB/N,EAC1C,CAAC,QACOyJ,GAAYA,GACpB,GAGJuE,IAED,KAEH1P,EAAAA,EAAAA,WAAU,KACN,IACIC,EAAAA,EAAAA,IAAcuL,IACdmE,MAAMC,QAAoB,OAAZpE,QAAY,IAAZA,OAAY,EAAZA,EAAcqE,YAC5BF,MAAMC,QAAoB,OAAZpE,QAAY,IAAZA,OAAY,EAAZA,EAAcsE,aAC5B7P,EAAAA,EAAAA,IAA0B,OAAZuL,QAAY,IAAZA,OAAY,EAAZA,EAAcuE,aAC9B,CACE,MAAM,YAAEA,EAAW,UAAEF,EAAS,UAAEC,GAActE,EAC9C9B,GAAkBqG,EAAYhV,aAC9BwO,EACIpJ,OAAOC,YACHD,OAAOE,QAAQ/F,GAAqBgG,IAAIC,IAAmB,IAADyP,EAAA,IAAhBxP,EAAKC,GAAMF,EACjD,MAAY,gBAARC,GACQ,kBAARA,EAD8B,CAACA,EAAKuP,EAAYvP,IAAO3F,EAAAA,EAAAA,IAAUkV,EAAYvP,IAAQC,GAElF,CAACD,EAAqB,QAAlBwP,EAAED,EAAYvP,UAAI,IAAAwP,EAAAA,EAAIvP,OAI7CgJ,EACIoG,EAAUvP,IAAI6H,GAAQhI,OAAOC,YACzBD,OAAOE,QAAQ9D,GAAiB+D,IAAIwB,IAAmB,IAADmO,EAAA,IAAhBzP,EAAKC,GAAMqB,EAC7C,MAAY,cAARtB,EAA4B,CAACA,EAAK2H,EAAmB,cAAK1H,GACvD,CAACD,EAAc,QAAXyP,EAAE9H,EAAK3H,UAAI,IAAAyP,EAAAA,EAAIxP,QAItCkH,EACImI,EAAUxP,IAAI6H,GAAQhI,OAAOC,YACzBD,OAAOE,QAAQ9B,GAAiB+B,IAAI4P,IAAmB,IAADC,EAAA,IAAhB3P,EAAKC,GAAMyP,EAC7C,MAAO,CAAC1P,EAAc,QAAX2P,EAAEhI,EAAK3H,UAAI,IAAA2P,EAAAA,EAAI1P,QAItCyL,GAAiB6D,EAAYK,oBACjC,GACD,CAAC5E,IAEJ,MAAM9B,GAAqB2G,KACnBnL,EAAAA,EAAAA,IAAcmL,KACVnF,GAAWA,IAEfS,EAAmB,KACnB4C,EAAAA,EAAAA,GAAU,CACNC,QAAQ,6DAAD8B,OAA+DD,KACvEE,KAAK5B,IACAA,EAAKD,SAAS/C,EAAmBgD,EAAKA,QAC3C6B,MAAM9O,GAAK8N,QAAQC,MAAM/N,IAAI+O,QAAQ,KAChCtF,GAAYA,QAKtBuF,GAAcA,CAACC,EAAYC,KAC7BnH,EAAkBvB,IACd,MAAM2I,EAAW3I,EAAKtG,OAAOoF,MACzBlH,EAAAA,EAAAA,IAAe,OAADkH,QAAC,IAADA,OAAC,EAADA,EAAGpK,QAAmB,OAAV+T,QAAU,IAAVA,OAAU,EAAVA,EAAY/T,WACnCkD,EAAAA,EAAAA,IAAe,OAADkH,QAAC,IAADA,OAAC,EAADA,EAAGjK,QAAmB,OAAV4T,QAAU,IAAVA,OAAU,EAAVA,EAAYG,UACtChR,EAAAA,EAAAA,IAAe,OAADkH,QAAC,IAADA,OAAC,EAADA,EAAGrK,WAAsB,OAAVgU,QAAU,IAAVA,OAAU,EAAVA,EAAYlU,iBAEhD,GAAImU,EACA,OAAOC,EACJ,CACH,MAAME,EAAgBrF,EAAgB9J,OAAOuG,IACzCrI,EAAAA,EAAAA,IAAcqI,EAAKvL,QAAS+T,EAAW/T,WACpCkD,EAAAA,EAAAA,IAAwB,OAAV6Q,QAAU,IAAVA,OAAU,EAAVA,EAAYG,OAAY,OAAJ3I,QAAI,IAAJA,OAAI,EAAJA,EAAM2I,UACxChR,EAAAA,EAAAA,IAAwB,OAAV6Q,QAAU,IAAVA,OAAU,EAAVA,EAAYlU,cAAmB,OAAJ0L,QAAI,IAAJA,OAAI,EAAJA,EAAM1L,gBAGhDuU,EAAiB,IAAI,IAAIC,IAC3BF,EAAcG,QAAQC,GAAQA,EAAKC,mBAC9BxP,OAAOwG,IAAUV,EAAW9C,KAAKyM,IAAUvR,EAAAA,EAAAA,IAAcuR,EAAO5S,gBAAiB2J,EAAMkJ,cACvFhR,IAAI8H,GAAS,CAACA,EAAMkJ,WAAYlJ,KACvCmJ,UAEEP,EAAetG,OAAS,GACxB/C,EAAc6J,GAAkB,IACzBA,KACAR,EAAe1Q,IAAI8H,GAASjI,OAAOC,YAClCD,OAAOE,QAAQ9B,GAAiB+B,IAAImR,IAAmB,IAAjBjR,EAAKC,GAAMgR,EAC7C,OAAQjR,GACJ,IAAK,kBAAmB,MAAO,CAACA,EAAU,OAAL4H,QAAK,IAALA,OAAK,EAALA,EAAOkJ,YAC5C,IAAK,oBAAqB,MAAO,CAAC9Q,EAAU,OAAL4H,QAAK,IAALA,OAAK,EAALA,EAAOsJ,cAC9C,IAAK,sBAAuB,MAAO,CAAClR,EAAU,OAAL4H,QAAK,IAALA,OAAK,EAALA,EAAOuJ,UAChD,QAAS,MAAO,CAACnR,EAAKC,UAO1C,MAAMmR,EAAUb,EAAczQ,IAAI6H,IAAS,IAAD0J,EAAAC,EACtC,MAAMpS,EAAiBgB,EAAmB+G,GAASrI,SAAU+I,EAAK2I,QAC5D9O,EAAgB9G,EAAUwE,EAAeuC,OAASvC,EAAewC,MACjEC,EAAYH,EAAgB,EAE5B/E,EAAkC,QAA1B4U,EAAG9E,WAAW5E,EAAK4J,eAAO,IAAAF,EAAAA,EAAI,EACtC1U,EAAwC,QAA/B2U,GAAGvF,EAAAA,EAAAA,IAAYpE,EAAK6J,mBAAW,IAAAF,EAAAA,EAAI,EAC5CpU,GAAS8I,EAAAA,EAAAA,IAAevJ,EAAUE,GAElCiF,EAAUrC,EAAmB,UAAYF,EAAc,SAAW,MAClEwC,GAAcC,EAAAA,EAAAA,GAAoBnF,EAAW6E,EAAeI,GAC5DG,GAAUD,EAAAA,EAAAA,GAAoB5E,EAAQsE,EAAeI,GAErDI,EAAWtH,EAA6B,EAAnBqH,EAAQE,SAC7BC,EAAUxH,EAAUqH,EAAQI,SAAW,EACvC1E,EAAY/C,EAAgC,EAAtBqH,EAAQK,YAC9BvE,EAAWnD,EAAUqH,EAAQM,YAAc,EAIjD,OAFA2M,QAAQyC,IAAIvS,GAELS,OAAOC,YACVD,OAAOE,QAAQ9D,GAAiB+D,IAAI4R,IAAmB,IAADC,EAAA,IAAhB3R,EAAKC,GAAMyR,EAC7C,OAAQ1R,GACJ,IAAK,aAAc,MAAO,CAACA,EAAK+H,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAM1L,gBAC7C,IAAK,UAAW,MAAO,CAAC+D,EAAK+H,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMvL,UAC1C,IAAK,cAAe,MAAO,CAAC4D,EAAmB,OAAd8I,QAAc,IAAdA,OAAc,EAAdA,EAAgB1O,aACjD,IAAK,cAAe,MAAO,CAAC4F,EAA6B,QAA1B2R,EAAE5J,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMiK,mBAAW,IAAAD,EAAAA,EAAI,IAC7D,IAAK,UAAW,MAAO,CAAC3R,EAAK+H,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAM2I,SAC1C,IAAK,YAAa,MAAO,CAACtQ,EAAmB,OAAdd,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,cAC/C,IAAK,UAAW,MAAO,CAACtC,EAAmB,OAAdd,QAAc,IAAdA,OAAc,EAAdA,EAAgBkG,QAC7C,IAAK,YAAa,MAAO,CAACpF,EAAmB,OAAdd,QAAc,IAAdA,OAAc,EAAdA,EAAgBmG,OAC/C,IAAK,WAAY,MAAO,CAACrF,EAAS,OAAJ2H,QAAI,IAAJA,OAAI,EAAJA,EAAMkK,sBACpC,IAAK,UAML,IAAK,YAAa,MAAO,CAAC7R,EAAKvD,GAL/B,IAAK,YAAa,MAAO,CAACuD,EAAKrD,GAC/B,IAAK,eAAgB,MAAO,CAACqD,EAAK+H,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmK,WAC/C,IAAK,WAAY,MAAO,CAAC9R,EAAS,OAAJ2H,QAAI,IAAJA,OAAI,EAAJA,EAAMoK,eACpC,IAAK,SAAU,MAAO,CAAC/R,EAAK9C,GAC5B,IAAK,eAAgB,MAAO,CAAC8C,EAAK6B,EAAYU,aAE9C,IAAK,SAAU,MAAO,CAACvC,EAAK2B,EAAY,EAAI,GAC5C,IAAK,WAAY,MAAO,CAAC3B,EAAKd,EAAe7B,UAC7C,IAAK,iBAAkB,MAAO,CAAC2C,EAAK+B,EAAQQ,aAC5C,IAAK,WAAY,MAAO,CAACvC,EAAKwB,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAACxB,EAAY,OAAPgC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAAChC,EAAKT,EAAmB,EAAI9B,GACrD,IAAK,OAAQ,MAAO,CAACuC,EAAY,OAAPkC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAAClC,EAAKT,EAAmB,EAAI1B,GACrD,IAAK,YAAa,MAAO,CAACmC,EAAK+B,EAAQS,UAEvC,QAAS,MAAO,CAACxC,EAAKC,SAMtC,OAAOoQ,EAASP,OAAOsB,EAC3B,KAIFY,GAAeA,KACjBxG,EAAUpB,IAGR6H,GAAwBA,CAACC,EAAYlS,EAAKC,KAC5CgJ,EAAkBvB,GACPA,EAAK5H,IAAI,CAAC6H,EAAMwK,KACnB,IAAI7S,EAAAA,EAAAA,IAAc6S,EAAQD,GACtB,OAAQlS,GACJ,IAAK,WAAY,CACb,MAAMoS,EAAe7F,WAAWtM,GAAS,GACnCoS,GAAOpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ0E,GAAI,IAAElL,SAAU2V,IAMrC,OALIzK,EAAKhL,UACL0V,EAAQnV,QAAS8I,EAAAA,EAAAA,IAAe2B,EAAKhL,UAAWyV,GACzCzK,EAAKzK,SACZmV,EAAQ1V,WAAYuJ,EAAAA,EAAAA,IAASyB,EAAKzK,OAAQkV,IAEvCC,CACX,CACA,IAAK,YAAa,CACd,MAAMD,EAAe7F,WAAWtM,GAAS,GACnCoS,GAAOpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ0E,GAAI,IAAEhL,UAAWyV,IAItC,OAHIzK,EAAKlL,WACL4V,EAAQnV,QAAS8I,EAAAA,EAAAA,IAAeoM,EAAczK,EAAKlL,WAEhD4V,CACX,CACA,IAAK,SAAU,CACX,MAAMD,EAAe7F,WAAWtM,GAAS,GACnCoS,GAAOpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ0E,GAAI,IAAEzK,OAAQkV,IAInC,OAHIzK,EAAKlL,WACL4V,EAAQ1V,WAAYuJ,EAAAA,EAAAA,IAASkM,EAAczK,EAAKlL,WAE7C4V,CACX,CACA,QACI,OAAApP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY0E,GAAI,IAAE,CAAC3H,GAAMC,IAGrC,OAAO0H,MAmCnB,OACIlH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAnC,SAAA,EACIuC,EAAAA,EAAAA,KAACwR,EAAc,CACX9T,cAAewK,EACfvK,iBAAkBwK,EAClBvK,KAAM6M,EAAOlB,iBACb1L,QAASA,KACL6M,EAAU9L,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAE2K,kBAAkB,KAC9CgB,EAAyB,OAE7BzM,SAAUqI,GAASrI,SACnBC,OAAQoI,GAAS4E,MACjB/M,IAAKmI,GAASnI,IACdC,QAASkI,GAAS2E,OAClBnR,cAAe4E,EACf3E,QAASA,EACTsE,WAAYoM,EACZnM,aAAclD,EACdwW,cAAe,MAGnBzR,EAAAA,EAAAA,KAAA,QAAMG,SAAUC,IACZA,EAAEC,iBAnDNuJ,GAAWA,KACfqD,EAAAA,EAAAA,GAAU,CACNC,QAAS,yBACTwE,QAAQ9N,EAAAA,EAAAA,IAA4B,OAAdoE,QAAc,IAAdA,OAAc,EAAdA,EAAgB/O,QAAU,MAAQ,OACxD0Y,UAAQxP,EAAAA,EAAAA,GAAA,CACJyP,cAAe1J,EACf9B,WAAYA,GACT4B,KAERiH,KAAK5B,IACAA,EAAKD,SACLzL,EAAAA,GAAMyL,SAAY,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,UAAW,SAC/B1J,EAAiB,IACjBF,EAAkBjP,GAClBqR,EAAmB,IACnBhE,EAAc,KACTgI,MAAMC,QAAoB,OAAZpE,QAAY,IAAZA,OAAY,EAAZA,EAAcqE,aAAc5P,EAAAA,EAAAA,IAA0B,OAAZuL,QAAY,IAAZA,OAAY,EAAZA,EAAcuE,eAAiBqD,OAAOC,QAAQ3I,OAAS,EAChHY,GAAY,GAEZA,EAAWF,EAASkI,SAAU,CAAEC,SAAS,EAAM9H,MAAO,QAG1DxI,EAAAA,GAAMwM,OAAU,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,UAAW,oBAElC3C,MAAM9O,GAAK8N,QAAQC,MAAM/N,IAAI+O,QAAQ,KAChCtF,GAAYA,OA4BdpM,UACEkC,EAAAA,EAAAA,MAACuS,EAAAA,EAAI,CAAAzU,SAAA,EAEDkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,8DAA6DzC,SAAA,EACxEuC,EAAAA,EAAAA,KAAA,QAAME,UAAU,4BAA2BzC,SAAC,+BAC5CkC,EAAAA,EAAAA,MAAA,QAAAlC,SAAA,EAEIuC,EAAAA,EAAAA,KAAA,SAAOmS,QAAQ,GAAE1U,SAAC,oBAClBuC,EAAAA,EAAAA,KAACoS,EAAAA,EAAM,CACHC,QAAS1H,EACTzI,SAAU9B,IACNwK,GAAiBxK,EAAE+E,OAAOkN,SAC1BlK,EAAiB,QAIzBnI,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACE,KAAK,SAASD,QAASA,MACtBuI,MAAMC,QAAoB,OAAZpE,QAAY,IAAZA,OAAY,EAAZA,EAAcqE,aAAc5P,EAAAA,EAAAA,IAA0B,OAAZuL,QAAY,IAAZA,OAAY,EAAZA,EAAcuE,eAAiBqD,OAAOC,QAAQ3I,OAAS,EAChHY,GAAY,GAEZA,EAAW,0BAEjBvM,SAAC,YAEHuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACE,KAAK,SAASG,QAAQ,YAAWzI,SAAC,kBAIlDkC,EAAAA,EAAAA,MAAC2S,EAAAA,EAAW,CAAA7U,SAAA,EAERkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,MAAKzC,SAAA,EAEhBuC,EAAAA,EAAAA,KAACuS,EAA4B,CACzBpM,SAAUA,GACVC,WAAYA,EACZC,cAAeA,EACfpJ,gBAAiBA,KAIrB+C,EAAAA,EAAAA,KAACwS,EAA0B,CACvBxK,eAAgBA,EAChBC,kBAAmBA,EACnB9B,SAAUA,GACV+B,cAAeA,EACfC,iBAAkBA,EAClBC,kBAAmBA,GACnBC,WAAYA,QAMpB1I,EAAAA,EAAAA,MAAA,OAAKO,UAAU,mBAAkBzC,SAAA,EAC7BkC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,iCAAgCzC,SAAA,EAE3CuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACE,KAAK,SAASD,QAASA,IAAMqC,EAAiB,IAAI1K,SAAC,mBAE1DkN,GACG3K,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CACHC,QAASA,KACLyE,EAAyB,MACzBG,EAAU9L,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAE2K,kBAAkB,MAElDkJ,GAAI,CAAEC,GAAI,GACVxM,QAAQ,WACRH,KAAK,SACLC,WAAWhG,EAAAA,EAAAA,KAAC2S,EAAAA,EAAG,IACf1N,WAAWrB,EAAAA,EAAAA,IAAcoE,EAAevO,aAAagE,SACxD,iBAEDuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CACHK,QAAQ,WACRhG,UAAU,OACV6F,KAAK,SACLD,QAASA,IAAM4E,EAAU9L,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAE4K,qBAAqB,KAChExD,WAAWhG,EAAAA,EAAAA,KAAC2S,EAAAA,EAAG,IACf1N,WAAWrB,EAAAA,EAAAA,IAAcoE,EAAevO,aAAagE,SACxD,qBAITkC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,QAAOzC,SAAA,EACpBuC,EAAAA,EAAAA,KAAA,SAAAvC,UACIkC,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,SACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,UACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,UACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,mBACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,kBACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,UACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,YACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,qBACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,WACxBuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAC,YAGhCuC,EAAAA,EAAAA,KAAA,SAAAvC,SACKyK,EAAclJ,IAAI,CAAC0H,EAAKf,KAAC,IAAAiN,EAAA,OACtBjT,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,SAAEkI,EAAI,KAE7B3F,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UAAK,OAAHiJ,QAAG,IAAHA,OAAG,EAAHA,EAAKhL,YAAa,eAC3CsE,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAA,SACIb,MAAU,OAAHuH,QAAG,IAAHA,GAAAA,EAAK7K,UAAe,OAAH6K,QAAG,IAAHA,OAAG,EAAHA,EAAK7K,UAAY,GACzCkK,KAAK,SACL7F,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,YAAavF,EAAE+E,OAAOhG,OAC9DuF,UAAQ,OAGhB1E,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAA,SACIb,MAAU,OAAHuH,QAAG,IAAHA,GAAAA,EAAK/K,SAAc,OAAH+K,QAAG,IAAHA,OAAG,EAAHA,EAAK/K,SAAW,GACvCoK,KAAK,SACL7F,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,WAAYvF,EAAE+E,OAAOhG,OAC7DuF,UAAQ,OAGhB1E,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAA,SACIb,MAAmB,QAAdyT,EAAK,OAAHlM,QAAG,IAAHA,OAAG,EAAHA,EAAK9K,eAAO,IAAAgX,EAAAA,EAAI,GACvB7M,KAAK,SACL7F,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,UAAWvF,EAAE+E,OAAOhG,OAC5DuF,UAAQ,OAGhB1E,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBkC,EAAAA,EAAAA,MAAA,UACIR,MAAU,OAAHuH,QAAG,IAAHA,OAAG,EAAHA,EAAK1K,QACZkE,UAAWmI,EACXnG,SAAU9B,IACN,MAAMoF,EAAgBpF,EAAE+E,OAAOK,cACzBxD,EAAQ5B,EAAE+E,OAAO/C,QAAQoD,GAAeC,KACxCtG,EAAQiB,EAAE+E,OAAOhG,MACvBgS,GAAsBxL,EAAG,UAAWxG,GACpCgS,GAAsBxL,EAAG,YAAa3D,IAE1C0C,UAAQ,EAAAjH,SAAA,EAERuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAE1B,SAAC,WAChB0I,GAASnI,IAAIgB,IAAI,CAAC0G,EAAGC,KAClB3F,EAAAA,EAAAA,KAAA,UAAQb,MAAOuG,EAAE1J,QAAQyB,SAAWiI,EAAEnB,OAAPoB,UAI3C3F,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAA,SACIb,MAAU,OAAHuH,QAAG,IAAHA,GAAAA,EAAKtK,OAAY,OAAHsK,QAAG,IAAHA,OAAG,EAAHA,EAAKtK,OAAS,GACnC2J,KAAK,SACL7F,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,SAAUvF,EAAE+E,OAAOhG,OAC3DuF,UAAQ,OAGhB1E,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBkC,EAAAA,EAAAA,MAAA,UACIR,MAAU,OAAHuH,QAAG,IAAHA,OAAG,EAAHA,EAAKlL,YACZ0E,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,cAAevF,EAAE+E,OAAOhG,OAChE8F,UAAU4N,EAAAA,EAAAA,IAAY,OAAHnM,QAAG,IAAHA,OAAG,EAAHA,EAAKrL,YAAYoC,SAAA,EAEpCuC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,GAAE1B,SAAC,WAChB0I,GAAS2E,OAAO9L,IAAI,CAAC0G,EAAGC,KACrB3F,EAAAA,EAAAA,KAAA,UAAQb,MAAQ,OAADuG,QAAC,IAADA,OAAC,EAADA,EAAGd,UAAUnH,SAAW,OAADiI,QAAC,IAADA,OAAC,EAADA,EAAGb,aAAPc,UAI9C3F,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAA,SACIb,MAAU,OAAHuH,QAAG,IAAHA,OAAG,EAAHA,EAAKxK,SACZgE,UAAWmI,EACXnG,SAAU9B,GAAK+Q,GAAsBxL,EAAG,WAAYvF,EAAE+E,OAAOhG,OAC7D8F,UAAU4N,EAAAA,EAAAA,IAAY,OAAHnM,QAAG,IAAHA,OAAG,EAAHA,EAAKrL,iBAGhC2E,EAAAA,EAAAA,KAAA,MAAIE,UAAWsK,EAAQ/M,UACnBuC,EAAAA,EAAAA,KAAC2H,EAAAA,EAAU,CACP7B,QAASA,KACLqC,EAAiBvB,GACNA,EAAKtG,OAAO,CAACsH,EAAGC,IAAalC,IAAMkC,KAGlDC,KAAK,QAAOrK,UAEZuC,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,CAACtB,MAAM,gBAzFjBd,WAkGrB3F,EAAAA,EAAAA,KAAA,SAAOE,UAAU,QAAOzC,UACpBkC,EAAAA,EAAAA,MAAA,SAAAlC,SAAA,EACIkC,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIkC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,aAAa4S,SAAStU,EAAAA,EAAAA,IAAcwJ,EAAepO,QAAS,GAAK,EAAI,EAAE6D,SAAA,CAAC,oBACjEsV,EAAAA,EAAAA,IAAcC,SAAS3Y,SAE5C2F,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,0BAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAErB2N,GAAWC,kBAGlBzR,GAgBE+F,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,UAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SACrB2N,GAAWe,WAlBpBxM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAnC,SAAA,EACIkC,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,UAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SACrB2N,GAAWa,WAGpBtM,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,UAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SACrB2N,GAAWc,cAY5BvM,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,eAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,UACtBuC,EAAAA,EAAAA,KAAA,SACIb,MAAO6I,EAAe9N,UACtB+Y,aAAc7H,GAAWY,SACzB1F,MAAO,CAAEgB,SAAU,QAASxH,SAAU,SACtCI,UAAU,eACV6E,QAASmO,EAAAA,GACThR,SAAU9B,GAAK6H,EAAkBrJ,IAAGuD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUvD,GAAG,IAAE1E,UAAWkG,EAAE+E,OAAOhG,iBAInFQ,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACIuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,SAAC,WAC3BuC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,aAAYzC,UACrB0V,EAAAA,EAAAA,IAAarH,KAAKC,MAAM1R,2BAazDsF,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACHjC,KAAM6M,EAAOjB,oBACb3L,QAASqT,GACTkC,YAAU,EAAA3V,SAAA,EAEVkC,EAAAA,EAAAA,MAACM,EAAAA,EAAW,CAACC,UAAU,uCAAsCzC,SAAA,EACzDuC,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAazC,SAAC,2BAC9BuC,EAAAA,EAAAA,KAAA,QAAAvC,UACIuC,EAAAA,EAAAA,KAAC6F,EAAAA,EAAM,CAACC,QAASoL,GAAcnL,KAAK,SAAS7F,UAAU,OAAMzC,SAAC,gBAGtEuC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAa,CAAApE,UACVuC,EAAAA,EAAAA,KAACqT,EAAAA,GAAe,CACZC,UAAWlJ,EACXmJ,QAAS,CACL,CACIC,UAAW,EACXC,aAAc,IACdC,cAAc,EACdC,KAAMC,IAAc,IAAb,IAAElN,GAAKkN,EACV,MAAMC,GAAgG,IAApF3L,EAAc1D,UAAUkB,IAAKlH,EAAAA,EAAAA,IAAe,OAADkH,QAAC,IAADA,OAAC,EAADA,EAAGrK,WAAe,OAAHqL,QAAG,IAAHA,OAAG,EAAHA,EAAKvL,gBAEjF,OACI6E,EAAAA,EAAAA,KAAA,OAAAvC,UACIuC,EAAAA,EAAAA,KAAA,SACIE,UAAU,uCACVoG,MAAO,CAAEwN,QAAS,SAClB/N,KAAK,WACLsM,QAASwB,EACT3R,SAAUA,KACF2R,EAAWzE,GAAY1I,GAAK,GAC3B0I,GAAY1I,WAOzCqN,EAAAA,EAAAA,IAAU,cAAe,SACzBA,EAAAA,EAAAA,IAAU,WAAY,WACtBA,EAAAA,EAAAA,IAAU,aAAc,UACxB,CACIP,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAMK,IAAA,IAAAC,EAAA,IAAC,IAAEvN,GAAKsN,EAAA,OACC,QADIC,EACZ,OAAHvN,QAAG,IAAHA,OAAG,EAAHA,EAAK+J,cAAM,IAAAwD,EAAAA,EAAI,GACf,KAAS,OAAHvN,QAAG,IAAHA,OAAG,EAAHA,EAAKnC,UAEnBwP,EAAAA,EAAAA,IAAU,uBAAwB,SAAU,oBAC5CA,EAAAA,EAAAA,IAAU,WAAY,WACtBA,EAAAA,EAAAA,IAAU,QAAS,WACnBA,EAAAA,EAAAA,IAAU,WAAY,WAE1BG,oBAAkB,EAClBC,mBAAiB,EACjBC,MAAK,sBAAApF,OAEW,QAFXvF,EAA0C,QAA1CC,EAAwBvD,GAASmC,iBAAS,IAAAoB,GAE9C,QAF8CC,EAAlBD,EAAoBnK,KAAK8U,IAClD7V,EAAAA,EAAAA,IAAiB,OAAH6V,QAAG,IAAHA,OAAG,EAAHA,EAAK5a,YAA2B,OAAduO,QAAc,IAAdA,OAAc,EAAdA,EAAgBvO,qBACnD,IAAAkQ,OAF8C,EAAlBA,EAE1BjQ,qBAAa,IAAA+P,EAAAA,EAAI,iBACpB6K,iBAAe,Y,yIC3vBhC,SAASC,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAkBC,EAAAA,EAAAA,IAAO,MAAO,CACpCC,KAAM,iBACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOzS,IAAWA,EAAO0S,MAHvBJ,CAIrB,KACM,CACLf,QAAS,GACT,eAAgB,CACdoB,cAAe,OAoDrB,EAhDiCC,EAAAA,WAAiB,SAAqBC,EAASC,GAC9E,MAAML,GAAQM,EAAAA,EAAAA,GAAgB,CAC5BN,MAAOI,EACPN,KAAM,oBAEF,UACF5U,EAAS,UACTqV,EAAY,OACVP,EACJQ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAOL,GACzCe,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrCO,cAEIK,EAlCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBV,EAA4BqB,IA2BzCE,CAAkBJ,GAClC,OAAoB1V,EAAAA,EAAAA,KAAK4U,GAAiBe,EAAAA,EAAAA,GAAS,CACjDI,GAAIR,EACJrV,WAAW8V,EAAAA,EAAAA,GAAKJ,EAAQX,KAAM/U,GAC9BwV,WAAYA,EACZL,IAAKA,GACJG,GACL,E,6DClDA,SAAeS,EAAAA,EAAAA,IAA4BjW,EAAAA,EAAAA,KAAK,OAAQ,CACtDkW,EAAG,6CACD,W,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BjW,EAAAA,EAAAA,KAAK,OAAQ,CACtDkW,EAAG,6EACD,S,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BjW,EAAAA,EAAAA,KAAK,OAAQ,CACtDkW,EAAG,sCACD,M","sources":["Pages/Purchase/PurchaseInvoice/variable.js","Pages/Purchase/PurchaseInvoice/addToCart.jsx","Pages/Purchase/PurchaseInvoice/StaffInfoComp.jsx","Pages/Purchase/PurchaseInvoice/generalInfoComp.jsx","Pages/Purchase/PurchaseInvoice/purchaseInvoiceCreate.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Add.js"],"sourcesContent":["import { ISOString, isValidJSON } from \"../../../Components/functions\";\r\n\r\nconst user = localStorage.getItem('user');\r\nconst storage = isValidJSON(user) ? JSON.parse(user) : {};\r\n\r\nexport const initialInvoiceValue = {\r\n    PIN_Id: '',\r\n    Po_Inv_No: '',\r\n    Branch_Id: '',\r\n    Voucher_Type: 0,\r\n    Ref_Po_Inv_No: '',\r\n    Po_Inv_Date: ISOString(),\r\n    Po_Entry_Date: ISOString(),\r\n    Retailer_Id: '',\r\n    Retailer_Name: '',\r\n    GST_Inclusive: 2,\r\n    IS_IGST: 0,\r\n    Narration: '',\r\n    isConverted: '',\r\n    CSGT_Total: 0,\r\n    SGST_Total: 0,\r\n    IGST_Total: 0,\r\n    Round_off: 0,\r\n    Total_Before_Tax: 0,\r\n    Total_Tax: 0,\r\n    Total_Invoice_value: 0,\r\n    Cancel_status: 0,\r\n    Stock_Item_Ledger_Name: '',\r\n    Created_by: storage.UserId,\r\n    Altered_by: storage.UserId,\r\n    Created_on: '',\r\n    Alterd_on: '',\r\n    Trans_Type: '',\r\n    Alter_Id: '',\r\n    Approved_By: '',\r\n    Approve_Status: '',\r\n}\r\n\r\nexport const itemsRowDetails = {\r\n    Trip_Id: '',\r\n    Trip_Item_SNo: '',\r\n    POI_St_Id: '',\r\n    DeliveryId: '',\r\n    OrderId: '',\r\n    PIN_Id: '',\r\n    Po_Inv_Date: '',\r\n    S_No: '',\r\n    Location_Id: '',\r\n    Item_Id: '',\r\n    Item_Name: '',\r\n    Bill_Qty: 0,\r\n    Act_Qty: 0,\r\n    Item_Rate: 0,\r\n    Bill_Alt_Qty: 0,\r\n    Free_Qty: 0,\r\n    Unit_Id: '',\r\n    Unit_Name: '',\r\n    Batch_No: '',\r\n    Taxable_Rate: 0,\r\n    Amount: 0,\r\n    Total_Qty: 0,\r\n    Taxble: 0,\r\n    HSN_Code: '',\r\n    Taxable_Amount: 0,\r\n    Tax_Rate: 0,\r\n    Cgst: 0,\r\n    Cgst_Amo: 0,\r\n    Sgst: 0,\r\n    Sgst_Amo: 0,\r\n    Igst: 0,\r\n    Igst_Amo: 0,\r\n    Final_Amo: 0,\r\n    Created_on: '',\r\n}\r\n\r\nexport const staffRowDetails = {\r\n    Id: '',\r\n    PIN_Id: '',\r\n    Involved_Emp_Id: '',\r\n    Involved_Emp_Name: 'select',\r\n    Cost_Center_Type_Id: '',\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, Division, isEqualNumber, isValidObject, Multiplication, onlynum, reactSelectFilterLogic, toArray } from \"../../../Components/functions\";\r\nimport { ClearAll } from \"@mui/icons-material\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddItemsDialog = ({\r\n    children,\r\n    orderProducts = [],\r\n    setOrderProducts,\r\n    open = false,\r\n    onClose,\r\n    products = [],\r\n    brands = [],\r\n    uom = [],\r\n    godowns = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    editValues = null,\r\n    initialValue = {},\r\n}) => {\r\n\r\n    const [productDetails, setProductDetails] = useState(initialValue);\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues) && open) {\r\n            setProductDetails(pre => (\r\n                Object.fromEntries(\r\n                    Object.entries(pre).map(([key, value]) => [key, editValues[key] ? editValues[key] : value])\r\n                )\r\n            ))\r\n        }\r\n    }, [editValues])\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const closeDialog = () => {\r\n        setProductDetails(initialValue);\r\n        onClose();\r\n    }\r\n\r\n    const handleProductInputChange = () => {\r\n\r\n        setOrderProducts(pre => {\r\n            const existingProducts = pre.filter(ordered => !isEqualNumber(ordered.Item_Id, productDetails.Item_Id));\r\n\r\n            const currentProductDetails = Object.fromEntries(\r\n                Object.entries(initialValue).map(([key, value]) => {\r\n                    const productMaster = findProductDetails(productDetails.Item_Id);\r\n                    const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const { Bill_Qty, Item_Rate, Amount } = productDetails;\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    switch (key) {\r\n                        case 'Item_Name': return [key, productMaster.Product_Name]\r\n                        case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                        case 'Total_Qty': return [key, Bill_Qty]\r\n                        case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                        case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                        case 'Tax_Rate': return [key, gstPercentage]\r\n                        case 'Cgst':\r\n                        case 'Sgst': return [key, cgstPer ?? 0]\r\n                        case 'Cgst_Amo':\r\n                        case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                        case 'Igst': return [key, igstPer ?? 0]\r\n                        case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                        case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                        default: return [key, productDetails[key] || value]\r\n                    }\r\n                })\r\n            );\r\n\r\n            return [...existingProducts, currentProductDetails];\r\n        });\r\n\r\n        closeDialog();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                maxWidth='md' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id) {\r\n                        handleProductInputChange();\r\n                    } else {\r\n                        toast.warn('Select Product');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n\r\n                            {/* brand */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...brands.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* group */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* item name */}\r\n                            <div className={'col-md-8 p-2'}>\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: (\r\n                                            findProductDetails(productDetails.Item_Id)?.Product_Name\r\n                                        )\r\n                                    }}\r\n                                    isDisabled={checkIsNumber(productDetails.Pre_Id)}\r\n                                    menuPortalTarget={document.body}\r\n                                    onChange={e => {\r\n                                        const productInfo = findProductDetails(e.value);\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n\r\n                                            Item_Id: e.value,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Bill_Qty: 0,\r\n                                            Amount: 0,\r\n                                            Unit_Id: productInfo.UOM_Id ?? pre.Unit_Id,\r\n                                            Unit_Name: productInfo.Units ?? pre.Unit_Name,\r\n                                            HSN_Code: productInfo?.HSN_Code\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* godown  */}\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Godown</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails?.Location_Id,\r\n                                        label: godowns.find(\r\n                                            g => isEqualNumber(g.Godown_Id, productDetails?.Location_Id)\r\n                                        )?.Godown_Name || ''\r\n                                    }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, Location_Id: e.value }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...toArray(godowns).map(obj => ({\r\n                                            value: obj?.Godown_Id,\r\n                                            label: obj?.Godown_Name\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isDisabled={!checkIsNumber(productDetails?.Item_Id)}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Godown\"}\r\n                                    filterOption={reactSelectFilterLogic}\r\n                                // maxMenuHeight={200}  \r\n                                />\r\n                            </div>\r\n\r\n                            {/* quantity */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {Object.hasOwn(productDetails, 'Act_Qty') && (\r\n                                <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                    <label>Actual Quantity </label>\r\n                                    <input\r\n                                        value={productDetails.Act_Qty ? productDetails.Act_Qty : ''}\r\n                                        onInput={onlynum}\r\n                                        disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                        onChange={e => setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Act_Qty: e.target.value,\r\n                                        }))}\r\n                                        required\r\n                                        className=\"cus-inpt\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Rate */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* UOM */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={\r\n                                        Object.hasOwn(productDetails, 'UOM') ? productDetails.UOM :\r\n                                            Object.hasOwn(productDetails, 'Unit_Id') ? productDetails.Unit_Id : ''\r\n                                    }\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            UOM: value,\r\n                                            Unit_Id: value,\r\n                                            Units: label,\r\n                                            Unit_Name: label,\r\n                                        }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {uom.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Amount */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Batch */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Batch</label>\r\n                                <input\r\n                                    value={productDetails.Batch_No ? productDetails.Batch_No : ''}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Batch_No: e.target.value\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(initialValue)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeDialog}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItemsDialog;","import { Button, IconButton } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, reactSelectFilterLogic } from \"../../../Components/functions\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from 'react-select';\r\nimport { Delete } from \"@mui/icons-material\";\r\n\r\nconst PurchaseInvoiceStaffInvolved = ({\r\n    baseData,\r\n    StaffArray,\r\n    setStaffArray,\r\n    staffRowDetails\r\n}) => {\r\n    return (\r\n        <>\r\n\r\n            {/* staff info */}\r\n            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                    <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                        <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={() => setStaffArray([...StaffArray, { ...staffRowDetails }])}\r\n                        >Add</Button>\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"fa-13\">Sno</th>\r\n                                <th className=\"fa-13\">Staff Name</th>\r\n                                <th className=\"fa-13\">Category</th>\r\n                                <th className=\"fa-13\">#</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {StaffArray.map((row, index) => (\r\n                                <tr key={index}>\r\n                                    <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                    <td className='fa-13 w-100 p-0'>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: row?.Involved_Emp_Id,\r\n                                                label: row?.Involved_Emp_Name,\r\n                                            }}\r\n                                            onChange={e => setStaffArray((prev) => {\r\n                                                return prev.map((item, ind) => {\r\n                                                    if (isEqualNumber(ind, index)) {\r\n                                                        const staff = baseData.staff.find(c => isEqualNumber(c.Cost_Center_Id, e.value))\r\n                                                        return {\r\n                                                            ...item,\r\n                                                            Cost_Center_Type_Id:\r\n                                                                checkIsNumber(item.Cost_Center_Type_Id)\r\n                                                                    ? Number(item.Cost_Center_Type_Id)\r\n                                                                    : checkIsNumber(staff.User_Type)\r\n                                                                        ? Number(staff.User_Type)\r\n                                                                        : 0,\r\n                                                            Involved_Emp_Id: Number(e.value),\r\n                                                            Involved_Emp_Name: e.label\r\n                                                        }\r\n                                                    }\r\n                                                    return item;\r\n                                                });\r\n                                            })}\r\n                                            options={\r\n                                                [...baseData.staff.filter(fil => (\r\n                                                    !StaffArray.some(st => (\r\n                                                        isEqualNumber(st.Involved_Emp_Id, fil.Cost_Center_Id)\r\n                                                    ))\r\n                                                ))].map(st => ({\r\n                                                    value: st.Cost_Center_Id,\r\n                                                    label: st.Cost_Center_Name\r\n                                                }))\r\n                                            }\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Staff\"}\r\n                                            filterOption={reactSelectFilterLogic}\r\n                                        />\r\n                                    </td>\r\n                                    <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '100px' }}>\r\n                                        <select\r\n                                            value={row?.Cost_Center_Type_Id}\r\n                                            onChange={e => setStaffArray((prev) => {\r\n                                                return prev.map((item, ind) => {\r\n                                                    if (isEqualNumber(ind, index)) {\r\n                                                        return {\r\n                                                            ...item,\r\n                                                            Cost_Center_Type_Id: e.target.value\r\n                                                        }\r\n                                                    }\r\n                                                    return item;\r\n                                                });\r\n                                            })}\r\n                                            className=\"cus-inpt p-2 border-0\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            {baseData.staffType.map((st, sti) =>\r\n                                                <option value={st?.Cost_Category_Id} key={sti}>{st?.Cost_Category}</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </td>\r\n                                    <td className='fa-13 vctr p-0'>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setStaffArray(prev => {\r\n                                                    return prev.filter((_, filIndex) => index !== filIndex);\r\n                                                });\r\n                                            }}\r\n                                            size='small'\r\n                                        >\r\n                                            <Delete color='error' />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoiceStaffInvolved;","import { reactSelectFilterLogic, stringCompare } from \"../../../Components/functions\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from 'react-select';\r\n\r\n\r\nconst PurchaseInvoiceGeneralInfo = ({\r\n    invoiceDetails,\r\n    setInvoiceDetails,\r\n    baseData,\r\n    selectedItems,\r\n    setSelectedItems,\r\n    searchFromArrival,\r\n    inputStyle,\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0\">\r\n                <div className=\"border px-3 py-1\" style={{ minHeight: '30vh', height: '100%' }}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-8 p-2\">\r\n                            <label className='fa-13'>Vendor</label>\r\n                            <Select\r\n                                value={{\r\n                                    value: invoiceDetails?.Retailer_Id,\r\n                                    label: invoiceDetails?.Retailer_Name\r\n                                }}\r\n                                onChange={e => {\r\n                                    setInvoiceDetails(pre => ({\r\n                                        ...pre,\r\n                                        Retailer_Id: e.value,\r\n                                        Retailer_Name: e.label\r\n                                    }));\r\n                                    setSelectedItems([]);\r\n                                    searchFromArrival(e.value)\r\n                                }}\r\n                                options={[\r\n                                    { value: '', label: 'Search', isDisabled: true },\r\n                                    ...baseData.retailers.map(obj => ({\r\n                                        value: obj?.Retailer_Id,\r\n                                        label: obj?.Retailer_Name\r\n                                    }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder={\"Select Vendor\"}\r\n                                maxMenuHeight={300}\r\n                                filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-4 p-2\">\r\n                            <label className='fa-13'>Voucher Type</label>\r\n                            <select\r\n                                value={invoiceDetails.Voucher_Type}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Voucher_Type: e.target.value }))}\r\n                                className={inputStyle}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {baseData.voucherType.filter(\r\n                                    fil => stringCompare(fil.Type, 'PURCHASE_INVOICE')\r\n                                ).map((vou, vind) =>\r\n                                    <option\r\n                                        value={vou.Vocher_Type_Id}\r\n                                        key={vind}\r\n                                    >{vou.Voucher_Type}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>Branch <RequiredStar /></label>\r\n                            <select\r\n                                className={inputStyle}\r\n                                value={invoiceDetails?.Branch_Id}\r\n                                required\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Branch_Id: e.target.value }))}\r\n                            >\r\n                                <option value=\"\">select</option>\r\n                                {baseData.branch.map((o, i) => (\r\n                                    <option value={o?.BranchId} key={i}>{o?.BranchName}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>Entry Date <RequiredStar /></label>\r\n                            <input\r\n                                value={invoiceDetails?.Po_Entry_Date}\r\n                                type=\"date\"\r\n                                required\r\n                                className={inputStyle}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Po_Entry_Date: e.target.value }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>Bill Date <RequiredStar /></label>\r\n                            <input\r\n                                value={invoiceDetails?.Po_Inv_Date}\r\n                                type=\"date\"\r\n                                required\r\n                                className={inputStyle}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Po_Inv_Date: e.target.value }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>Ref Number</label>\r\n                            <input\r\n                                value={invoiceDetails?.Ref_Po_Inv_No}\r\n                                className={inputStyle}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Ref_Po_Inv_No: e.target.value }))}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>GST Type <RequiredStar /></label>\r\n                            <select\r\n                                className={inputStyle}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, GST_Inclusive: Number(e.target.value) }))}\r\n                                value={invoiceDetails.GST_Inclusive}\r\n                                required\r\n                            >\r\n                                <option value={1}>Inclusive Tax</option>\r\n                                <option value={0}>Exclusive Tax</option>\r\n                                <option value={2}>Not Taxable</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                            <label className='fa-13'>Tax Type</label>\r\n                            <select\r\n                                className={inputStyle}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, IS_IGST: Number(e.target.value) }))}\r\n                                value={invoiceDetails.IS_IGST}\r\n                            >\r\n                                <option value='0'>GST</option>\r\n                                <option value='1'>IGST</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-6 p-2\">\r\n                            <label className='fa-13'>Stock Item Ledger Name</label>\r\n                            <Select\r\n                                value={{ value: invoiceDetails.Stock_Item_Ledger_Name, label: invoiceDetails.Stock_Item_Ledger_Name }}\r\n                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Stock_Item_Ledger_Name: e.label }))}\r\n                                options={[\r\n                                    { value: '', label: 'Search', isDisabled: true },\r\n                                    ...baseData.stockItemLedgerName.map(obj => ({\r\n                                        value: obj?.Stock_Item_Ledger_Name,\r\n                                        label: obj?.Stock_Item_Ledger_Name\r\n                                    }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                required={true}\r\n                                isSearchable={true}\r\n                                placeholder={\"Select\"}\r\n                                maxMenuHeight={300}\r\n                                filterOption={reactSelectFilterLogic}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <label className='fa-13'>Narration</label>\r\n                    <textarea\r\n                        className=\"cus-inpt fa-14\"\r\n                        rows={2}\r\n                        value={invoiceDetails.Narration}\r\n                        onChange={e => setInvoiceDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoiceGeneralInfo;","import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Button, Card, CardContent, Dialog, DialogContent, DialogTitle, IconButton, Switch } from \"@mui/material\";\r\nimport { Add, Delete } from \"@mui/icons-material\";\r\nimport { Addition, checkIsNumber, Division, getUniqueData, isEqualNumber, ISOString, isValidObject, Multiplication, NumberFormat, numberToWords, onlynumAndNegative, RoundNumber, toNumber } from \"../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { calculateGSTDetails } from '../../../Components/taxCalculator';\r\nimport { initialInvoiceValue, itemsRowDetails, staffRowDetails } from \"./variable\";\r\nimport AddItemsDialog from \"./addToCart\";\r\nimport PurchaseInvoiceStaffInvolved from \"./StaffInfoComp\";\r\nimport PurchaseInvoiceGeneralInfo from \"./generalInfoComp\";\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst dialogs = {\r\n    addProductDialog: false,\r\n    selectArrivalDialog: false\r\n}\r\n\r\nconst PurchaseInvoiceManagement = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    const navigation = useNavigate();\r\n    const stateDetails = location.state;\r\n\r\n    const [invoiceDetails, setInvoiceDetails] = useState(initialInvoiceValue);\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [StaffArray, setStaffArray] = useState([]);\r\n\r\n    const [deliveryDetails, setDeliveryDetails] = useState([]);\r\n    const [selectedProductToEdit, setSelectedProductToEdit] = useState(null);\r\n\r\n    const tdStyle = 'border fa-14 vctr';\r\n    const inputStyle = 'cus-inpt p-2';\r\n    const isInclusive = isEqualNumber(invoiceDetails?.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(invoiceDetails?.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(invoiceDetails?.IS_IGST, 1);\r\n\r\n    const [dialog, setDialog] = useState(dialogs);\r\n    const [manualInvoice, setManualInvoice] = useState(false)\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        retailers: [],\r\n        branch: [],\r\n        uom: [],\r\n        products: [],\r\n        voucherType: [],\r\n        stockItemLedgerName: [],\r\n        godown: [],\r\n        staff: [],\r\n        staffType: [],\r\n        brand: [],\r\n    });\r\n\r\n    const Total_Invoice_value = useMemo(() => {\r\n        return selectedItems.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return Addition(acc, Amount);\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n            if (isInclusive) {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'remove').with_tax);\r\n            } else {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'add').with_tax);\r\n            }\r\n        }, 0);\r\n    }, [selectedItems, isNotTaxableBill, baseData.products, IS_IGST, isInclusive])\r\n\r\n    const taxSplitUp = useMemo(() => {\r\n        if (!selectedItems || selectedItems.length === 0) return {};\r\n\r\n        let totalTaxable = 0;\r\n        let totalTax = 0;\r\n\r\n        selectedItems.forEach(item => {\r\n            const Amount = RoundNumber(item?.Amount || 0);\r\n\r\n            if (isNotTaxableBill) {\r\n                totalTaxable = Addition(totalTaxable, Amount);\r\n                return;\r\n            }\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            const taxInfo = calculateGSTDetails(Amount, gstPercentage, isInclusive ? 'remove' : 'add');\r\n\r\n            totalTaxable = Addition(totalTaxable, parseFloat(taxInfo.without_tax));\r\n            totalTax = Addition(totalTax, parseFloat(taxInfo.tax_amount));\r\n        });\r\n\r\n        const totalWithTax = Addition(totalTaxable, totalTax);\r\n        const roundedTotal = Math.round(totalWithTax);\r\n        const roundOff = RoundNumber(roundedTotal - totalWithTax);\r\n\r\n        const cgst = isEqualNumber(IS_IGST, 1) ? 0 : RoundNumber(totalTax / 2);\r\n        const sgst = isEqualNumber(IS_IGST, 1) ? 0 : RoundNumber(totalTax / 2);\r\n        const igst = isEqualNumber(IS_IGST, 1) ? RoundNumber(totalTax) : 0;\r\n\r\n        return {\r\n            totalTaxable: RoundNumber(totalTaxable),\r\n            totalTax: RoundNumber(totalTax),\r\n            cgst,\r\n            sgst,\r\n            igst,\r\n            roundOff,\r\n            invoiceTotal: roundedTotal\r\n        };\r\n\r\n    }, [selectedItems, baseData.products, IS_IGST, isNotTaxableBill, isInclusive]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                if (loadingOn) loadingOn();\r\n\r\n                const [\r\n                    retailerResponse,\r\n                    branchResponse,\r\n                    uomResponse,\r\n                    productsResponse,\r\n                    voucherTypeResponse,\r\n                    stockItemLedgerNameResponse,\r\n                    godownLocationsResponse,\r\n                    staffResponse,\r\n                    staffCategory\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/retailers/dropDown` }),\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `purchase/stockItemLedgerName?type=PURCHASE_INVOICE` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                ]);\r\n\r\n                const retailersData = (retailerResponse.success ? retailerResponse.data : []).sort(\r\n                    (a, b) => String(a?.Retailer_Name).localeCompare(b?.Retailer_Name)\r\n                );\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const stockItemLedgerName = (stockItemLedgerNameResponse.success ? stockItemLedgerNameResponse.data : []).sort(\r\n                    (a, b) => String(a?.Stock_Item_Ledger_Name).localeCompare(b?.Stock_Item_Ledger_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    retailers: retailersData,\r\n                    branch: branchData,\r\n                    uom: uomData,\r\n                    products: productsData,\r\n                    voucherType: voucherType,\r\n                    stockItemLedgerName: stockItemLedgerName,\r\n                    godown: godownLocations,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                    brand: getUniqueData(productsData, 'Brand', ['Brand_Name']),\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            } finally {\r\n                if (loadingOff) loadingOff();\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            isValidObject(stateDetails) &&\r\n            Array.isArray(stateDetails?.orderInfo) &&\r\n            Array.isArray(stateDetails?.staffInfo) &&\r\n            isValidObject(stateDetails?.invoiceInfo)\r\n        ) {\r\n            const { invoiceInfo, orderInfo, staffInfo } = stateDetails;\r\n            searchFromArrival(invoiceInfo.Retailer_Id);\r\n            setInvoiceDetails(\r\n                Object.fromEntries(\r\n                    Object.entries(initialInvoiceValue).map(([key, value]) => {\r\n                        if (key === 'Po_Inv_Date') return [key, invoiceInfo[key] ? ISOString(invoiceInfo[key]) : value]\r\n                        if (key === 'Po_Entry_Date') return [key, invoiceInfo[key] ? ISOString(invoiceInfo[key]) : value]\r\n                        return [key, invoiceInfo[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n            setSelectedItems(\r\n                orderInfo.map(item => Object.fromEntries(\r\n                    Object.entries(itemsRowDetails).map(([key, value]) => {\r\n                        if (key === 'Item_Name') return [key, item['Product_Name'] || value]\r\n                        return [key, item[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n            setStaffArray(\r\n                staffInfo.map(item => Object.fromEntries(\r\n                    Object.entries(staffRowDetails).map(([key, value]) => {\r\n                        return [key, item[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n            setManualInvoice(invoiceInfo.isFromPurchaseOrder)\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const searchFromArrival = (vendor) => {\r\n        if (checkIsNumber(vendor)) {\r\n            if (loadingOn) loadingOn();\r\n            // setSelectedItems([]);\r\n            setDeliveryDetails([]);\r\n            fetchLink({\r\n                address: `dataEntry/purchaseOrderEntry/delivery/partyBased?VendorId=${vendor}`\r\n            }).then(data => {\r\n                if (data.success) setDeliveryDetails(data.data)\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff()\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeItems = (itemDetail, deleteOption) => {\r\n        setSelectedItems((prev) => {\r\n            const preItems = prev.filter(o => !(\r\n                isEqualNumber(o?.OrderId, itemDetail?.OrderId)\r\n                && isEqualNumber(o?.Item_Id, itemDetail?.ItemId)\r\n                && isEqualNumber(o?.DeliveryId, itemDetail?.Trip_Item_SNo)\r\n            ));\r\n            if (deleteOption) {\r\n                return preItems;\r\n            } else {\r\n                const currentOrders = deliveryDetails.filter(item => (\r\n                    isEqualNumber(item.OrderId, itemDetail.OrderId)\r\n                    && isEqualNumber(itemDetail?.ItemId, item?.ItemId)\r\n                    && isEqualNumber(itemDetail?.Trip_Item_SNo, item?.Trip_Item_SNo)\r\n                ));\r\n\r\n                const notInStaffList = [...new Map(\r\n                    currentOrders.flatMap(ordr => ordr.EmployeesInvolved)\r\n                        .filter(staff => !StaffArray.some(arrObj => isEqualNumber(arrObj.Involved_Emp_Id, staff.EmployeeId)))\r\n                        .map(staff => [staff.EmployeeId, staff])\r\n                ).values()];\r\n\r\n                if (notInStaffList.length > 0) {\r\n                    setStaffArray(prevStaffArray => [\r\n                        ...prevStaffArray,\r\n                        ...notInStaffList.map(staff => Object.fromEntries(\r\n                            Object.entries(staffRowDetails).map(([key, value]) => {\r\n                                switch (key) {\r\n                                    case 'Involved_Emp_Id': return [key, staff?.EmployeeId];\r\n                                    case 'Involved_Emp_Name': return [key, staff?.EmployeeName];\r\n                                    case 'Cost_Center_Type_Id': return [key, staff?.CostType];\r\n                                    default: return [key, value];\r\n                                }\r\n                            })\r\n                        ))\r\n                    ]);\r\n                }\r\n\r\n                const reStruc = currentOrders.map(item => {\r\n                    const productDetails = findProductDetails(baseData.products, item.ItemId);\r\n                    const gstPercentage = IS_IGST ? productDetails.Igst_P : productDetails.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const Bill_Qty = parseFloat(item.Weight) ?? 0;\r\n                    const Item_Rate = RoundNumber(item.BilledRate) ?? 0;\r\n                    const Amount = Multiplication(Bill_Qty, Item_Rate);\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    console.log(productDetails)\r\n\r\n                    return Object.fromEntries(\r\n                        Object.entries(itemsRowDetails).map(([key, value]) => {\r\n                            switch (key) {\r\n                                case 'DeliveryId': return [key, Number(item?.Trip_Item_SNo)]\r\n                                case 'OrderId': return [key, Number(item?.OrderId)]\r\n                                case 'Po_Inv_Date': return [key, invoiceDetails?.Po_Inv_Date]\r\n                                case 'Location_Id': return [key, Number(item?.LocationId) ?? '']\r\n                                case 'Item_Id': return [key, Number(item?.ItemId)]\r\n                                case 'Item_Name': return [key, productDetails?.Product_Name]\r\n                                case 'Unit_Id': return [key, productDetails?.UOM_Id]\r\n                                case 'Unit_Name': return [key, productDetails?.Units]\r\n                                case 'Bill_Qty': return [key, item?.pendingInvoiceWeight]\r\n                                case 'Act_Qty': return [key, Bill_Qty]\r\n                                case 'Item_Rate': return [key, Item_Rate]\r\n                                case 'Bill_Alt_Qty': return [key, Number(item?.Quantity)]\r\n                                case 'Batch_No': return [key, item?.BatchLocation]\r\n                                case 'Amount': return [key, Amount]\r\n                                case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                                case 'Total_Qty': return [key, Bill_Qty]\r\n                                case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                                case 'HSN_Code': return [key, productDetails.HSN_Code]\r\n                                case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                                case 'Tax_Rate': return [key, gstPercentage]\r\n                                case 'Cgst':\r\n                                case 'Sgst': return [key, cgstPer ?? 0]\r\n                                case 'Cgst_Amo':\r\n                                case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                                case 'Igst': return [key, igstPer ?? 0]\r\n                                case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                                case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                                default: return [key, value]\r\n                            }\r\n                        })\r\n                    )\r\n\r\n                });\r\n                return preItems.concat(reStruc);\r\n            }\r\n        });\r\n    };\r\n\r\n    const closeDialogs = () => {\r\n        setDialog(dialogs);\r\n    }\r\n\r\n    const changeSelectedObjects = (indexValue, key, value) => {\r\n        setSelectedItems((prev) => {\r\n            return prev.map((item, sIndex) => {\r\n                if (isEqualNumber(sIndex, indexValue)) {\r\n                    switch (key) {\r\n                        case 'Bill_Qty': {\r\n                            const updatedValue = parseFloat(value || 0);\r\n                            const newItem = { ...item, Bill_Qty: updatedValue };\r\n                            if (item.Item_Rate) {\r\n                                newItem.Amount = Multiplication(item.Item_Rate, updatedValue);\r\n                            } else if (item.Amount) {\r\n                                newItem.Item_Rate = Division(item.Amount, updatedValue);\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Item_Rate': {\r\n                            const updatedValue = parseFloat(value || 0);\r\n                            const newItem = { ...item, Item_Rate: updatedValue };\r\n                            if (item.Bill_Qty) {\r\n                                newItem.Amount = Multiplication(updatedValue, item.Bill_Qty);\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Amount': {\r\n                            const updatedValue = parseFloat(value || 0);\r\n                            const newItem = { ...item, Amount: updatedValue };\r\n                            if (item.Bill_Qty) {\r\n                                newItem.Item_Rate = Division(updatedValue, item.Bill_Qty);\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const postOrder = () => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: 'purchase/purchaseOrder',\r\n            method: checkIsNumber(invoiceDetails?.PIN_Id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                Product_Array: selectedItems,\r\n                StaffArray: StaffArray,\r\n                ...invoiceDetails\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data?.message || 'Saved');\r\n                setSelectedItems([]);\r\n                setInvoiceDetails(initialInvoiceValue);\r\n                setDeliveryDetails([]);\r\n                setStaffArray([]);\r\n                if ((Array.isArray(stateDetails?.orderInfo) || isValidObject(stateDetails?.invoiceInfo)) && window.history.length > 1) {\r\n                    navigation(-1);\r\n                } else {\r\n                    navigation(location.pathname, { replace: true, state: null });\r\n                }\r\n            } else {\r\n                toast.error(data?.message || 'Request Failed')\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddItemsDialog\r\n                orderProducts={selectedItems}\r\n                setOrderProducts={setSelectedItems}\r\n                open={dialog.addProductDialog}\r\n                onClose={() => {\r\n                    setDialog(pre => ({ ...pre, addProductDialog: false }))\r\n                    setSelectedProductToEdit(null);\r\n                }}\r\n                products={baseData.products}\r\n                brands={baseData.brand}\r\n                uom={baseData.uom}\r\n                godowns={baseData.godown}\r\n                GST_Inclusive={isInclusive}\r\n                IS_IGST={IS_IGST}\r\n                editValues={selectedProductToEdit}\r\n                initialValue={itemsRowDetails}\r\n                stockInGodown={[]}\r\n            />\r\n\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                postOrder();\r\n            }}>\r\n                <Card>\r\n\r\n                    <div className='d-flex flex-wrap align-items-center border-bottom py-2 px-3'>\r\n                        <span className=\"flex-grow-1 fa-16 fw-bold\">Purchase Invoice Creation</span>\r\n                        <span>\r\n\r\n                            <label htmlFor=\"\">Manual Invoice</label>\r\n                            <Switch\r\n                                checked={manualInvoice}\r\n                                onChange={e => {\r\n                                    setManualInvoice(e.target.checked);\r\n                                    setSelectedItems([])\r\n                                }}\r\n                            />\r\n\r\n                            <Button type='button' onClick={() => {\r\n                                if ((Array.isArray(stateDetails?.orderInfo) || isValidObject(stateDetails?.invoiceInfo)) && window.history.length > 1) {\r\n                                    navigation(-1);\r\n                                } else {\r\n                                    navigation('/erp/purchase/invoice');\r\n                                }\r\n                            }}>Cancel</Button>\r\n\r\n                            <Button type='submit' variant=\"contained\">submit</Button>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <CardContent>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <PurchaseInvoiceStaffInvolved\r\n                                baseData={baseData}\r\n                                StaffArray={StaffArray}\r\n                                setStaffArray={setStaffArray}\r\n                                staffRowDetails={staffRowDetails}\r\n                            />\r\n\r\n                            {/* general info */}\r\n                            <PurchaseInvoiceGeneralInfo\r\n                                invoiceDetails={invoiceDetails}\r\n                                setInvoiceDetails={setInvoiceDetails}\r\n                                baseData={baseData}\r\n                                selectedItems={selectedItems}\r\n                                setSelectedItems={setSelectedItems}\r\n                                searchFromArrival={searchFromArrival}\r\n                                inputStyle={inputStyle}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        {/* product info */}\r\n                        <div className=\"table-responsive\">\r\n                            <div className=\"d-flex p-2 justify-content-end\">\r\n\r\n                                <Button type=\"button\" onClick={() => setSelectedItems([])}>clear selected</Button>\r\n\r\n                                {manualInvoice ? (\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setSelectedProductToEdit(null);\r\n                                            setDialog(pre => ({ ...pre, addProductDialog: true }));\r\n                                        }}\r\n                                        sx={{ ml: 1 }}\r\n                                        variant='outlined'\r\n                                        type=\"button\"\r\n                                        startIcon={<Add />}\r\n                                        disabled={!checkIsNumber(invoiceDetails.Retailer_Id)}\r\n                                    >Add Product</Button>\r\n                                ) : (\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        className='ms-2'\r\n                                        type=\"button\"\r\n                                        onClick={() => setDialog(pre => ({ ...pre, selectArrivalDialog: true }))}\r\n                                        startIcon={<Add />}\r\n                                        disabled={!checkIsNumber(invoiceDetails.Retailer_Id)}\r\n                                    >Add Products</Button>\r\n                                )}\r\n\r\n                            </div>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td className={tdStyle}>SNo</td>\r\n                                        <td className={tdStyle}>Item</td>\r\n                                        <td className={tdStyle}>Rate</td>\r\n                                        <td className={tdStyle}>Bill Quantity</td>\r\n                                        <td className={tdStyle}>Acl Quantity</td>\r\n                                        <td className={tdStyle}>Unit</td>\r\n                                        <td className={tdStyle}>Amount</td>\r\n                                        <td className={tdStyle}>Godown Location</td>\r\n                                        <td className={tdStyle}>Batch</td>\r\n                                        <td className={tdStyle}>#</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {selectedItems.map((row, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className={tdStyle}>{i + 1}</td>\r\n                                            {/* <td className={tdStyle}>{findProductDetails(baseData.products, row.Item_Id)?.Product_Name ?? 'Not found'}</td> */}\r\n                                            <td className={tdStyle}>{row?.Item_Name || 'Not found'}</td>\r\n                                            <td className={tdStyle}>\r\n                                                <input\r\n                                                    value={row?.Item_Rate ? row?.Item_Rate : ''}\r\n                                                    type=\"number\"\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Item_Rate', e.target.value)}\r\n                                                    required\r\n                                                />\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <input\r\n                                                    value={row?.Bill_Qty ? row?.Bill_Qty : ''}\r\n                                                    type=\"number\"\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Bill_Qty', e.target.value)}\r\n                                                    required\r\n                                                />\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <input\r\n                                                    value={row?.Act_Qty ?? ''}\r\n                                                    type=\"number\"\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Act_Qty', e.target.value)}\r\n                                                    required\r\n                                                />\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <select\r\n                                                    value={row?.Unit_Id}\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => {\r\n                                                        const selectedIndex = e.target.selectedIndex;\r\n                                                        const label = e.target.options[selectedIndex].text;\r\n                                                        const value = e.target.value;\r\n                                                        changeSelectedObjects(i, 'Unit_Id', value);\r\n                                                        changeSelectedObjects(i, 'Unit_Name', label);\r\n                                                    }}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">select</option>\r\n                                                    {baseData.uom.map((o, i) => (\r\n                                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <input\r\n                                                    value={row?.Amount ? row?.Amount : ''}\r\n                                                    type=\"number\"\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Amount', e.target.value)}\r\n                                                    required\r\n                                                />\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <select\r\n                                                    value={row?.Location_Id}\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Location_Id', e.target.value)}\r\n                                                    disabled={toNumber(row?.DeliveryId)}\r\n                                                >\r\n                                                    <option value=\"\">select</option>\r\n                                                    {baseData.godown.map((o, i) => (\r\n                                                        <option value={o?.Godown_Id} key={i}>{o?.Godown_Name}</option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <input\r\n                                                    value={row?.Batch_No}\r\n                                                    className={inputStyle}\r\n                                                    onChange={e => changeSelectedObjects(i, 'Batch_No', e.target.value)}\r\n                                                    disabled={toNumber(row?.DeliveryId)}\r\n                                                />\r\n                                            </td>\r\n                                            <td className={tdStyle}>\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        setSelectedItems(prev => {\r\n                                                            return prev.filter((_, filIndex) => i !== filIndex);\r\n                                                        });\r\n                                                    }}\r\n                                                    size='small'\r\n                                                >\r\n                                                    <Delete color='error' />\r\n                                                </IconButton>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border p-2\" rowSpan={isEqualNumber(invoiceDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                            Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                        </td>\r\n                                        <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {/* {NumberFormat(totalValueBeforeTax.TotalValue)} */}\r\n                                            {taxSplitUp.totalTaxable}\r\n                                        </td>\r\n                                    </tr>\r\n                                    {!IS_IGST ? (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td className=\"border p-2\">CGST</td>\r\n                                                <td className=\"border p-2\">\r\n                                                    {taxSplitUp.cgst}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"border p-2\">SGST</td>\r\n                                                <td className=\"border p-2\">\r\n                                                    {taxSplitUp.sgst}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </>\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">IGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {taxSplitUp.igst}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">Round Off</td>\r\n                                        <td className=\"border p-2\">\r\n                                            <input\r\n                                                value={invoiceDetails.Round_off}\r\n                                                defaultValue={taxSplitUp.roundOff}\r\n                                                style={{ minWidth: '200px', maxWidth: '350px' }}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                onInput={onlynumAndNegative}\r\n                                                onChange={e => setInvoiceDetails(pre => ({ ...pre, Round_off: e.target.value }))}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">Total</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(Math.round(Total_Invoice_value))}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </form>\r\n\r\n            <Dialog\r\n                open={dialog.selectArrivalDialog}\r\n                onClose={closeDialogs}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex flex-wrap align-items-center '>\r\n                    <span className=\"flex-grow-1\">Select Purchase Order</span>\r\n                    <span>\r\n                        <Button onClick={closeDialogs} type=\"button\" className='me-2'>close</Button>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <FilterableTable\r\n                        dataArray={deliveryDetails}\r\n                        columns={[\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: '#',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => {\r\n                                    const isChecked = selectedItems.findIndex(o => isEqualNumber(o?.DeliveryId, row?.Trip_Item_SNo)) !== -1;\r\n\r\n                                    return (\r\n                                        <div>\r\n                                            <input\r\n                                                className=\"form-check-input shadow-none pointer\"\r\n                                                style={{ padding: '0.7em' }}\r\n                                                type=\"checkbox\"\r\n                                                checked={isChecked}\r\n                                                onChange={() => {\r\n                                                    if (isChecked) changeItems(row, true)\r\n                                                    else changeItems(row)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            },\r\n                            createCol('ArrivalDate', 'date'),\r\n                            createCol('ItemName', 'string'),\r\n                            createCol('BilledRate', 'string'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Weight',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    row?.Weight ?? 0\r\n                                ) + ' ' + row?.Units\r\n                            },\r\n                            createCol('pendingInvoiceWeight', 'number', 'Pending Tonnage'),\r\n                            createCol('Quantity', 'number'),\r\n                            createCol('PO_ID', 'string'),\r\n                            createCol('Location', 'string'),\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        disablePagination\r\n                        title={`Arrival Details of ${baseData.retailers?.find(ven =>\r\n                            isEqualNumber(ven?.Retailer_Id, invoiceDetails?.Retailer_Id)\r\n                        )?.Retailer_Name ?? 'Not available'}`}\r\n                        maxHeightOption\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoiceManagement;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');"],"names":["user","localStorage","getItem","storage","isValidJSON","JSON","parse","initialInvoiceValue","PIN_Id","Po_Inv_No","Branch_Id","Voucher_Type","Ref_Po_Inv_No","Po_Inv_Date","ISOString","Po_Entry_Date","Retailer_Id","Retailer_Name","GST_Inclusive","IS_IGST","Narration","isConverted","CSGT_Total","SGST_Total","IGST_Total","Round_off","Total_Before_Tax","Total_Tax","Total_Invoice_value","Cancel_status","Stock_Item_Ledger_Name","Created_by","UserId","Altered_by","Created_on","Alterd_on","Trans_Type","Alter_Id","Approved_By","Approve_Status","itemsRowDetails","Trip_Id","Trip_Item_SNo","POI_St_Id","DeliveryId","OrderId","S_No","Location_Id","Item_Id","Item_Name","Bill_Qty","Act_Qty","Item_Rate","Bill_Alt_Qty","Free_Qty","Unit_Id","Unit_Name","Batch_No","Taxable_Rate","Amount","Total_Qty","Taxble","HSN_Code","Taxable_Amount","Tax_Rate","Cgst","Cgst_Amo","Sgst","Sgst_Amo","Igst","Igst_Amo","Final_Amo","staffRowDetails","Id","Involved_Emp_Id","Involved_Emp_Name","Cost_Center_Type_Id","_ref","_findProductDetails","_godowns$find","children","orderProducts","setOrderProducts","open","onClose","products","brands","uom","godowns","editValues","initialValue","productDetails","setProductDetails","useState","isInclusive","isEqualNumber","isNotTaxableBill","useEffect","isValidObject","pre","Object","fromEntries","entries","map","_ref2","key","value","findProductDetails","productid","_products$find","find","obj","Product_Id","closeDialog","_jsxs","_Fragment","Dialog","maxWidth","fullWidth","_jsx","DialogTitle","className","onSubmit","e","preventDefault","filter","ordered","_ref3","productMaster","gstPercentage","Igst_P","Gst_P","isTaxable","taxType","itemRateGst","calculateGSTDetails","gstInfo","cgstPer","cgst_per","igstPer","igst_per","cgst_amount","igst_amount","Product_Name","base_amount","with_tax","toast","warn","DialogContent","Select","BrandID","label","Brand","onChange","_objectSpread","options","isDisabled","Brand_Name","styles","customSelectStyles","menuPortalTarget","document","body","isSearchable","placeholder","maxMenuHeight","filterOption","reactSelectFilterLogic","GroupID","Group","pro","reduce","acc","some","grp","Product_Group","push","Pro_Group","RequiredStar","checkIsNumber","Pre_Id","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$Item_Rat","_productInfo$UOM_Id","_productInfo$Units","UOM_Id","Units","findIndex","ind","required","g","Godown_Id","Godown_Name","toArray","onInput","onlynum","disabled","Multiplication","target","Division","min","hasOwn","UOM","selectedIndex","text","o","i","DialogActions","Button","onClick","type","startIcon","ClearAll","variant","baseData","StaffArray","setStaffArray","style","minHeight","height","color","row","index","prev","item","staff","c","Cost_Center_Id","Number","User_Type","fil","st","Cost_Center_Name","minWidth","staffType","sti","Cost_Category_Id","Cost_Category","IconButton","_","filIndex","size","Delete","invoiceDetails","setInvoiceDetails","selectedItems","setSelectedItems","searchFromArrival","inputStyle","retailers","voucherType","stringCompare","Type","vou","vind","Vocher_Type_Id","branch","BranchId","BranchName","stockItemLedgerName","rows","_arr$find","arguments","length","undefined","dialogs","addProductDialog","selectArrivalDialog","_baseData$retailers$f","_baseData$retailers","_baseData$retailers$f2","loadingOn","loadingOff","location","useLocation","navigation","useNavigate","stateDetails","state","deliveryDetails","setDeliveryDetails","selectedProductToEdit","setSelectedProductToEdit","tdStyle","dialog","setDialog","manualInvoice","setManualInvoice","setBaseData","godown","brand","useMemo","RoundNumber","Addition","product","taxSplitUp","totalTaxable","totalTax","forEach","taxInfo","parseFloat","without_tax","tax_amount","totalWithTax","roundedTotal","Math","round","roundOff","cgst","sgst","igst","invoiceTotal","async","retailerResponse","branchResponse","uomResponse","productsResponse","voucherTypeResponse","stockItemLedgerNameResponse","godownLocationsResponse","staffResponse","staffCategory","Promise","all","fetchLink","address","retailersData","success","data","sort","a","b","String","localeCompare","branchData","uomData","productsData","godownLocations","staffData","staffCategoryData","getUniqueData","console","error","fetchData","Array","isArray","orderInfo","staffInfo","invoiceInfo","_invoiceInfo$key","_item$key","_ref4","_item$key2","isFromPurchaseOrder","vendor","concat","then","catch","finally","changeItems","itemDetail","deleteOption","preItems","ItemId","currentOrders","notInStaffList","Map","flatMap","ordr","EmployeesInvolved","arrObj","EmployeeId","values","prevStaffArray","_ref5","EmployeeName","CostType","reStruc","_parseFloat","_RoundNumber","Weight","BilledRate","log","_ref6","_Number","LocationId","pendingInvoiceWeight","Quantity","BatchLocation","closeDialogs","changeSelectedObjects","indexValue","sIndex","updatedValue","newItem","AddItemsDialog","stockInGodown","method","bodyData","Product_Array","message","window","history","pathname","replace","Card","htmlFor","Switch","checked","CardContent","PurchaseInvoiceStaffInvolved","PurchaseInvoiceGeneralInfo","sx","ml","Add","_row$Act_Qty","toNumber","rowSpan","numberToWords","parseInt","defaultValue","onlynumAndNegative","NumberFormat","fullScreen","FilterableTable","dataArray","columns","isVisible","ColumnHeader","isCustomCell","Cell","_ref7","isChecked","padding","createCol","_ref8","_row$Weight","EnableSerialNumber","disablePagination","title","ven","maxHeightOption","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","createSvgIcon","d"],"sourceRoot":""}