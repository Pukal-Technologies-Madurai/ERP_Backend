{"version":3,"file":"static/js/5828.80ff11a7.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Inventry/Processing/addProcessingComp/variables.js","Pages/Inventry/Processing/addProcessingComp/consumption.jsx","Pages/Inventry/Processing/addProcessingComp/production.jsx","Pages/Inventry/Processing/AddProcessing.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { getSessionUser, ISOString } from \"../../../../Components/functions\";\r\n\r\nconst { user } = getSessionUser();\r\n\r\nexport const initialStockJournalInfoValues = {\r\n    PR_Id: '',\r\n    PR_Inv_Id: '',\r\n    Year_Id: '',\r\n    Branch_Id: '',\r\n    Process_no: '',\r\n    P_No: '',\r\n\r\n    Godownlocation: '',\r\n    BillType: 'New',\r\n    VoucherType: '',\r\n    Process_date: ISOString(),\r\n    Machine_No: '',\r\n    StartDateTime: '',\r\n    EndDateTime: '',\r\n    ST_Reading: '',\r\n    EN_Reading: '',\r\n    Total_Reading: '',\r\n    Narration: '',\r\n    PR_Status: 'NEW',\r\n    Created_By: user?.name,\r\n    Updated_By: user?.name,\r\n}\r\n\r\nexport const initialSoruceValue = {\r\n    PRS_Id: '',\r\n    PR_Id: '',\r\n    Sour_Item_Id: '',\r\n    Sour_Item_Name: 'Select',\r\n    Sour_Goodown_Id: '',\r\n    Godown_Name: 'Select',\r\n    Sour_Batch_Lot_No: '',\r\n    Sour_Qty: 0,\r\n    Sour_Unit_Id: '',\r\n    Sour_Unit: '',\r\n    Sour_Rate: 0,\r\n    Sour_Amt: 0,\r\n}\r\n\r\nexport const initialDestinationValue = {\r\n    PRS_Id: '',\r\n    PR_Id: '',\r\n    Dest_Item_Id: '',\r\n    Dest_Item_Name: 'Select',\r\n    Dest_Goodown_Id: '',\r\n    Godown_Name: 'Select',\r\n    Dest_Batch_Lot_No: '',\r\n    Dest_Qty: 0,\r\n    Dest_Unit_Id: '',\r\n    Dest_Unit: '',\r\n    Dest_Rate: 0,\r\n    Dest_Amt: 0,\r\n}\r\n\r\nexport const initialStaffInvolvedValue = {\r\n    PR_Id: '',\r\n    S_Id: '',\r\n    Staff_Id: '',\r\n    Staff_Name: '',\r\n    Staff_Type_Id: '',\r\n}\r\n\r\nexport const soruceAndDestination = [\r\n    { source: 'Sour_Item_Id', destination: 'Dest_Item_Id' },\r\n    { source: 'Sour_Item_Name', destination: 'Dest_Item_Name' },\r\n    { source: 'Sour_Goodown_Id', destination: 'Dest_Goodown_Id' },\r\n    { source: 'Sour_Batch_Lot_No', destination: 'Dest_Batch_Lot_No' },\r\n    { source: 'Sour_Qty', destination: 'Dest_Qty' },\r\n    { source: 'Sour_Unit_Id', destination: 'Dest_Unit_Id' },\r\n    { source: 'Sour_Unit', destination: 'Dest_Unit' },\r\n    { source: 'Sour_Rate', destination: 'Dest_Rate' },\r\n    { source: 'Sour_Amt', destination: 'Dest_Amt' },\r\n];","import RequiredStar from '../../../../Components/requiredStar';\r\nimport { initialSoruceValue } from './variables'\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../../Components/tablecolumn\";\r\nimport { Addition, checkIsNumber, Division, isEqualNumber, Multiplication, onlynum, toNumber } from '../../../../Components/functions';\r\nimport { Button, IconButton } from '@mui/material';\r\nimport { Delete } from '@mui/icons-material';\r\nimport { memo, useEffect } from 'react';\r\nimport { fetchLink } from '../../../../Components/fetchComponent';\r\nimport { useState } from 'react';\r\n\r\nconst SourceItems = memo(function SourceItems({\r\n    row,\r\n    index,\r\n    products,\r\n    uom,\r\n    godown,\r\n    changeSourceValue,\r\n    removeRow,\r\n}) {\r\n    const [batchDetails, setBatchDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(row?.Sour_Item_Id)) return;\r\n        fetchLink({\r\n            address: `inventory/batchMaster/stockBalance?Product_Id=${row?.Sour_Item_Id}`\r\n        }).then(\r\n            data => setBatchDetails(data.success ? data.data : [])\r\n        ).catch(() => setBatchDetails([]));\r\n    }, [row?.Sour_Item_Id]);\r\n\r\n    return (\r\n        <tr>\r\n            <td className='fa-13'>{index + 1}</td>\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Sour_Item_Id, label: row?.Sour_Item_Name }}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Item_Id', e.value)}\r\n                    options={products.map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))}\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Item\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Qty ?? \"\"}\r\n                    required\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Qty', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <select\r\n                    value={row?.Sour_Unit_Id ?? \"\"}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Unit_Id', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                    style={{ minWidth: '40px' }}\r\n                >\r\n                    <option value=\"\" disabled>Select Unit</option>\r\n                    {uom.map((u, ind) => (\r\n                        <option key={u.Unit_Id ?? ind} value={u.Unit_Id}>{u.Units}</option>\r\n                    ))}\r\n                </select>\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Rate ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Rate', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Amt ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Amt', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Sour_Goodown_Id, label: row?.Godown_Name }}\r\n                    onChange={e => {\r\n                        changeSourceValue(index, 'Sour_Goodown_Id', e.value);\r\n                        changeSourceValue(index, 'Godown_Name', e.label);\r\n                        changeSourceValue(index, 'Sour_Batch_Lot_No', '');\r\n                    }}\r\n                    options={godown.map(g => ({ value: g.Godown_Id, label: g.Godown_Name }))}\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Godown\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Sour_Batch_Lot_No, label: row?.Sour_Batch_Lot_No }}\r\n                    onChange={e => {\r\n                        const selectedBatch = batchDetails.find(b => b.id === e.value);\r\n                        changeSourceValue(index, 'Sour_Batch_Lot_No', selectedBatch?.batch || '');\r\n                        changeSourceValue(index, 'Sour_Goodown_Id', selectedBatch?.godown_id || '');\r\n                        changeSourceValue(index, 'Godown_Name', selectedBatch?.godownName || '');\r\n                    }}\r\n                    options={\r\n                        batchDetails\r\n                            .filter(b => \r\n                                checkIsNumber(row?.Sour_Goodown_Id, 1) \r\n                                ? isEqualNumber(b.godown_id, row?.Sour_Goodown_Id)\r\n                                : true\r\n                            )\r\n                            .map(b => ({ value: b.id, label: `${b?.batch} (${toNumber(b?.pendingQuantity)})` }))\r\n                    }\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Godown\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                <IconButton color=\"error\" size=\"small\" onClick={removeRow}>\r\n                    <Delete className=\"fa-20\" />\r\n                </IconButton>\r\n            </td>\r\n        </tr>\r\n    );\r\n});\r\n\r\nconst ConsumptionOfProcessing = ({\r\n    sourceList = [],\r\n    setSourceList,\r\n    products = [],\r\n    uom = [],\r\n    godown = [],\r\n}) => {\r\n\r\n    const changeSourceValue = (rowIndex, key, value) => {\r\n        setSourceList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Sour_Item_Id': {\r\n                            const newItem = { ...item, Sour_Item_Id: value };\r\n                            newItem.Sour_Item_Name = products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Unit_Id': {\r\n                            const newItem = { ...item, Sour_Unit_Id: value };\r\n                            newItem.Sour_Unit = uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Qty': {\r\n                            const newItem = { ...item, Sour_Qty: value };\r\n                            if (item.Sour_Rate) {\r\n                                newItem.Sour_Amt = Multiplication(item.Sour_Rate, value);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Rate = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Rate': {\r\n                            const newItem = { ...item, Sour_Rate: value };\r\n                            if (item.Sour_Qty) {\r\n                                newItem.Sour_Amt = Multiplication(value, item.Sour_Qty);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Qty = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Amt': {\r\n                            const newItem = { ...item, Sour_Amt: value };\r\n                            if (checkIsNumber(item.Sour_Qty)) {\r\n                                newItem.Sour_Rate = Division(value, item.Sour_Qty);\r\n                            } else if (checkIsNumber(item.Sour_Rate)) {\r\n                                newItem.Sour_Qty = Division(value, item.Sour_Rate);\r\n                            } else {\r\n                                newItem.Sour_Rate = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const addRow = () => {\r\n        setSourceList(prev => [\r\n            ...prev,\r\n            { _rowId: crypto.randomUUID(), ...initialSoruceValue }\r\n        ]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 p-2 mb-2\">\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h5 className=\"flex-grow-1 \">\r\n                    CONSUMPTION\r\n                </h5>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={addRow}\r\n                >Add</Button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"fa-13\">Sno</th>\r\n                            <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Unit</th>\r\n                            <th className=\"fa-13\">Rate</th>\r\n                            <th className=\"fa-13\">Amount</th>\r\n                            <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Batch Lot No</th>\r\n                            <th className=\"fa-13\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sourceList.map((row, index) => (\r\n                            <SourceItems\r\n                                key={row._rowId ?? index}\r\n                                row={row}\r\n                                index={index}\r\n                                products={products}\r\n                                uom={uom}\r\n                                godown={godown}\r\n                                changeSourceValue={changeSourceValue}\r\n                                removeRow={() =>\r\n                                    setSourceList(list => list.filter((_, i) => i !== index))\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-end\">\r\n                <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                    <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                    {sourceList.reduce((acc, item) => {\r\n                        return checkIsNumber(item?.Sour_Item_Id) ? Addition(acc, item.Sour_Qty) : acc;\r\n                    }, 0)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsumptionOfProcessing;","// DestinationOfProcessing.jsx\r\nimport { memo } from \"react\";\r\nimport RequiredStar from \"../../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport { customSelectStyles } from \"../../../../Components/tablecolumn\";\r\nimport {\r\n    Addition,\r\n    checkIsNumber,\r\n    Division,\r\n    isEqualNumber,\r\n    Multiplication,\r\n    onlynum,\r\n} from \"../../../../Components/functions\";\r\nimport { initialDestinationValue } from \"./variables\";\r\n\r\nconst ProductionOfProcessing = ({\r\n    destinationList = [],\r\n    setDestinationList,\r\n    products = [],\r\n    uom = [],\r\n    godown = [],\r\n}) => {\r\n\r\n    const addRow = () => {\r\n        const _rowId =\r\n            (typeof crypto !== \"undefined\" &&\r\n                crypto.randomUUID &&\r\n                crypto.randomUUID()) ||\r\n            String(Date.now()) + Math.random().toString(36).slice(2);\r\n\r\n        setDestinationList((prev) => [\r\n            ...prev,\r\n            { _rowId, ...initialDestinationValue },\r\n        ]);\r\n    };\r\n\r\n    const changeDestinationValues = (rowIndex, key, value) => {\r\n        setDestinationList((prev) =>\r\n            prev.map((item, index) => {\r\n                if (!isEqualNumber(index, rowIndex)) return item;\r\n\r\n                switch (key) {\r\n                    case \"Dest_Item_Id\": {\r\n                        const newItem = { ...item, Dest_Item_Id: value };\r\n                        newItem.Dest_Item_Name =\r\n                            products?.find((pro) =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? \"Not available\";\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Unit_Id\": {\r\n                        const newItem = { ...item, Dest_Unit_Id: value };\r\n                        newItem.Dest_Unit =\r\n                            uom?.find((u) => isEqualNumber(u?.Unit_Id, value))\r\n                                ?.Units ?? \"Not available\";\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Qty\": {\r\n                        const newItem = { ...item, Dest_Qty: value };\r\n                        if (item.Dest_Rate) {\r\n                            newItem.Dest_Amt = Multiplication(item.Dest_Rate, value);\r\n                        } else if (item.Dest_Amt) {\r\n                            newItem.Dest_Rate = Division(item.Dest_Amt, value);\r\n                        } else {\r\n                            newItem.Dest_Amt = \"\";\r\n                            newItem.Dest_Rate = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Rate\": {\r\n                        const newItem = { ...item, Dest_Rate: value };\r\n                        if (item.Dest_Qty) {\r\n                            newItem.Dest_Amt = Multiplication(value, item.Dest_Qty);\r\n                        } else if (item.Dest_Amt) {\r\n                            newItem.Dest_Qty = Division(item.Dest_Amt, value);\r\n                        } else {\r\n                            newItem.Dest_Amt = \"\";\r\n                            newItem.Dest_Qty = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Amt\": {\r\n                        const newItem = { ...item, Dest_Amt: value };\r\n                        if (checkIsNumber(item.Dest_Qty)) {\r\n                            newItem.Dest_Rate = Division(value, item.Dest_Qty);\r\n                        } else if (checkIsNumber(item.Dest_Rate)) {\r\n                            newItem.Dest_Qty = Division(value, item.Dest_Rate);\r\n                        } else {\r\n                            newItem.Dest_Rate = \"\";\r\n                            newItem.Dest_Qty = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    default:\r\n                        return { ...item, [key]: value };\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12 p-2 mb-2\">\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h5 className=\"flex-grow-1 \">PRODUCTION</h5>\r\n                <Button variant=\"outlined\" color=\"primary\" type=\"button\" onClick={addRow}>\r\n                    Add\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"fa-13\">Sno</th>\r\n                            <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Unit</th>\r\n                            <th className=\"fa-13\">Rate</th>\r\n                            <th className=\"fa-13\">Amount</th>\r\n                            <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Batch Lot No</th>\r\n                            <th className=\"fa-13\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {destinationList.map((row, index) => (\r\n                            <tr key={row._rowId ?? index}>\r\n                                <td className=\"fa-13\">{index + 1}</td>\r\n\r\n                                <td className=\"fa-13 p-0\" style={{ minWidth: \"200px\" }}>\r\n                                    <Select\r\n                                        value={{ value: row?.Dest_Item_Id, label: row?.Dest_Item_Name }}\r\n                                        onChange={(e) => changeDestinationValues(index, \"Dest_Item_Id\", e.value)}\r\n                                        options={\r\n                                            products.map((pro) => ({\r\n                                                value: pro.Product_Id,\r\n                                                label: pro.Product_Name\r\n                                            }))\r\n                                        }\r\n                                        menuPortalTarget={document.body}\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable\r\n                                        placeholder=\"Select Item\"\r\n                                        maxMenuHeight={300}\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 vctr\">\r\n                                    <input\r\n                                        value={row?.Dest_Qty ?? \"\"}\r\n                                        required\r\n                                        onInput={onlynum}\r\n                                        onChange={(e) => changeDestinationValues(index, \"Dest_Qty\", e.target.value)}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 vctr\">\r\n                                    <select\r\n                                        value={row?.Dest_Unit_Id ?? \"\"}\r\n                                        onChange={(e) =>\r\n                                            changeDestinationValues(index, \"Dest_Unit_Id\", e.target.value)\r\n                                        }\r\n                                        className=\"cus-inpt p-2\"\r\n                                        style={{ minWidth: \"40px\" }}\r\n                                    >\r\n                                        <option value=\"\" disabled>\r\n                                            Select Unit\r\n                                        </option>\r\n                                        {uom.map((u, ind) => (\r\n                                            <option key={u.Unit_Id ?? ind} value={u.Unit_Id}>\r\n                                                {u.Units}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 vctr\">\r\n                                    <input\r\n                                        value={row?.Dest_Rate ?? \"\"}\r\n                                        onInput={onlynum}\r\n                                        onChange={(e) => changeDestinationValues(index, \"Dest_Rate\", e.target.value)}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 vctr\">\r\n                                    <input\r\n                                        value={row?.Dest_Amt ?? \"\"}\r\n                                        onInput={onlynum}\r\n                                        onChange={(e) => changeDestinationValues(index, \"Dest_Amt\", e.target.value)}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                                    <Select\r\n                                        value={{ value: row?.Dest_Goodown_Id, label: row?.Godown_Name }}\r\n                                        onChange={e => {\r\n                                            changeDestinationValues(index, 'Dest_Goodown_Id', e.value);\r\n                                            changeDestinationValues(index, 'Godown_Name', e.label);\r\n                                        }}\r\n                                        options={godown.map(g => ({ value: g.Godown_Id, label: g.Godown_Name }))}\r\n                                        menuPortalTarget={document.body}\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable\r\n                                        placeholder=\"Select Godown\"\r\n                                        maxMenuHeight={300}\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 vctr\">\r\n                                    <input\r\n                                        value={row?.Dest_Batch_Lot_No ?? \"\"}\r\n                                        onChange={(e) =>\r\n                                            changeDestinationValues(index, \"Dest_Batch_Lot_No\", e.target.value)\r\n                                        }\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n\r\n                                <td className=\"fa-13 px-1 py-0 p-0 vctr text-center\">\r\n                                    <IconButton \r\n                                        color=\"error\" \r\n                                        size=\"small\" \r\n                                        onClick={() => setDestinationList((list) => list.filter((_, i) => i !== index))}\r\n                                    >\r\n                                        <Delete className=\"fa-20\" />\r\n                                    </IconButton>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"text-end\">\r\n                <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                    <span className=\"py-2 pe-2\">Total Quantity: </span>\r\n                    {destinationList.reduce((acc, item) => {\r\n                        return checkIsNumber(item?.Dest_Item_Id)\r\n                            ? Addition(acc, item.Dest_Qty)\r\n                            : acc;\r\n                    }, 0)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductionOfProcessing;","import { useEffect, useState } from \"react\"\r\nimport {\r\n    Addition, Division, ISOString, Multiplication, checkIsNumber,\r\n    formatSQLDateTimeObjectToInputDateTime,\r\n    isEqualNumber, isGraterNumber, isValidObject,\r\n    toArray\r\n} from \"../../../Components/functions\"\r\nimport { Button, Card, CardContent, IconButton } from \"@mui/material\"\r\nimport { fetchLink } from \"../../../Components/fetchComponent\"\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { initialStockJournalInfoValues, initialDestinationValue, initialSoruceValue, initialStaffInvolvedValue } from './addProcessingComp/variables'\r\nimport ConsumptionOfProcessing from './addProcessingComp/consumption'\r\nimport ProductionOfProcessing from \"./addProcessingComp/production\";\r\n\r\nconst StockManagementCreate = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        godown: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: []\r\n    });\r\n    const [isViewOnly, setIsViewOnly] = useState(false);\r\n    const [stockJorunalInfo, setStockJorunalInfo] = useState(initialStockJournalInfoValues);\r\n    const [sourceList, setSourceList] = useState([]);\r\n    const [destinationList, setDestinationList] = useState([]);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products/allProducts` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    godown: godownLocations,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const source = stateDetails?.SourceDetails;\r\n        const destination = stateDetails?.DestinationDetails;\r\n        const staff = stateDetails?.StaffsDetails;\r\n        if (\r\n            isValidObject(stateDetails)\r\n            && Array.isArray(source)\r\n            && Array.isArray(destination)\r\n            && Array.isArray(staff)\r\n        ) {\r\n            const isEditable = stateDetails?.isEditable ? true : false;\r\n            setIsViewOnly(!isEditable);\r\n\r\n            setStockJorunalInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                        if (key === 'Process_date') return [key, stateDetails[key] ? ISOString(stateDetails[key]) : value]\r\n                        if (key === 'StartDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        if (key === 'EndDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        return [key, stateDetails[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n\r\n            setSourceList(\r\n                source.map(sourceData => Object.fromEntries(\r\n                    Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                        if (key === 'Sour_Item_Name') return [key, sourceData['Product_Name'] ? sourceData['Product_Name'] : value]\r\n                        return [key, sourceData[key] ?? value]\r\n                    })\r\n                ))\r\n            )\r\n\r\n            setDestinationList(\r\n                destination.map(destinationData => Object.fromEntries(\r\n                    Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                        if (key === 'Dest_Item_Name') return [key, destinationData['Product_Name'] ? destinationData['Product_Name'] : value]\r\n                        return [key, destinationData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n\r\n            setStaffInvolvedList(\r\n                staff.map(staffData => Object.fromEntries(\r\n                    Object.entries(initialStaffInvolvedValue).map(([key, value]) => {\r\n                        if (key === 'Staff_Name') return [key, staffData['EmpNameGet'] ? staffData['EmpNameGet'] : value]\r\n                        return [key, staffData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const resetForm = () => {\r\n        setStockJorunalInfo(initialStockJournalInfoValues)\r\n        setSourceList([])\r\n        setDestinationList([])\r\n        setStaffInvolvedList([])\r\n    }\r\n\r\n    const saveStockJournal = () => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing`,\r\n            method: checkIsNumber(stockJorunalInfo?.PR_Id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                ...stockJorunalInfo,\r\n                Source: sourceList.filter(item => checkIsNumber(item?.Sour_Item_Id) && isGraterNumber(item.Sour_Qty, 0)),\r\n                Destination: destinationList.filter(item => checkIsNumber(item?.Dest_Item_Id) && isGraterNumber(item.Dest_Qty, 0)),\r\n                StaffInvolve: staffInvolvedList.filter(item => checkIsNumber(item?.Staff_Id)),\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                resetForm();\r\n                toast.success(data?.message || 'Saved');\r\n            } else {\r\n                toast.error(data?.message || 'Failed');\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '80vh' }}>\r\n                    <h5 className=\"text-center mb-2 border-bottom pb-2\">STOCK MANAGEMENT</h5>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        saveStockJournal();\r\n                    }}>\r\n                        <div className=\"row \">\r\n                            {/* Staff involved Info */}\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                        <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            type=\"button\"\r\n                                            disabled={isViewOnly}\r\n                                            onClick={() => setStaffInvolvedList([...staffInvolvedList, { ...initialStaffInvolvedValue }])}\r\n                                        >Add</Button>\r\n                                    </div>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Name</th>\r\n                                                <th className=\"fa-13\">Type</th>\r\n                                                <th className=\"fa-13\">#</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {staffInvolvedList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                                    <td className='fa-13 w-100 p-0'>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Staff_Id, label: row?.Staff_Name }}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = baseData.staff.find(c => isEqualNumber(c.Cost_Center_Id, e.value))\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id:\r\n                                                                                checkIsNumber(item.Staff_Type_Id)\r\n                                                                                    ? item.Staff_Type_Id\r\n                                                                                    : checkIsNumber(staff.User_Type)\r\n                                                                                        ? staff.User_Type\r\n                                                                                        : 0,\r\n                                                                            Staff_Id: e.value,\r\n                                                                            Staff_Name: e.label\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            options={\r\n                                                                [...baseData.staff.filter(fil => (\r\n                                                                    staffInvolvedList.findIndex(st => (\r\n                                                                        isEqualNumber(st.Staff_Id, fil.Cost_Center_Id)\r\n                                                                    )) === -1 ? true : false\r\n                                                                ))].map(st => ({\r\n                                                                    value: st.Cost_Center_Id,\r\n                                                                    label: st.Cost_Center_Name\r\n                                                                }))\r\n                                                            }\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Staff\"}\r\n                                                        />\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '80px' }}>\r\n                                                        <select\r\n                                                            value={row?.Staff_Type_Id}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id: e.target.value\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        >\r\n                                                            <option value=\"\">Select</option>\r\n                                                            {baseData.staffType.map((st, sti) =>\r\n                                                                <option value={st?.Cost_Category_Id} key={sti}>{st?.Cost_Category}</option>\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0'>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setStaffInvolvedList(prev => {\r\n                                                                    return prev.filter((_, filIndex) => index !== filIndex);\r\n                                                                });\r\n                                                            }}\r\n                                                            size='small'\r\n                                                        >\r\n                                                            <Delete className=\"fa-20\" color='error' />\r\n                                                        </IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Stock Journal Details */}\r\n                            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0 fa-12\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"row px-3\">\r\n                                        {/* Common Details - 1 */}\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Branch</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Branch_Id}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Branch_Id: e.target.value })}\r\n                                                placeholder={\"Select Branch\"}\r\n                                                className=\"cus-inpt mb-2 p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Branch</option>\r\n                                                {baseData.branch.map((br, bi) => (\r\n                                                    <option key={bi} value={br.BranchId}>{br.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Date</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Process_date}\r\n                                                type=\"date\"\r\n                                                disabled={isViewOnly}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Process_date: e.target.value })}\r\n                                                className=\"cus-inpt p-2 mb-2\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Voucher Type</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.VoucherType}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, VoucherType: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\">Select Voucher</option>\r\n                                                {baseData.voucherType.filter(fil => fil.Type === 'PROCESSING').map((vt, vInd) => (\r\n                                                    <option value={vt.Vocher_Type_Id} key={vInd}>{vt.Voucher_Type}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Machine Number</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Machine_No}\r\n                                                placeholder=\"Machine Number\"\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Machine_No: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Activity Location</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Godownlocation}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Godownlocation: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                            >\r\n                                                <option value={''} disabled>select godown</option>\r\n                                                {baseData.godown.map((god, godInd) => (\r\n                                                    <option value={god.Godown_Id} key={godInd}>{god.Godown_Name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Order Status</label>\r\n                                            <select\r\n                                                className=\"cus-inpt p-2\"\r\n                                                value={stockJorunalInfo?.PR_Status}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, PR_Status: e.target.value }))}\r\n                                            >\r\n                                                <option value=\"New\">New</option>\r\n                                                <option value=\"On Process\">On Process</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                <option value=\"Canceled\">Canceled</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {/* Common Details - 2 */}\r\n                                        <div className=\"col-12 p-2 \">\r\n\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Time-Taken</th>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Meter-Reading</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => {\r\n                                                                        setStockJorunalInfo(pre => ({ ...pre, StartDateTime: e.target.value }));\r\n                                                                    }}\r\n                                                                    value={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EndDateTime: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EndDateTime}\r\n                                                                    min={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, ST_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.ST_Reading}\r\n                                                                    min={0}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2000\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EN_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EN_Reading}\r\n                                                                    min={stockJorunalInfo?.ST_Reading}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2200\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n\r\n                                            <textarea\r\n                                                className=\"cus-inpt\"\r\n                                                placeholder=\"Narration\"\r\n                                                rows={5}\r\n                                                disabled={isViewOnly}\r\n                                                value={stockJorunalInfo.Narration}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, Narration: e.target.value }))}\r\n                                            ></textarea>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Source Details */}\r\n                            <ConsumptionOfProcessing\r\n                                sourceList={sourceList}\r\n                                setSourceList={setSourceList}\r\n                                products={toArray(baseData?.products)}\r\n                                uom={toArray(baseData?.uom)}\r\n                                godown={toArray(baseData?.godown)}\r\n                            />\r\n\r\n                            {/* Destination Entry */}\r\n                            <ProductionOfProcessing\r\n                                destinationList={destinationList}\r\n                                setDestinationList={setDestinationList}\r\n                                products={toArray(baseData?.products)}\r\n                                uom={toArray(baseData?.uom)}\r\n                                godown={toArray(baseData?.godown)}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"my-2 d-flex justify-content-end align-items-center \">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                color=\"secondary\"\r\n                                disabled={isViewOnly}\r\n                                onClick={resetForm}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\" className=\"ms-2\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={isViewOnly}\r\n                            >\r\n                                {checkIsNumber(stockJorunalInfo?.STJ_Id) ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockManagementCreate;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","user","getSessionUser","initialStockJournalInfoValues","PR_Id","PR_Inv_Id","Year_Id","Branch_Id","Process_no","P_No","Godownlocation","BillType","VoucherType","Process_date","ISOString","Machine_No","StartDateTime","EndDateTime","ST_Reading","EN_Reading","Total_Reading","Narration","PR_Status","Created_By","Updated_By","initialSoruceValue","PRS_Id","Sour_Item_Id","Sour_Item_Name","Sour_Goodown_Id","Godown_Name","Sour_Batch_Lot_No","Sour_Qty","Sour_Unit_Id","Sour_Unit","Sour_Rate","Sour_Amt","initialDestinationValue","Dest_Item_Id","Dest_Item_Name","Dest_Goodown_Id","Dest_Batch_Lot_No","Dest_Qty","Dest_Unit_Id","Dest_Unit","Dest_Rate","Dest_Amt","initialStaffInvolvedValue","S_Id","Staff_Id","Staff_Name","Staff_Type_Id","SourceItems","memo","_ref","_row$Sour_Qty","_row$Sour_Unit_Id","_row$Sour_Rate","_row$Sour_Amt","row","index","products","uom","godown","changeSourceValue","removeRow","batchDetails","setBatchDetails","useState","useEffect","checkIsNumber","fetchLink","then","data","success","catch","_jsxs","className","minWidth","Select","value","label","onChange","e","options","map","pro","Product_Id","Product_Name","menuPortalTarget","document","body","styles","isSearchable","placeholder","maxMenuHeight","required","onInput","onlynum","target","disabled","u","ind","_u$Unit_Id","Unit_Id","Units","g","Godown_Id","selectedBatch","find","b","batch","godown_id","godownName","filter","isEqualNumber","toNumber","pendingQuantity","IconButton","size","onClick","Delete","_ref2","sourceList","setSourceList","rowIndex","key","prev","item","_products$find$Produc","_products$find","newItem","_uom$find$Units","_uom$find","Multiplication","Division","Button","type","addRow","_rowId","crypto","randomUUID","_row$_rowId","list","_","i","reduce","acc","Addition","destinationList","setDestinationList","changeDestinationValues","String","Date","now","Math","random","toString","slice","_row$Dest_Qty","_row$Dest_Unit_Id","_row$Dest_Rate","_row$Dest_Amt","_row$Dest_Batch_Lot_N","loadingOn","loadingOff","stateDetails","useLocation","baseData","setBaseData","branch","voucherType","staff","staffType","isViewOnly","setIsViewOnly","stockJorunalInfo","setStockJorunalInfo","staffInvolvedList","setStaffInvolvedList","async","branchResponse","productsResponse","godownLocationsResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","Promise","all","branchData","sort","a","BranchName","localeCompare","productsData","godownLocations","Voucher_Type","uomData","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","pre","console","error","fetchData","source","SourceDetails","destination","DestinationDetails","StaffsDetails","isValidObject","Array","isArray","isEditable","Object","fromEntries","entries","_stateDetails$key","formatSQLDateTimeObjectToInputDateTime","sourceData","_ref3","_sourceData$key","destinationData","_ref4","_destinationData$key","_ref5","_staffData$key","resetForm","_Fragment","Card","CardContent","sx","minHeight","onSubmit","preventDefault","method","bodyData","Source","isGraterNumber","Destination","StaffInvolve","toast","message","finally","height","c","Cost_Center_Id","User_Type","fil","findIndex","st","maxWidth","sti","Cost_Category_Id","filIndex","br","bi","BranchId","Type","vt","vInd","Vocher_Type_Id","god","godInd","colSpan","min","ConsumptionOfProcessing","toArray","ProductionOfProcessing","STJ_Id","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","_typeof","o","Symbol","iterator","constructor","prototype"],"sourceRoot":""}