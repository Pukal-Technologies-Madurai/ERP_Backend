{"version":3,"file":"static/js/8538.38eacd4d.chunk.js","mappings":"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","sources":["Pages/Analytics/dataComparison/PurchaseComparison/invoiceBasedSalesComparison.jsx","Pages/Analytics/dataComparison/PurchaseComparison/purchaseTabs.jsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../../../Components/fetchComponent\";\r\nimport { checkIsNumber, getPreviousDate, isEqualNumber, ISOString, stringCompare, toArray } from \"../../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../../Components/filterableTable2\";\r\nimport { comparisonColorCode, fieldMap } from \"../variable\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Close, Search, Visibility } from \"@mui/icons-material\";\r\n\r\n\r\nconst InvoiceBasedSalesComparison = ({ loadingOn, loadingOff, Fromdate, Todate }) => {\r\n    const [ERPData, setERPData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        comparisonDialog: false,\r\n        excluedeSyced: 1\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `\r\n                analytics/dataComparison/purchaseInvoice/invoiceBased?\r\n                Fromdate=${Fromdate}&\r\n                Todate=${Todate}&\r\n                excluedeSyced=${filters.excluedeSyced}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const erpData = toArray(data?.data);\r\n                setERPData(erpData)\r\n            } else {\r\n                setERPData([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [Fromdate, Todate, filters.excluedeSyced])\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Purchase unsynced list\"\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                EnableSerialNumber\r\n                ButtonArea={\r\n                    <>\r\n                        <select\r\n                            className=\"cus-inpt p-2 w-auto\"\r\n                            value={filters.excluedeSyced}\r\n                            onChange={e => setFilters(pre => ({ ...pre, excluedeSyced: e.target.value }))}\r\n                        >\r\n                            <option value=\"0\">Show Synced</option>\r\n                            <option value=\"1\">Exclude Synced</option>\r\n                        </select>\r\n                        {/* <label className=\"me-1\">Error Type:</label> */}\r\n                    </>\r\n                }\r\n                dataArray={ERPData}\r\n                columns={[\r\n                    createCol('Po_Entry_Date', 'date', 'Date'),\r\n                    createCol('Po_Inv_No', 'string', 'Voucher Number'),\r\n                    createCol('Retailer_Name', 'string', 'Ledger'),\r\n                    createCol('Total_Invoice_value', 'number', 'Invoice Value'),\r\n                    createCol('erpChildCount', 'number', 'ERP-Products'),\r\n                    createCol('erpChildQuantity', 'number', 'ERP Bill Quantity'),\r\n                    createCol('tallyChildCount', 'number', 'Tally-Products'),\r\n                    createCol('tallyChildQuantity', 'number', 'Tally Bill Quantity'),\r\n                    createCol('RowStatus', 'string', 'Reason'),\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBasedSalesComparison;","import TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Box, IconButton, Tab } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { getPreviousDate, ISOString } from '../../../../Components/functions';\r\nimport { Search } from '@mui/icons-material';\r\nimport InvoiceBasedSalesComparison from './invoiceBasedSalesComparison';\r\nimport ItemWiseSalesComparison from '../SalesComparison/itemWiseComparison';\r\n\r\nconst PurchaseComparisonTabs = ({ loadingOn, loadingOff }) => {\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const [dateFilter, setDateFilter] = useState({\r\n        Fromdate: getPreviousDate(10),\r\n        Todate: ISOString(),\r\n        FilterFromDate: getPreviousDate(10),\r\n        FilterTodate: ISOString(),\r\n    })\r\n\r\n    const tabData = [\r\n        {\r\n            name: 'Item based',\r\n            component: (\r\n                <ItemWiseSalesComparison\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                    module='Purchase'\r\n                    api='purchaseInvoice'\r\n                />\r\n            )\r\n        },\r\n        {\r\n            name: 'InvoiceId based',\r\n            component: (\r\n                <InvoiceBasedSalesComparison\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                />\r\n            )\r\n        },\r\n        // {\r\n        //     name: 'AlterId based',\r\n        //     component: (\r\n        //         <ErpAndTallySalesComparison\r\n        //             loadingOn={loadingOn}\r\n        //             loadingOff={loadingOff}\r\n        //             Fromdate={dateFilter.Fromdate}\r\n        //             Todate={dateFilter.Todate}\r\n        //         />\r\n        //     )\r\n        // },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"d-flex align-items-center flex-wrap mb-3\">\r\n                <label htmlFor=\"from\" className='me-1 fw-bold '>Fromdate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='from'\r\n                    className='cus-inpt p-2 w-auto me-2'\r\n                    value={dateFilter.FilterFromDate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterFromDate: e.target.value }))}\r\n                />\r\n                <label htmlFor=\"to\" className='me-1 fw-bold '>Todate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='to'\r\n                    className='cus-inpt p-2 w-auto'\r\n                    value={dateFilter.FilterTodate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterTodate: e.target.value }))}\r\n                />\r\n                <IconButton\r\n                    size='small'\r\n                    onClick={() => setDateFilter(pre => ({\r\n                        ...pre,\r\n                        Fromdate: pre.FilterFromDate ? pre.FilterFromDate : pre.Fromdate,\r\n                        Todate: pre.FilterTodate ? pre.FilterTodate : pre.Todate\r\n                    }))}\r\n                ><Search /></IconButton>\r\n            </div>\r\n\r\n            <TabContext value={tabValue}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList\r\n                        indicatorColor='transparant'\r\n                        onChange={(e, n) => setTabValue(n)}\r\n                        variant='scrollable'\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {tabData.map(\r\n                            (tab, tabInd) => (\r\n                                <Tab\r\n                                    key={tabInd}\r\n                                    sx={tabValue === (tabInd + 1) ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                    label={tab.name}\r\n                                    value={tabInd + 1}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </TabList>\r\n                </Box>\r\n\r\n                {tabData.map((tab, tabInd) => (\r\n                    <TabPanel value={tabInd + 1} sx={{ p: 0, pt: 2 }} key={tabInd}>\r\n                        {tab.component}\r\n                    </TabPanel>\r\n                ))}\r\n\r\n            </TabContext>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseComparisonTabs;"],"names":["_ref","loadingOn","loadingOff","Fromdate","Todate","ERPData","setERPData","useState","filters","setFilters","comparisonDialog","excluedeSyced","useEffect","fetchLink","address","concat","then","data","success","erpData","toArray","catch","e","console","error","_jsx","_Fragment","children","FilterableTable","title","headerFontSizePx","bodyFontSizePx","EnableSerialNumber","ButtonArea","_jsxs","className","value","onChange","pre","_objectSpread","target","dataArray","columns","createCol","tabValue","setTabValue","dateFilter","setDateFilter","getPreviousDate","ISOString","FilterFromDate","FilterTodate","tabData","name","component","ItemWiseSalesComparison","module","api","InvoiceBasedSalesComparison","htmlFor","type","id","IconButton","size","onClick","Search","TabContext","Box","sx","borderBottom","borderColor","TabList","indicatorColor","n","variant","scrollButtons","map","tab","tabInd","Tab","backgroundColor","label","TabPanel","p","pt"],"sourceRoot":""}